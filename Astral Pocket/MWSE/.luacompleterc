{
  "global":{
    "fields":{
      "string":{
        "fields":{
          "sub":{
            "argsDisplay":"s, i [, j]",
            "type":"function",
            "description":"Returns the substring of s that starts at i and continues until j; i and j can be negative. If j is absent, then it is assumed to be equal to -1 (which is the same as the string length). In particular, the call string.sub(s,1,j) returns a prefix of s with length j, and string.sub(s, -i) returns a suffix of s with length i.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-string.sub",
            "args":[{
                "name":"s"
              },{
                "name":"i"
              }]
          },
          "startswith":{
            "type":"function",
            "description":"Returns true if a string begins with a given pattern.",
            "args":[{
                "name":"s"
              },{
                "name":"pattern"
              }],
            "returnTypes":[{
                "type":"boolean"
              }],
            "argTypes":["string","string"]
          },
          "endswith":{
            "type":"function",
            "description":"Returns true if a string ends with a given pattern.",
            "args":[{
                "name":"s"
              },{
                "name":"pattern"
              }],
            "returnTypes":[{
                "type":"boolean"
              }],
            "argTypes":["string","string"]
          },
          "upper":{
            "argsDisplay":"s",
            "type":"function",
            "description":"Receives a string and returns a copy of this string with all lowercase letters changed to uppercase. All other characters are left unchanged. The definition of what a lowercase letter is depends on the current locale.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-string.upper",
            "args":[{
                "name":"s"
              }]
          },
          "char":{
            "argsDisplay":"···",
            "type":"function",
            "description":"Receives zero or more integers. Returns a string with length equal to the number of arguments, in which each character has the internal numerical code equal to its corresponding argument.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-string.char",
            "args":[]
          },
          "rep":{
            "argsDisplay":"s, n [, sep]",
            "type":"function",
            "description":"Returns a string that is the concatenation of n copies of the string s separated by the string sep. The default value for sep is the empty string (that is, no separator).",
            "link":"https://www.lua.org/manual/5.2/manual.html#pdf-string.rep",
            "args":[{
                "name":"s"
              },{
                "name":"n"
              }]
          },
          "find":{
            "argsDisplay":"s, pattern [, init [, plain]]",
            "type":"function",
            "description":"Looks for the first match of pattern in the string s. If it finds a match, then find returns the indices of s where this occurrence starts and ends; otherwise, it returns nil. A third, optional numerical argument init specifies where to start the search; its default value is 1 and can be negative. A value of true as a fourth, optional argument plain turns off the pattern matching facilities, so the function does a plain \"find substring\" operation, with no characters in pattern being considered \"magic\". Note that if plain is given, then init must be given as well.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-string.find",
            "args":[{
                "name":"s"
              },{
                "name":"pattern"
              }]
          },
          "match":{
            "argsDisplay":"s, pattern [, init]",
            "type":"function",
            "description":"Looks for the first match of pattern in the string s. If it finds one, then match returns the captures from the pattern; otherwise it returns nil. If pattern specifies no captures, then the whole match is returned. A third, optional numerical argument init specifies where to start the search; its default value is 1 and can be negative.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-string.match",
            "args":[{
                "name":"s"
              },{
                "name":"pattern"
              }]
          },
          "gmatch":{
            "argsDisplay":"s, pattern",
            "type":"function",
            "description":"Returns an iterator function that, each time it is called, returns the next captures from pattern over string s. If pattern specifies no captures, then the whole match is produced in each call.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-string.gmatch",
            "args":[{
                "name":"s"
              },{
                "name":"pattern"
              }]
          },
          "dump":{
            "argsDisplay":"function [, strip]",
            "type":"function",
            "description":"Returns a string containing a binary representation of the given function, so that a later loadstring on this string returns a copy of the function. function must be a Lua function without upvalues.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-string.dump",
            "args":[{
                "name":"function"
              }]
          },
          "gsub":{
            "argsDisplay":"s, pattern, repl [, n]",
            "type":"function",
            "description":"Returns a copy of s in which all (or the first n, if given) occurrences of the pattern have been replaced by a replacement string specified by repl, which can be a string, a table, or a function. gsub also returns, as its second value, the total number of matches that occurred.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-string.gsub",
            "args":[{
                "name":"s"
              },{
                "name":"pattern"
              },{
                "name":"repl"
              }]
          },
          "reverse":{
            "argsDisplay":"s",
            "type":"function",
            "description":"Returns a string that is the string s reversed.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-string.reverse",
            "args":[{
                "name":"s"
              }]
          },
          "byte":{
            "argsDisplay":"s [, i [, j]]",
            "type":"function",
            "description":"Returns the internal numerical codes of the characters s[i], s[i+1], ···, s[j]. The default value for i is 1; the default value for j is i.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-string.byte",
            "args":[{
                "name":"s"
              }]
          },
          "format":{
            "argsDisplay":"formatstring, ···",
            "type":"function",
            "description":"Returns a formatted version of its variable number of arguments following the description given in its first argument (which must be a string). The format string follows the same rules as the ISO C function sprintf. The only differences are that the options/modifiers *, h, L, l, n, and p are not supported and that there is an extra option, q. The q option formats a string between double quotes, using escape sequences when necessary to ensure that it can safely be read back by the Lua interpreter. For instance, the call",
            "link":"https://www.lua.org/manual/5.2/manual.html#pdf-string.format",
            "args":[{
                "name":"formatstring"
              }]
          },
          "len":{
            "argsDisplay":"s",
            "type":"function",
            "description":"Receives a string and returns its length. The empty string \"\" has length 0. Embedded zeros are counted, so \"a\\000bc\\000\" has length 5.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-string.len",
            "args":[{
                "name":"s"
              }]
          },
          "lower":{
            "argsDisplay":"s",
            "type":"function",
            "description":"Receives a string and returns a copy of this string with all uppercase letters changed to lowercase. All other characters are left unchanged. The definition of what an uppercase letter is depends on the current locale.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-string.lower",
            "args":[{
                "name":"s"
              }]
          }
        },
        "type":"table",
        "description":"This library provides generic functions for string manipulation, such as finding and extracting substrings, and pattern matching. When indexing a string in Lua, the first character is at position 1 (not at 0, as in C). Indices are allowed to be negative and are interpreted as indexing backwards, from the end of the string. Thus, the last character is at position -1, and so on.",
        "link":"https://www.lua.org/manual/5.1/manual.html#5.4"
      },
      "xpcall":{
        "argsDisplay":"f, err [, arg1, ···]",
        "type":"function",
        "description":"This function is similar to pcall, except that you can set a new error handler.",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-xpcall",
        "args":[{
            "name":"f"
          },{
            "name":"err"
          }]
      },
      "package":{
        "fields":{
          "preload":{
            "type":"unknown",
            "description":"A table to store loaders for specific modules (see require).",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-package.preload"
          },
          "loadlib":{
            "argsDisplay":"libname, funcname",
            "type":"function",
            "description":"Dynamically links the host program with the C library libname.",
            "link":"https://www.lua.org/manual/5.2/manual.html#pdf-package.loadlib",
            "args":[{
                "name":"libname"
              },{
                "name":"funcname"
              }]
          },
          "loaded":{
            "type":"unknown",
            "description":"A table used by require to control which modules are already loaded. When you require a module modname and package.loaded[modname] is not false, require simply returns the value stored there.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-package.loaded"
          },
          "loaders":{
            "type":"unknown",
            "description":"A table used by require to control how to load modules.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-package.loaders"
          },
          "cpath":{
            "type":"unknown",
            "description":"The path used by require to search for a C loader.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-package.cpath"
          },
          "path":{
            "type":"unknown",
            "description":"The path used by require to search for a Lua loader.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-package.path"
          },
          "searchpath":{
            "argsDisplay":"name, path [, sep [, rep]]",
            "type":"function",
            "description":"Searches for the given name in the given path.",
            "link":"https://www.lua.org/manual/5.2/manual.html#pdf-package.searchpath",
            "args":[{
                "name":"name"
              },{
                "name":"path"
              }]
          },
          "seeall":{
            "argsDisplay":"module",
            "type":"function",
            "description":"Sets a metatable for module with its __index field referring to the global environment, so that this module inherits values from the global environment. To be used as an option to function module.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-package.seeall",
            "args":[{
                "name":"module"
              }]
          }
        },
        "type":"table",
        "description":"The package library provides basic facilities for loading and building modules in Lua. It exports two of its functions directly in the global environment: require and module. Everything else is exported in a table package.",
        "link":"https://www.lua.org/manual/5.1/manual.html#5.3"
      },
      "tostring":{
        "argsDisplay":"e",
        "type":"function",
        "description":"Receives an argument of any type and converts it to a string in a reasonable format. For complete control of how numbers are converted, use string.format.",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-tostring",
        "args":[{
            "name":"e"
          }]
      },
      "print":{
        "argsDisplay":"···",
        "type":"function",
        "description":"Receives any number of arguments, and prints their values to stdout, using the tostring function to convert them to strings. print is not intended for formatted output, but only as a quick way to show a value, typically for debugging. For formatted output, use string.format.",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-print",
        "args":[]
      },
      "os":{
        "fields":{
          "exit":{
            "argsDisplay":"[code [, close]",
            "type":"function",
            "description":"Calls the ISO C function exit to terminate the host program. If code is true, the returned status is EXIT_SUCCESS; if code is false, the returned status is EXIT_FAILURE; if code is a number, the returned status is this number. The default value for code is true.",
            "link":"https://www.lua.org/manual/5.2/manual.html#pdf-os.exit",
            "args":[]
          },
          "setlocale":{
            "argsDisplay":"locale [, category]",
            "type":"function",
            "description":"Sets the current locale of the program. locale is a string specifying a locale; category is an optional string describing which category to change: \"all\", \"collate\", \"ctype\", \"monetary\", \"numeric\", or \"time\"; the default category is \"all\". The function returns the name of the new locale, or nil if the request cannot be honored.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-os.setlocale",
            "args":[{
                "name":"locale"
              }]
          },
          "execute":{
            "argsDisplay":"[command]",
            "type":"function",
            "description":"This function is equivalent to the C function system. It passes command to be executed by an operating system shell. It returns a status code, which is system-dependent. If command is absent, then it returns nonzero if a shell is available and zero otherwise.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-os.execute",
            "args":[]
          },
          "getenv":{
            "argsDisplay":"varname",
            "type":"function",
            "description":"Returns the value of the process environment variable varname, or nil if the variable is not defined.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-os.getenv",
            "args":[{
                "name":"varname"
              }]
          },
          "difftime":{
            "argsDisplay":"t2, t1",
            "type":"function",
            "description":"Returns the number of seconds from time t1 to time t2. In POSIX, Windows, and some other systems, this value is exactly t2-t1.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-os.difftime",
            "args":[{
                "name":"t2"
              },{
                "name":"t1"
              }]
          },
          "remove":{
            "argsDisplay":"filename",
            "type":"function",
            "description":"Deletes the file or directory with the given name. Directories must be empty to be removed. If this function fails, it returns nil, plus a string describing the error.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-os.remove",
            "args":[{
                "name":"filename"
              }]
          },
          "time":{
            "argsDisplay":"[table]",
            "type":"function",
            "description":"Returns the current time when called without arguments, or a time representing the date and time specified by the given table. This table must have fields year, month, and day, and may have fields hour, min, sec, and isdst (for a description of these fields, see the os.date function).",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-os.time",
            "args":[]
          },
          "clock":{
            "argsDisplay":"",
            "type":"function",
            "description":"Returns an approximation of the amount in seconds of CPU time used by the program.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-os.clock",
            "args":[]
          },
          "tmpname":{
            "argsDisplay":"",
            "type":"function",
            "description":"Returns a string with a file name that can be used for a temporary file. The file must be explicitly opened before its use and explicitly removed when no longer needed.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-os.tmpname",
            "args":[]
          },
          "rename":{
            "argsDisplay":"oldname, newname",
            "type":"function",
            "description":"Renames file or directory named oldname to newname. If this function fails, it returns nil, plus a string describing the error.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-os.rename",
            "args":[{
                "name":"oldname"
              },{
                "name":"newname"
              }]
          },
          "date":{
            "argsDisplay":"[format [, time]]",
            "type":"function",
            "description":"Returns a string or a table containing date and time, formatted according to the given string format.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-os.date",
            "args":[]
          }
        },
        "type":"table",
        "description":"This library is implemented through table os.",
        "link":"https://www.lua.org/manual/5.1/manual.html#5.8"
      },
      "unpack":{
        "argsDisplay":"list [, i [, j]]",
        "type":"function",
        "description":"Returns the elements from the given table. This function is equivalent to  return list[i], list[i+1], ···, list[j]",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-unpack",
        "args":[{
            "name":"list"
          }]
      },
      "require":{
        "argsDisplay":"modname",
        "type":"function",
        "description":"Loads the given module. The function starts by looking into the package.loaded table to determine whether modname is already loaded. If it is, then require returns the value stored at package.loaded[modname]. Otherwise, it tries to find a loader for the module.",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-require",
        "args":[{
            "name":"modname"
          }]
      },
      "getfenv":{
        "argsDisplay":"[f]",
        "type":"function",
        "description":"Returns the current environment in use by the function. f can be a Lua function or a number that specifies the function at that stack level: Level 1 is the function calling getfenv. If the given function is not a Lua function, or if f is 0, getfenv returns the global environment. The default for f is 1.",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-getfenv",
        "args":[]
      },
      "pairs":{
        "argsDisplay":"t",
        "type":"function",
        "description":"Returns three values: the next function, the table t, and nil, so that the construction",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-pairs",
        "args":[{
            "name":"t"
          }]
      },
      "next":{
        "argsDisplay":"table [, index]",
        "type":"function",
        "description":"Allows a program to traverse all fields of a table. Its first argument is a table and its second argument is an index in this table. next returns the next index of the table and its associated value. When called with nil as its second argument, next returns an initial index and its associated value. When called with the last index, or with nil in an empty table, next returns nil. If the second argument is absent, then it is interpreted as nil. In particular, you can use next(t) to check whether a table is empty.",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-next",
        "args":[{
            "name":"table"
          }]
      },
      "assert":{
        "argsDisplay":"v [, message]",
        "type":"function",
        "description":"Issues an error when the value of its argument v is false (i.e., nil or false); otherwise, returns all its arguments. message is an error message; when absent, it defaults to \"assertion failed!\"",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-assert",
        "args":[{
            "name":"v"
          }]
      },
      "event":{
        "type":"table",
        "description":"The event library helps to instruct mwse to call a given function when a specific action is taken in the game.",
        "fields":{
          "clear":{
            "type":"function",
            "description":"Removes all callbacks registered for a given event.",
            "args":[{
                "name":"eventId"
              },{
                "name":"options",
                "displayName":"[options]"
              }],
            "argTypes":["string","table"]
          },
          "trigger":{
            "type":"function",
            "description":"Triggers an event. This can be used to trigger custom events with specific data.",
            "args":[{
                "name":"eventId"
              },{
                "name":"payload",
                "displayName":"[payload]"
              },{
                "name":"options",
                "displayName":"[options]"
              }],
            "argTypes":["string","table","table"]
          },
          "unregister":{
            "type":"function",
            "description":"Unregisters a function  event is raised.",
            "args":[{
                "name":"eventId"
              },{
                "name":"callback"
              },{
                "name":"options",
                "displayName":"[options]"
              }],
            "argTypes":["string","function","table"]
          },
          "register":{
            "type":"function",
            "description":"Registers a function to be called when an event is raised.",
            "args":[{
                "name":"eventId"
              },{
                "name":"callback"
              },{
                "name":"options",
                "displayName":"[options]"
              }],
            "argTypes":["string","function","table"]
          }
        }
      },
      "ipairs":{
        "argsDisplay":"t",
        "type":"function",
        "description":"Returns three values: an iterator function, the table t, and 0, so that the construction",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-ipairs",
        "args":[{
            "name":"t"
          }]
      },
      "io":{
        "fields":{
          "popen":{
            "argsDisplay":"prog [, mode]",
            "type":"function",
            "description":"Starts program prog in a separated process and returns a file handle that you can use to read data from this program (if mode is \"r\", the default) or to write data to this program (if mode is \"w\").",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-io.popen",
            "returnTypes":[{
                "name":"file",
                "type":"ref"
              }],
            "args":[{
                "name":"prog"
              }]
          },
          "write":{
            "argsDisplay":"···",
            "type":"function",
            "description":"Equivalent to io.output():write.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-io.write",
            "args":[]
          },
          "close":{
            "argsDisplay":"[file]",
            "type":"function",
            "description":"Equivalent to file:close(). Without a file, closes the default output file.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-io.close",
            "args":[]
          },
          "flush":{
            "argsDisplay":"",
            "type":"function",
            "description":"Equivalent to file:flush over the default output file.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-io.flush",
            "args":[]
          },
          "open":{
            "argsDisplay":"filename [, mode]",
            "type":"function",
            "description":"This function opens a file, in the mode specified in the string mode. It returns a new file handle, or, in case of errors, nil plus an error message.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-io.open",
            "returnTypes":[{
                "name":"file",
                "type":"ref"
              }],
            "args":[{
                "name":"filename"
              }]
          },
          "output":{
            "argsDisplay":"[file]",
            "type":"function",
            "description":"Similar to io.input, but operates over the default output file.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-io.output",
            "args":[]
          },
          "type":{
            "argsDisplay":"obj",
            "type":"function",
            "description":"Checks whether obj is a valid file handle. Returns the string \"file\" if obj is an open file handle, \"closed file\" if obj is a closed file handle, or nil if obj is not a file handle.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-io.type",
            "args":[{
                "name":"obj"
              }]
          },
          "read":{
            "argsDisplay":"···",
            "type":"function",
            "description":"Equivalent to io.input():read(···).",
            "link":"https://www.lua.org/manual/5.2/manual.html#pdf-io.read",
            "args":[]
          },
          "stderr":{
            "name":"file",
            "type":"ref"
          },
          "lines":{
            "argsDisplay":"[filename ···]",
            "type":"function",
            "description":"Opens the given file name in read mode and returns an iterator function that works like file:lines(···) over the opened file. When the iterator function detects the end of file, it returns nil (to finish the loop) and automatically closes the file.",
            "link":"https://www.lua.org/manual/5.2/manual.html#pdf-io.lines",
            "args":[]
          },
          "input":{
            "argsDisplay":"[file]",
            "type":"function",
            "description":"When called with a file name, it opens the named file (in text mode), and sets its handle as the default input file. When called with a file handle, it simply sets this file handle as the default input file. When called without parameters, it returns the current default input file.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-io.input",
            "args":[]
          },
          "stdout":{
            "name":"file",
            "type":"ref"
          },
          "stdin":{
            "name":"file",
            "type":"ref"
          },
          "tmpfile":{
            "argsDisplay":"",
            "type":"function",
            "description":"Returns a handle for a temporary file. This file is opened in update mode and it is automatically removed when the program ends.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-io.tmpfile",
            "returnTypes":[{
                "name":"file",
                "type":"ref"
              }],
            "args":[]
          }
        },
        "type":"table",
        "description":"The I/O library provides two different styles for file manipulation. The first one uses implicit file descriptors; that is, there are operations to set a default input file and a default output file, and all input/output operations are over these default files. The second style uses explicit file descriptors.",
        "link":"https://www.lua.org/manual/5.1/manual.html#5.7"
      },
      "rawequal":{
        "argsDisplay":"v1, v2",
        "type":"function",
        "description":"Checks whether v1 is equal to v2, without invoking any metamethod. Returns a boolean.",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-rawequal",
        "args":[{
            "name":"v1"
          },{
            "name":"v2"
          }]
      },
      "collectgarbage":{
        "argsDisplay":"[opt [, arg]]",
        "type":"function",
        "description":"This function is a generic interface to the garbage collector. It performs different functions according to its first argument, opt:",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-collectgarbage",
        "args":[]
      },
      "jit":{
        "fields":{
          "opt":{
            "fields":{
              "start":{
                "args":[],
                "type":"function"
              }
            },
            "type":"table",
            "description":"This sub-module provides the backend for the -O command line option.",
            "link":"https://luajit.org/ext_jit.html#jit_opt"
          },
          "arch":{
            "type":"string",
            "description":"Contains the target architecture name.",
            "link":"https://luajit.org/ext_jit.html#jit_arch"
          },
          "flush":{
            "variants":[{
                "args":[],
                "description":"Flushes the whole cache of compiled code.",
                "link":"https://luajit.org/ext_jit.html#jit_flush"
              },{
                "argsDisplay":"[func [, b]]",
                "args":[],
                "description":"Flushes the code, but doesn't affect the enable/disable status.",
                "link":"https://luajit.org/ext_jit.html#jit_onoff_func"
              },{
                "argsDisplay":"tr",
                "args":[{
                    "name":"tr"
                  }],
                "description":"Flushes the root trace, specified by its number, and all of its side traces from the cache. The code for the trace will be retained as long as there are any other traces which link to it.",
                "link":"https://luajit.org/ext_jit.html#jit_flush_tr"
              }],
            "type":"function"
          },
          "on":{
            "variants":[{
                "args":[],
                "description":"Turns the whole JIT compiler on (default).",
                "link":"https://luajit.org/ext_jit.html#jit_onoff"
              },{
                "argsDisplay":"[func [, b]]",
                "args":[],
                "description":"Enables JIT compilation for a Lua function.",
                "link":"https://luajit.org/ext_jit.html#jit_onoff_func"
              }],
            "type":"function"
          },
          "off":{
            "variants":[{
                "args":[],
                "description":"Turns the whole JIT compiler off.",
                "link":"https://luajit.org/ext_jit.html#jit_onoff"
              },{
                "argsDisplay":"[func [, b]]",
                "args":[],
                "description":"Disables JIT compilation for a Lua function and flushes any already compiled code from the code cache.",
                "link":"https://luajit.org/ext_jit.html#jit_onoff_func"
              }],
            "type":"function"
          },
          "os":{
            "type":"string",
            "description":"Contains the target OS name.",
            "link":"https://luajit.org/ext_jit.html#jit_os"
          },
          "status":{
            "type":"string",
            "description":"Contains the LuaJIT version string.",
            "link":"https://luajit.org/ext_jit.html#jit_version"
          },
          "util":{
            "fields":{
              "traceinfo":{
                "args":[],
                "type":"function"
              },
              "funcinfo":{
                "args":[],
                "type":"function"
              },
              "tracek":{
                "args":[],
                "type":"function"
              },
              "traceexitstub":{
                "args":[],
                "type":"function"
              },
              "tracesnap":{
                "args":[],
                "type":"function"
              },
              "tracemc":{
                "args":[],
                "type":"function"
              },
              "traceir":{
                "args":[],
                "type":"function"
              },
              "funck":{
                "args":[],
                "type":"function"
              },
              "ircalladdr":{
                "args":[],
                "type":"function"
              },
              "funcbc":{
                "args":[],
                "type":"function"
              },
              "funcuvname":{
                "args":[],
                "type":"function"
              }
            },
            "type":"table",
            "description":"This sub-module holds functions to introspect the bytecode, generated traces, the IR and the generated machine code.",
            "link":"https://luajit.org/ext_jit.html#jit_util"
          },
          "version_num":{
            "type":"number",
            "description":"Contains the version number of the LuaJIT core.",
            "link":"https://luajit.org/ext_jit.html#jit_version_num"
          }
        },
        "type":"table",
        "description":"The functions in this built-in module control the behavior of the JIT compiler engine.",
        "link":"https://luajit.org/ext_jit.html"
      },
      "load":{
        "argsDisplay":"ld [, source [, mode [, env]]]",
        "type":"function",
        "description":"Loads a chunk.",
        "link":"https://www.lua.org/manual/5.2/manual.html#pdf-load",
        "args":[{
            "name":"ld"
          }]
      },
      "module":{
        "argsDisplay":"name [, ···]",
        "type":"function",
        "description":"Creates a module. If there is a table in package.loaded[name], this table is the module. Otherwise, if there is a global table t with the given name, this table is the module. Otherwise creates a new table t and sets it as the value of the global name and the value of package.loaded[name]. This function also initializes t._NAME with the given name, t._M with the module (t itself), and t._PACKAGE with the package name (the full module name minus last component; see below). Finally, module sets t as the new environment of the current function and the new value of package.loaded[name], so that require returns t.",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-module",
        "args":[{
            "name":"name"
          }]
      },
      "mge":{
        "type":"table",
        "description":"The mge library allows MGE XE mwscript functions to be called. This is not always ideal, and this library is deprecated.",
        "fields":{
          "log":{
            "type":"function",
            "description":"This function writes information to the mgeXE.log file in the user's installation directory. Wrapper for mwscript's MGELog function.",
            "args":[{
                "name":"message"
              }],
            "argTypes":["string"]
          },
          "selectHUD":{
            "type":"function",
            "description":"Selects a HUD element, to assume for future HUD calls.",
            "args":[{
                "name":"hud"
              }],
            "argTypes":["string"]
          },
          "disableHUD":{
            "type":"function",
            "description":"Disables a HUD element. If a HUD ID is provided, this is a warpper for MGEDisableHUD, otherwise it is a wrapper for MGENIDDisableHUD.",
            "args":[{
                "name":"hud",
                "displayName":"[hud]"
              }],
            "argTypes":["string"]
          },
          "getVersion":{
            "description":"Gets the MGE version. Wrapper for MGEGetVersion.",
            "type":"function"
          },
          "disableShader":{
            "type":"function",
            "description":"Disables a shader. Wrapper for mwscript's MGEDisableShader.",
            "args":[{
                "name":"shader"
              }],
            "argTypes":["string"]
          },
          "unselectHUD":{
            "type":"function",
            "description":"Cancels selection for a HUD element. Wrapper for mwscript's MGECancelWithHUD.",
            "args":[{
                "name":"hud"
              }],
            "argTypes":["string"]
          },
          "setShaderVector4":{
            "type":"function",
            "description":"Sets a shader's vector variable. Wrapper for mwscript's MGEShaderSetVector.",
            "args":[{
                "name":"shader"
              },{
                "name":"variable"
              },{
                "name":"value"
              }],
            "argTypes":["string","string","table"]
          },
          "setHUDEffectLong":{
            "type":"function",
            "description":"Sets the effect long variable for a HUD element. This is a wrapper for MGENIDSetHUDEffectLong.",
            "args":[{
                "name":"hud",
                "displayName":"[hud]"
              },{
                "name":"variable"
              },{
                "name":"value"
              }],
            "argTypes":["string","string","number"]
          },
          "setCameraShakeMagnitude":{
            "type":"function",
            "description":"Wrapper for MGESetCameraShakeMagnitude.",
            "args":[{
                "name":"magnitude"
              }],
            "argTypes":["number"]
          },
          "modScreenRotation":{
            "type":"function",
            "description":"Wrapper for MGERotateScreenBy.",
            "args":[{
                "name":"rotation"
              }],
            "argTypes":["number"]
          },
          "setScreenRotation":{
            "type":"function",
            "description":"Wrapper for MGERotateScreen.",
            "args":[{
                "name":"rotation"
              }],
            "argTypes":["number"]
          },
          "clearHUD":{
            "description":"Clears elements from the HUD. Wrapper for MGEWipeHUDElements.",
            "type":"function"
          },
          "startScreenRotation":{
            "description":"Enables MGE XE's screen spin effect. Wrapper for mwscript's MGEScreenSpin.",
            "type":"function"
          },
          "setHUDEffect":{
            "type":"function",
            "description":"Sets the effect for a HUD element. If a HUD ID is provided, this is a warpper for MGEChangeHUDEffect, otherwise it is a wrapper for MGENIDChangeHUDEffect.",
            "args":[{
                "name":"hud",
                "displayName":"[hud]"
              },{
                "name":"effect"
              }],
            "argTypes":["string","string"]
          },
          "freeHUD":{
            "type":"function",
            "description":"Frees a HUD element. If a HUD ID is provided, this is a warpper for MGEFreeHUD, otherwise it is a wrapper for MGENIDFreeHUD.",
            "args":[{
                "name":"hud",
                "displayName":"[hud]"
              }],
            "argTypes":["string"]
          },
          "enableShader":{
            "type":"function",
            "description":"Enables a shader. Wrapper for mwscript's MGEEnableShader.",
            "args":[{
                "name":"shader"
              }],
            "argTypes":["string"]
          },
          "getScreenHeight":{
            "description":"Gets the window's vertical resolution. Wrapper for mwscript's MGEGetHeight.",
            "type":"function"
          },
          "getScreenRotation":{
            "description":"Wrapper for MGEGetScreenRotation.",
            "type":"function"
          },
          "getZoom":{
            "description":"Wrapper for MGEGetZoom.",
            "type":"function"
          },
          "positionHUD":{
            "type":"function",
            "description":"Positions a HUD element. If a HUD ID is provided, this is a warpper for MGEPositionHUD, otherwise it is a wrapper for MGENIDPositionHUD.",
            "args":[{
                "name":"hud",
                "displayName":"[hud]"
              },{
                "name":"x"
              },{
                "name":"y"
              }],
            "argTypes":["string","number","number"]
          },
          "getUIScale":{
            "description":"Returns the UI scaling used.",
            "type":"function"
          },
          "loadHUD":{
            "type":"function",
            "description":"Loads a HUD element. This is a warpper for MGELoadHUD.",
            "args":[{
                "name":"hud"
              },{
                "name":"texture"
              },{
                "name":"enable",
                "displayName":"[enable]"
              }],
            "argTypes":["string","string","boolean"]
          },
          "enableCameraShake":{
            "type":"function",
            "description":"Enables MGE XE's camera shake effect. Wrapper for mwscript's MGEEnableCameraShake.",
            "args":[{
                "name":"magnitude",
                "displayName":"[magnitude]"
              },{
                "name":"acceleration",
                "displayName":"[acceleration]"
              }],
            "argTypes":["number","number"]
          },
          "enableZoom":{
            "description":"Enables the MGE XE zoom effect. Wrapper for MGEEnableZoom.",
            "type":"function"
          },
          "setHUDEffectVector4":{
            "type":"function",
            "description":"Sets the effect vector variable for a HUD element. This is a wrapper for MGENIDSetHUDEffectVec.",
            "args":[{
                "name":"hud",
                "displayName":"[hud]"
              },{
                "name":"variable"
              },{
                "name":"value"
              }],
            "argTypes":["string","string","table"]
          },
          "disableCameraShake":{
            "description":"Disables MGE XE's camera shake effect. Wrapper for mwscript's MGEDisableCameraShake.",
            "type":"function"
          },
          "setZoom":{
            "type":"function",
            "description":"Wrapper for MGEZoom, or MGESetZoom if set to animate.",
            "args":[{
                "name":"amount"
              },{
                "name":"animate",
                "displayName":"[animate]"
              }],
            "argTypes":["number","boolean"]
          },
          "stopZoom":{
            "description":"Wrapper for MGEStopZoom.",
            "type":"function"
          },
          "scaleHUD":{
            "type":"function",
            "description":"Scales a HUD element. If a HUD ID is provided, this is a warpper for MGEScaleHUD, otherwise it is a wrapper for MGENIDScaleHUD.",
            "args":[{
                "name":"hud",
                "displayName":"[hud]"
              },{
                "name":"x"
              },{
                "name":"y"
              }],
            "argTypes":["string","number","number"]
          },
          "toggleZoom":{
            "description":"Toggles the MGE XE zoom effect. Wrapper for MGEToggleZoom.",
            "type":"function"
          },
          "setShaderLong":{
            "type":"function",
            "description":"Sets a shader's long variable. Wrapper for mwscript's MGEShaderSetLong.",
            "args":[{
                "name":"shader"
              },{
                "name":"variable"
              },{
                "name":"value"
              }],
            "argTypes":["string","string","number"]
          },
          "disableZoom":{
            "description":"Disables the MGE XE zoom effect. Wrapper for MGEDisableZoom.",
            "type":"function"
          },
          "zoomOut":{
            "type":"function",
            "description":"Wrapper for MGEZoomOut, or MGEZoomOutBy if an amount is provided.",
            "args":[{
                "name":"amount",
                "displayName":"[amount]"
              }],
            "argTypes":["number"]
          },
          "setHUDEffectFloat":{
            "type":"function",
            "description":"Sets the effect float variable for a HUD element. This is a wrapper for MGENIDSetHUDEffectFloat.",
            "args":[{
                "name":"hud",
                "displayName":"[hud]"
              },{
                "name":"variable"
              },{
                "name":"value"
              }],
            "argTypes":["string","string","number"]
          },
          "fullscreenHUD":{
            "type":"function",
            "description":"Makes a HUD element fullscreen. If a HUD ID is provided, this is a warpper for MGEFullscreenHUD, otherwise it is a wrapper for MGENIDFullscreenHUD.",
            "args":[{
                "name":"hud",
                "displayName":"[hud]"
              }],
            "argTypes":["string"]
          },
          "stopScreenRotation":{
            "description":"Disables MGE XE's screen spin effect. Wrapper for mwscript's MGEStopSpinSpin.",
            "type":"function"
          },
          "setShaderFloat":{
            "type":"function",
            "description":"Sets a shader's float variable. Wrapper for mwscript's MGEShaderSetFloat.",
            "args":[{
                "name":"shader"
              },{
                "name":"variable"
              },{
                "name":"value"
              }],
            "argTypes":["string","string","number"]
          },
          "zoomIn":{
            "type":"function",
            "description":"Wrapper for MGEZoomIn, or MGEZoomInBy if an amount is provided.",
            "args":[{
                "name":"amount",
                "displayName":"[amount]"
              }],
            "argTypes":["number"]
          },
          "getScreenWidth":{
            "description":"Gets the window's horizontal resolution. Wrapper for mwscript's MGEGetWidth.",
            "type":"function"
          },
          "enableHUD":{
            "type":"function",
            "description":"Enables a HUD element. If a HUD ID is provided, this is a warpper for MGEEnableHUD, otherwise it is a wrapper for MGENIDEnableHUD.",
            "args":[{
                "name":"hud",
                "displayName":"[hud]"
              }],
            "argTypes":["string"]
          },
          "setHUDTexture":{
            "type":"function",
            "description":"Sets the texture for a given HUD element. If a HUD ID is provided, this is a warpper for MGEChangeHUDTexture, otherwise it is a wrapper for MGENIDChangeHUDTexture.",
            "args":[{
                "name":"hud"
              },{
                "name":"texture"
              }],
            "argTypes":["string","string"]
          },
          "setCameraShakeAcceleration":{
            "type":"function",
            "description":"Wrapper for MGECameraShakeZoom.",
            "args":[{
                "name":"acceleration"
              }],
            "argTypes":["number"]
          }
        }
      },
      "rawset":{
        "argsDisplay":"table, index, value",
        "type":"function",
        "description":"Sets the real value of table[index] to value, without invoking any metamethod. table must be a table, index any value different from nil, and value any Lua value.",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-rawset",
        "args":[{
            "name":"table"
          },{
            "name":"index"
          },{
            "name":"value"
          }]
      },
      "mwse":{
        "type":"table",
        "description":"The mwse library provides methods for interacting with MWSE itself, rather than direct TES3 objects.",
        "fields":{
          "longToString":{
            "type":"function",
            "description":"Converts a TES3 object type (e.g. from tes3.objectType) into an uppercase, 4-character string.",
            "args":[{
                "name":"type"
              }],
            "argTypes":["number"]
          },
          "loadConfig":{
            "type":"function",
            "description":"Loads a config table from Data Files\\MWSE\\config\\{fileName}.json.",
            "args":[{
                "name":"fileName"
              }],
            "argTypes":["string"]
          },
          "getVirtualMemoryUsage":{
            "description":"Returns the amount of memory used, in bytes.",
            "type":"function"
          },
          "overrideScript":{
            "type":"function",
            "description":"Configures MWSE to execute a given function instead when a script would run.",
            "args":[{
                "name":"scriptId"
              },{
                "name":"callback"
              }],
            "argTypes":["string","function"]
          },
          "simulateTimers":{
            "type":"ref",
            "description":"The mwseTimerController responsible for simulate-type timers.",
            "name":"mwseTimerController"
          },
          "gameTimers":{
            "type":"ref",
            "description":"The mwseTimerController responsible for game-type timers.",
            "name":"mwseTimerController"
          },
          "version":{
            "description":"A numerical representation of the release version of MWSE currently being used.\n\nFormatted as AAABBBCCC, where A is the major version, BBB is the minor version, and CCC is the patch version. BBB and CCC are forward-padded.\n\nIt is usually better to use mwse.buildDate instead.",
            "type":"number"
          },
          "string":{
            "type":"table",
            "description":"The mwse string library provides functions for interacting with mwscript string storage.",
            "fields":{
              "create":{
                "type":"function",
                "description":"Creates a string in storage, and returns the numerical key for it.\n\nIf the string is already in storage, the previous key will be returned.",
                "args":[[]],
                "argTypes":["string"]
              },
              "get":{
                "type":"function",
                "description":"Returns the numerical key for a given string in storage, or nil if the string isn't in storage.",
                "args":[[]],
                "argTypes":["string"]
              }
            }
          },
          "buildDate":{
            "description":"A numerical representation of the date that version of MWSE currently being used was built on.\n\nFormatted as YYYYMMDD.",
            "type":"number"
          },
          "stringToLong":{
            "type":"function",
            "description":"Converts an uppercase, 4-character string into a TES3 object type.",
            "args":[{
                "name":"tag"
              }],
            "argTypes":["string"]
          },
          "realTimers":{
            "type":"ref",
            "description":"The mwseTimerController responsible for real-type timers.",
            "name":"mwseTimerController"
          },
          "log":{
            "type":"function",
            "description":"This function writes information to the MWSELog.txt file in the user's installation directory.\n\nThe message accepts formatting and additional parameters matching string.format's usage.",
            "args":[{
                "name":"message"
              },{
                "name":"...",
                "displayName":"[...]"
              }],
            "argTypes":["string","variadic"]
          },
          "stack":{
            "type":"table",
            "description":"The stack library provides functions to interact with the mwse mwscript stack, for dealing with custom mwscript extensions.",
            "fields":{
              "popShort":{
                "description":"Pops a value of mwscript type \"short\" off of the stack.",
                "type":"function"
              },
              "pushString":{
                "type":"function",
                "description":"Adds a string to mwse's string storage, and pushes a value of mwscript type \"long\" onto the stack that represents the string.",
                "args":[{
                    "name":"value"
                  }],
                "argTypes":["string"]
              },
              "popFloat":{
                "description":"Pops a value of mwscript type \"float\" off of the stack.",
                "type":"function"
              },
              "pushLong":{
                "type":"function",
                "description":"Pushes a value of mwscript type \"long\" onto the stack.",
                "args":[{
                    "name":"value"
                  }],
                "argTypes":["number"]
              },
              "popLong":{
                "description":"Pops a value of mwscript type \"long\" off of the stack.",
                "type":"function"
              },
              "size":{
                "description":"Returns the number of elements currently on the stack.",
                "type":"function"
              },
              "popString":{
                "description":"Pops a value of mwscript type \"long\" off of the stack, and tries to reinterpret as a string.",
                "type":"function"
              },
              "dump":{
                "description":"Prints all values on the stack in hex format to the log file.",
                "type":"function"
              },
              "popObject":{
                "description":"Pops a value of mwscript type \"long\" off of the stack, and tries to reinterpret as a game object.",
                "type":"function"
              },
              "pushFloat":{
                "type":"function",
                "description":"Pushes a value of mwscript type \"float\" onto the stack.",
                "args":[{
                    "name":"value"
                  }],
                "argTypes":["number"]
              },
              "clear":{
                "description":"Purges all elements from the stack.",
                "type":"function"
              },
              "empty":{
                "description":"Determines if the stack is empty.",
                "type":"function"
              },
              "pushObject":{
                "type":"function",
                "description":"Pushes a value of mwscript type \"long\" onto the stack, which matches the address of a given game object.",
                "args":[{
                    "name":"value"
                  }],
                "argTypes":["tes3baseObject"]
              },
              "pushShort":{
                "type":"function",
                "description":"Pushes a value of mwscript type \"short\" onto the stack.",
                "args":[{
                    "name":"value"
                  }],
                "argTypes":["number"]
              }
            }
          },
          "getVersion":{
            "description":"Equivalent to mwse.version.",
            "type":"function"
          },
          "saveConfig":{
            "type":"function",
            "description":"Saves a config table to Data Files\\MWSE\\config\\{fileName}.json.",
            "args":[{
                "name":"fileName"
              },{
                "name":"object"
              },{
                "name":"config",
                "displayName":"[config]"
              }],
            "argTypes":["string","unknown","table"]
          }
        }
      },
      "tes3":{
        "type":"table",
        "description":"The tes3 library provides the majority of the functions for interacting with the game system.",
        "fields":{
          "fadeOut":{
            "type":"function",
            "description":"Similar to the vanilla FadeOut mwscript command.\n\nAccepts parameters through a table with the given keys:\n * (fader: tes3fader) Defaults to the transition fader. Optional.\n * (duration: number) Time, in seconds, for the fade. Default: 1.0",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "deleteObject":{
            "type":"function",
            "description":"Deletes a game object from the system. This can be dangerous, use caution.",
            "args":[{
                "name":"object"
              }],
            "argTypes":["tes3object"]
          },
          "playVoiceover":{
            "type":"function",
            "description":"Causes a target actor to play a voiceover.\n\nAccepts parameters through a table with the given keys:\n * (actor: tes3mobileActor|tes3reference|string) The actor to play a voiceover.\n * (voiceover: number) Maps to tes3.voiceover constants.",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "returnTypes":[{
                "type":"boolean"
              }],
            "argTypes":["table"]
          },
          "is3rdPerson":{
            "description":"Returns if the game is in 3rd person.",
            "type":"function"
          },
          "gmst":{
            "fields":{
              "sKeyName_3F":{
                "name":"sKeyName_3F",
                "type":"number"
              },
              "sMenuPrevXbox":{
                "name":"sMenuPrevXbox",
                "type":"number"
              },
              "sMagicLockSuccess":{
                "name":"sMagicLockSuccess",
                "type":"number"
              },
              "sRestMenu1":{
                "name":"sRestMenu1",
                "type":"number"
              },
              "sTake":{
                "name":"sTake",
                "type":"number"
              },
              "fIdleChanceMultiplier":{
                "name":"fIdleChanceMultiplier",
                "type":"number"
              },
              "sEffectCureCommonDisease":{
                "name":"sEffectCureCommonDisease",
                "type":"number"
              },
              "fSwimHeightScale":{
                "name":"fSwimHeightScale",
                "type":"number"
              },
              "sEffectBoundDagger":{
                "name":"sEffectBoundDagger",
                "type":"number"
              },
              "sKeyName_12":{
                "name":"sKeyName_12",
                "type":"number"
              },
              "iDaysinPrisonMod":{
                "name":"iDaysinPrisonMod",
                "type":"number"
              },
              "sItemCastWhenStrikes":{
                "name":"sItemCastWhenStrikes",
                "type":"number"
              },
              "sKeyName_8E":{
                "name":"sKeyName_8E",
                "type":"number"
              },
              "sEffectSummonCenturionSphere":{
                "name":"sEffectSummonCenturionSphere",
                "type":"number"
              },
              "fHoldBreathEndMult":{
                "name":"fHoldBreathEndMult",
                "type":"number"
              },
              "sServiceTravelTitle":{
                "name":"sServiceTravelTitle",
                "type":"number"
              },
              "sEnchanting":{
                "name":"sEnchanting",
                "type":"number"
              },
              "sKeyName_4B":{
                "name":"sKeyName_4B",
                "type":"number"
              },
              "sKeyName_84":{
                "name":"sKeyName_84",
                "type":"number"
              },
              "sLess":{
                "name":"sLess",
                "type":"number"
              },
              "sNotifyMessage6a":{
                "name":"sNotifyMessage6a",
                "type":"number"
              },
              "sKeyName_D5":{
                "name":"sKeyName_D5",
                "type":"number"
              },
              "fPersonalityMod":{
                "name":"fPersonalityMod",
                "type":"number"
              },
              "sFortify":{
                "name":"sFortify",
                "type":"number"
              },
              "sEffectSound":{
                "name":"sEffectSound",
                "type":"number"
              },
              "sEffectSummonScamp":{
                "name":"sEffectSummonScamp",
                "type":"number"
              },
              "sMessage1":{
                "name":"sMessage1",
                "type":"number"
              },
              "sSaveMenuHelp01":{
                "name":"sSaveMenuHelp01",
                "type":"number"
              },
              "sEffectDrainFatigue":{
                "name":"sEffectDrainFatigue",
                "type":"number"
              },
              "sHeal":{
                "name":"sHeal",
                "type":"number"
              },
              "sNotifyMessage34":{
                "name":"sNotifyMessage34",
                "type":"number"
              },
              "sNotifyMessage14":{
                "name":"sNotifyMessage14",
                "type":"number"
              },
              "sServiceTrainingWords":{
                "name":"sServiceTrainingWords",
                "type":"number"
              },
              "sTravel":{
                "name":"sTravel",
                "type":"number"
              },
              "s3dSoftware":{
                "name":"s3dSoftware",
                "type":"number"
              },
              "fWereWolfStrength":{
                "name":"fWereWolfStrength",
                "type":"number"
              },
              "sEffectWeaknessToBlightDisease":{
                "name":"sEffectWeaknessToBlightDisease",
                "type":"number"
              },
              "sKeyName_B7":{
                "name":"sKeyName_B7",
                "type":"number"
              },
              "sMagicFrostAtronachID":{
                "name":"sMagicFrostAtronachID",
                "type":"number"
              },
              "sKeyName_34":{
                "name":"sKeyName_34",
                "type":"number"
              },
              "sEffectResistFire":{
                "name":"sEffectResistFire",
                "type":"number"
              },
              "sSpellsword":{
                "name":"sSpellsword",
                "type":"number"
              },
              "sKeyName_DF":{
                "name":"sKeyName_DF",
                "type":"number"
              },
              "sKeyName_D8":{
                "name":"sKeyName_D8",
                "type":"number"
              },
              "sNotifyMessage10":{
                "name":"sNotifyMessage10",
                "type":"number"
              },
              "sNotifyMessage11":{
                "name":"sNotifyMessage11",
                "type":"number"
              },
              "sKeyName_80":{
                "name":"sKeyName_80",
                "type":"number"
              },
              "sAttributeAgility":{
                "name":"sAttributeAgility",
                "type":"number"
              },
              "sRaceMenu4":{
                "name":"sRaceMenu4",
                "type":"number"
              },
              "fProjectileMinSpeed":{
                "name":"fProjectileMinSpeed",
                "type":"number"
              },
              "sInventoryMessage2":{
                "name":"sInventoryMessage2",
                "type":"number"
              },
              "sMagicTab":{
                "name":"sMagicTab",
                "type":"number"
              },
              "sNameTitle":{
                "name":"sNameTitle",
                "type":"number"
              },
              "sMagicBoundSpearID":{
                "name":"sMagicBoundSpearID",
                "type":"number"
              },
              "fWereWolfEnchant":{
                "name":"fWereWolfEnchant",
                "type":"number"
              },
              "iAutoSpellAttSkillMin":{
                "name":"iAutoSpellAttSkillMin",
                "type":"number"
              },
              "fTravelMult":{
                "name":"fTravelMult",
                "type":"number"
              },
              "sEffectBoundLongsword":{
                "name":"sEffectBoundLongsword",
                "type":"number"
              },
              "sBackXbox":{
                "name":"sBackXbox",
                "type":"number"
              },
              "sSkillSneak":{
                "name":"sSkillSneak",
                "type":"number"
              },
              "sKeyName_F3":{
                "name":"sKeyName_F3",
                "type":"number"
              },
              "sTogglePOVCmd":{
                "name":"sTogglePOVCmd",
                "type":"number"
              },
              "sSchoolMysticism":{
                "name":"sSchoolMysticism",
                "type":"number"
              },
              "sMagicSkeletalMinionID":{
                "name":"sMagicSkeletalMinionID",
                "type":"number"
              },
              "sEnchantmentMenu4":{
                "name":"sEnchantmentMenu4",
                "type":"number"
              },
              "fWereWolfSecurity":{
                "name":"fWereWolfSecurity",
                "type":"number"
              },
              "iBlockMaxChance":{
                "name":"iBlockMaxChance",
                "type":"number"
              },
              "sEffectSummonFabricant":{
                "name":"sEffectSummonFabricant",
                "type":"number"
              },
              "iPickMaxChance":{
                "name":"iPickMaxChance",
                "type":"number"
              },
              "sEffectSummonDaedroth":{
                "name":"sEffectSummonDaedroth",
                "type":"number"
              },
              "sCrusader":{
                "name":"sCrusader",
                "type":"number"
              },
              "sKeyName_33":{
                "name":"sKeyName_33",
                "type":"number"
              },
              "sKeyName_9A":{
                "name":"sKeyName_9A",
                "type":"number"
              },
              "sAdmire":{
                "name":"sAdmire",
                "type":"number"
              },
              "sBribeFail":{
                "name":"sBribeFail",
                "type":"number"
              },
              "sEffectMark":{
                "name":"sEffectMark",
                "type":"number"
              },
              "sKeyName_FB":{
                "name":"sKeyName_FB",
                "type":"number"
              },
              "fSwimRunAthleticsMult":{
                "name":"fSwimRunAthleticsMult",
                "type":"number"
              },
              "sJournal":{
                "name":"sJournal",
                "type":"number"
              },
              "fJumpAcroMultiplier":{
                "name":"fJumpAcroMultiplier",
                "type":"number"
              },
              "sKeyName_7F":{
                "name":"sKeyName_7F",
                "type":"number"
              },
              "sMagicInsufficientCharge":{
                "name":"sMagicInsufficientCharge",
                "type":"number"
              },
              "sCantEquipWeapWarning":{
                "name":"sCantEquipWeapWarning",
                "type":"number"
              },
              "sEnchantmentHelp6":{
                "name":"sEnchantmentHelp6",
                "type":"number"
              },
              "sBounty":{
                "name":"sBounty",
                "type":"number"
              },
              "sAIDistance":{
                "name":"sAIDistance",
                "type":"number"
              },
              "sScout":{
                "name":"sScout",
                "type":"number"
              },
              "iFightPickpocket":{
                "name":"iFightPickpocket",
                "type":"number"
              },
              "sEffectResistFrost":{
                "name":"sEffectResistFrost",
                "type":"number"
              },
              "sItemCastConstant":{
                "name":"sItemCastConstant",
                "type":"number"
              },
              "sKeyName_61":{
                "name":"sKeyName_61",
                "type":"number"
              },
              "sGoverningAttribute":{
                "name":"sGoverningAttribute",
                "type":"number"
              },
              "fFatigueSwimWalkBase":{
                "name":"fFatigueSwimWalkBase",
                "type":"number"
              },
              "sSpecializationCombat":{
                "name":"sSpecializationCombat",
                "type":"number"
              },
              "sEnchantmentHelp10":{
                "name":"sEnchantmentHelp10",
                "type":"number"
              },
              "sEffectDamageAttribute":{
                "name":"sEffectDamageAttribute",
                "type":"number"
              },
              "sEffectSlowFall":{
                "name":"sEffectSlowFall",
                "type":"number"
              },
              "sKeyName_56":{
                "name":"sKeyName_56",
                "type":"number"
              },
              "fMagicCreatureCastDelay":{
                "name":"fMagicCreatureCastDelay",
                "type":"number"
              },
              "sLoadingMessage4":{
                "name":"sLoadingMessage4",
                "type":"number"
              },
              "fCorpseClearDelay":{
                "name":"fCorpseClearDelay",
                "type":"number"
              },
              "sKeyName_A1":{
                "name":"sKeyName_A1",
                "type":"number"
              },
              "sMagicCannotRecast":{
                "name":"sMagicCannotRecast",
                "type":"number"
              },
              "sKeyName_D3":{
                "name":"sKeyName_D3",
                "type":"number"
              },
              "sAllTab":{
                "name":"sAllTab",
                "type":"number"
              },
              "sKeyName_1C":{
                "name":"sKeyName_1C",
                "type":"number"
              },
              "sEquip":{
                "name":"sEquip",
                "type":"number"
              },
              "sForwardXbox":{
                "name":"sForwardXbox",
                "type":"number"
              },
              "sCrouch_Sneak":{
                "name":"sCrouch_Sneak",
                "type":"number"
              },
              "fMessageTimePerChar":{
                "name":"fMessageTimePerChar",
                "type":"number"
              },
              "fWereWolfShortBlade":{
                "name":"fWereWolfShortBlade",
                "type":"number"
              },
              "sKeyName_AF":{
                "name":"sKeyName_AF",
                "type":"number"
              },
              "fLevelUpHealthEndMult":{
                "name":"fLevelUpHealthEndMult",
                "type":"number"
              },
              "sSpellmakingHelp2":{
                "name":"sSpellmakingHelp2",
                "type":"number"
              },
              "sQuick8Cmd":{
                "name":"sQuick8Cmd",
                "type":"number"
              },
              "fAIFleeHealthMult":{
                "name":"fAIFleeHealthMult",
                "type":"number"
              },
              "sUnlocked":{
                "name":"sUnlocked",
                "type":"number"
              },
              "sRestKey":{
                "name":"sRestKey",
                "type":"number"
              },
              "iGreetDistanceMultiplier":{
                "name":"iGreetDistanceMultiplier",
                "type":"number"
              },
              "fFatigueReturnMult":{
                "name":"fFatigueReturnMult",
                "type":"number"
              },
              "sKeyName_49":{
                "name":"sKeyName_49",
                "type":"number"
              },
              "sMessage2":{
                "name":"sMessage2",
                "type":"number"
              },
              "sNotifyMessage8":{
                "name":"sNotifyMessage8",
                "type":"number"
              },
              "sEffectAbsorbHealth":{
                "name":"sEffectAbsorbHealth",
                "type":"number"
              },
              "sRight":{
                "name":"sRight",
                "type":"number"
              },
              "sQuick7Xbox":{
                "name":"sQuick7Xbox",
                "type":"number"
              },
              "sChooseClassMenu3":{
                "name":"sChooseClassMenu3",
                "type":"number"
              },
              "iKnockDownOddsBase":{
                "name":"iKnockDownOddsBase",
                "type":"number"
              },
              "fRepairMult":{
                "name":"fRepairMult",
                "type":"number"
              },
              "fTravelTimeMult":{
                "name":"fTravelTimeMult",
                "type":"number"
              },
              "sNotifyMessage52":{
                "name":"sNotifyMessage52",
                "type":"number"
              },
              "sKeyName_BF":{
                "name":"sKeyName_BF",
                "type":"number"
              },
              "sEffectCommandHumanoids":{
                "name":"sEffectCommandHumanoids",
                "type":"number"
              },
              "sEffectBoundBattleAxe":{
                "name":"sEffectBoundBattleAxe",
                "type":"number"
              },
              "sKeyName_0F":{
                "name":"sKeyName_0F",
                "type":"number"
              },
              "sKeyName_2B":{
                "name":"sKeyName_2B",
                "type":"number"
              },
              "sEffectFeather":{
                "name":"sEffectFeather",
                "type":"number"
              },
              "sHeavy":{
                "name":"sHeavy",
                "type":"number"
              },
              "sClassChoiceMenu3":{
                "name":"sClassChoiceMenu3",
                "type":"number"
              },
              "sMagicPCResisted":{
                "name":"sMagicPCResisted",
                "type":"number"
              },
              "sNotifyMessage25":{
                "name":"sNotifyMessage25",
                "type":"number"
              },
              "sEffectSummonClannfear":{
                "name":"sEffectSummonClannfear",
                "type":"number"
              },
              "iAutoSpellConjurationMax":{
                "name":"iAutoSpellConjurationMax",
                "type":"number"
              },
              "sLow":{
                "name":"sLow",
                "type":"number"
              },
              "sQuickSaveCmd":{
                "name":"sQuickSaveCmd",
                "type":"number"
              },
              "sTypeBlightDisease":{
                "name":"sTypeBlightDisease",
                "type":"number"
              },
              "fWereWolfHealth":{
                "name":"fWereWolfHealth",
                "type":"number"
              },
              "sUse":{
                "name":"sUse",
                "type":"number"
              },
              "sKeyName_D0":{
                "name":"sKeyName_D0",
                "type":"number"
              },
              "fFleeDistance":{
                "name":"fFleeDistance",
                "type":"number"
              },
              "fSleepRandMod":{
                "name":"fSleepRandMod",
                "type":"number"
              },
              "fAIRangeMagicSpellMult":{
                "name":"fAIRangeMagicSpellMult",
                "type":"number"
              },
              "sBye":{
                "name":"sBye",
                "type":"number"
              },
              "sApparatus":{
                "name":"sApparatus",
                "type":"number"
              },
              "sLight":{
                "name":"sLight",
                "type":"number"
              },
              "fProjectileMaxSpeed":{
                "name":"fProjectileMaxSpeed",
                "type":"number"
              },
              "sNear":{
                "name":"sNear",
                "type":"number"
              },
              "sKeyName_9E":{
                "name":"sKeyName_9E",
                "type":"number"
              },
              "sKeyName_8C":{
                "name":"sKeyName_8C",
                "type":"number"
              },
              "sCreate":{
                "name":"sCreate",
                "type":"number"
              },
              "fCrimeGoldDiscountMult":{
                "name":"fCrimeGoldDiscountMult",
                "type":"number"
              },
              "sNotifyMessage57":{
                "name":"sNotifyMessage57",
                "type":"number"
              },
              "iAlarmTresspass":{
                "name":"iAlarmTresspass",
                "type":"number"
              },
              "sInPrisonTitle":{
                "name":"sInPrisonTitle",
                "type":"number"
              },
              "sTrapImpossible":{
                "name":"sTrapImpossible",
                "type":"number"
              },
              "sRangeTarget":{
                "name":"sRangeTarget",
                "type":"number"
              },
              "sHealthPerLevel":{
                "name":"sHealthPerLevel",
                "type":"number"
              },
              "sKeyName_FA":{
                "name":"sKeyName_FA",
                "type":"number"
              },
              "sSkill":{
                "name":"sSkill",
                "type":"number"
              },
              "sSchoolAlteration":{
                "name":"sSchoolAlteration",
                "type":"number"
              },
              "sQuickMenu2":{
                "name":"sQuickMenu2",
                "type":"number"
              },
              "sLevel":{
                "name":"sLevel",
                "type":"number"
              },
              "sKeyName_69":{
                "name":"sKeyName_69",
                "type":"number"
              },
              "sWornTab":{
                "name":"sWornTab",
                "type":"number"
              },
              "sNotifyMessage49":{
                "name":"sNotifyMessage49",
                "type":"number"
              },
              "sNotifyMessage16_a":{
                "name":"sNotifyMessage16_a",
                "type":"number"
              },
              "sBarterDialog8":{
                "name":"sBarterDialog8",
                "type":"number"
              },
              "sItemCastOnce":{
                "name":"sItemCastOnce",
                "type":"number"
              },
              "fThrownWeaponMaxSpeed":{
                "name":"fThrownWeaponMaxSpeed",
                "type":"number"
              },
              "sKeyName_55":{
                "name":"sKeyName_55",
                "type":"number"
              },
              "fSpellPriceMult":{
                "name":"fSpellPriceMult",
                "type":"number"
              },
              "sRunXbox":{
                "name":"sRunXbox",
                "type":"number"
              },
              "fCombatCriticalStrikeMult":{
                "name":"fCombatCriticalStrikeMult",
                "type":"number"
              },
              "sEffectWeaknessToFrost":{
                "name":"sEffectWeaknessToFrost",
                "type":"number"
              },
              "sKeyName_A0":{
                "name":"sKeyName_A0",
                "type":"number"
              },
              "sLockLevel":{
                "name":"sLockLevel",
                "type":"number"
              },
              "sRaceMenu3":{
                "name":"sRaceMenu3",
                "type":"number"
              },
              "sRestIllegal":{
                "name":"sRestIllegal",
                "type":"number"
              },
              "sAbsorb":{
                "name":"sAbsorb",
                "type":"number"
              },
              "sKeyName_1A":{
                "name":"sKeyName_1A",
                "type":"number"
              },
              "sCreatedEffects":{
                "name":"sCreatedEffects",
                "type":"number"
              },
              "sNotifyMessage19":{
                "name":"sNotifyMessage19",
                "type":"number"
              },
              "sKeyName_F2":{
                "name":"sKeyName_F2",
                "type":"number"
              },
              "fEncumbranceStrMult":{
                "name":"fEncumbranceStrMult",
                "type":"number"
              },
              "sKeyName_0A":{
                "name":"sKeyName_0A",
                "type":"number"
              },
              "iAutoSpellAlterationMax":{
                "name":"iAutoSpellAlterationMax",
                "type":"number"
              },
              "sTrapFail":{
                "name":"sTrapFail",
                "type":"number"
              },
              "fWaterReflectUpdateAlways":{
                "name":"fWaterReflectUpdateAlways",
                "type":"number"
              },
              "sTypePower":{
                "name":"sTypePower",
                "type":"number"
              },
              "sKeyName_86":{
                "name":"sKeyName_86",
                "type":"number"
              },
              "sEffectBoundSpear":{
                "name":"sEffectBoundSpear",
                "type":"number"
              },
              "sSpace":{
                "name":"sSpace",
                "type":"number"
              },
              "sEnchantmentMenu5":{
                "name":"sEnchantmentMenu5",
                "type":"number"
              },
              "fLevelMod":{
                "name":"fLevelMod",
                "type":"number"
              },
              "fWereWolfMerchantile":{
                "name":"fWereWolfMerchantile",
                "type":"number"
              },
              "sSkillConjuration":{
                "name":"sSkillConjuration",
                "type":"number"
              },
              "sMagicBoundShieldID":{
                "name":"sMagicBoundShieldID",
                "type":"number"
              },
              "sMonthFrostfall":{
                "name":"sMonthFrostfall",
                "type":"number"
              },
              "sPrevWeapon":{
                "name":"sPrevWeapon",
                "type":"number"
              },
              "sMonthMidyear":{
                "name":"sMonthMidyear",
                "type":"number"
              },
              "sTypeDisease":{
                "name":"sTypeDisease",
                "type":"number"
              },
              "fWereWolfAxe":{
                "name":"fWereWolfAxe",
                "type":"number"
              },
              "sEffectSunDamage":{
                "name":"sEffectSunDamage",
                "type":"number"
              },
              "sKeyName_06":{
                "name":"sKeyName_06",
                "type":"number"
              },
              "sMagicBoundRightGauntletID":{
                "name":"sMagicBoundRightGauntletID",
                "type":"number"
              },
              "sNotifyMessage42":{
                "name":"sNotifyMessage42",
                "type":"number"
              },
              "sKeyName_D6":{
                "name":"sKeyName_D6",
                "type":"number"
              },
              "sAreaDes":{
                "name":"sAreaDes",
                "type":"number"
              },
              "sSkillDestruction":{
                "name":"sSkillDestruction",
                "type":"number"
              },
              "sKeyName_48":{
                "name":"sKeyName_48",
                "type":"number"
              },
              "sMagicBoundMaceID":{
                "name":"sMagicBoundMaceID",
                "type":"number"
              },
              "fMaxFlySpeed":{
                "name":"fMaxFlySpeed",
                "type":"number"
              },
              "sMagicBoundBattleAxeID":{
                "name":"sMagicBoundBattleAxeID",
                "type":"number"
              },
              "iLevelupMinorMultAttribute":{
                "name":"iLevelupMinorMultAttribute",
                "type":"number"
              },
              "sKeyName_65":{
                "name":"sKeyName_65",
                "type":"number"
              },
              "sStats":{
                "name":"sStats",
                "type":"number"
              },
              "sNotifyMessage33":{
                "name":"sNotifyMessage33",
                "type":"number"
              },
              "sMessage4":{
                "name":"sMessage4",
                "type":"number"
              },
              "sKeyName_8D":{
                "name":"sKeyName_8D",
                "type":"number"
              },
              "sEffectDrainSkill":{
                "name":"sEffectDrainSkill",
                "type":"number"
              },
              "sMusic":{
                "name":"sMusic",
                "type":"number"
              },
              "sItemCastWhenUsed":{
                "name":"sItemCastWhenUsed",
                "type":"number"
              },
              "sShift":{
                "name":"sShift",
                "type":"number"
              },
              "sLoadGame":{
                "name":"sLoadGame",
                "type":"number"
              },
              "fBribe1000Mod":{
                "name":"fBribe1000Mod",
                "type":"number"
              },
              "fCombatForceSideAngle":{
                "name":"fCombatForceSideAngle",
                "type":"number"
              },
              "sQuick4Cmd":{
                "name":"sQuick4Cmd",
                "type":"number"
              },
              "sEffectCalmCreature":{
                "name":"sEffectCalmCreature",
                "type":"number"
              },
              "sKeyName_A2":{
                "name":"sKeyName_A2",
                "type":"number"
              },
              "sKeyName_5F":{
                "name":"sKeyName_5F",
                "type":"number"
              },
              "sQuickMenuInstruc":{
                "name":"sQuickMenuInstruc",
                "type":"number"
              },
              "sKeyName_28":{
                "name":"sKeyName_28",
                "type":"number"
              },
              "sgp":{
                "name":"sgp",
                "type":"number"
              },
              "sEffectSpellAbsorption":{
                "name":"sEffectSpellAbsorption",
                "type":"number"
              },
              "sEffectRestoreAttribute":{
                "name":"sEffectRestoreAttribute",
                "type":"number"
              },
              "sQuestionDeleteSpell":{
                "name":"sQuestionDeleteSpell",
                "type":"number"
              },
              "sLockSuccess":{
                "name":"sLockSuccess",
                "type":"number"
              },
              "sNotifyMessage40":{
                "name":"sNotifyMessage40",
                "type":"number"
              },
              "sEffectPoison":{
                "name":"sEffectPoison",
                "type":"number"
              },
              "sNotifyMessage45":{
                "name":"sNotifyMessage45",
                "type":"number"
              },
              "sKeyName_30":{
                "name":"sKeyName_30",
                "type":"number"
              },
              "sFatigue":{
                "name":"sFatigue",
                "type":"number"
              },
              "sEffectFrostDamage":{
                "name":"sEffectFrostDamage",
                "type":"number"
              },
              "fPotionMinUsefulDuration":{
                "name":"fPotionMinUsefulDuration",
                "type":"number"
              },
              "sKeyName_A4":{
                "name":"sKeyName_A4",
                "type":"number"
              },
              "fDispPersonalityBase":{
                "name":"fDispPersonalityBase",
                "type":"number"
              },
              "fCombatDistance":{
                "name":"fCombatDistance",
                "type":"number"
              },
              "iFightDistanceBase":{
                "name":"iFightDistanceBase",
                "type":"number"
              },
              "sNotifyMessage3":{
                "name":"sNotifyMessage3",
                "type":"number"
              },
              "sKeyName_0E":{
                "name":"sKeyName_0E",
                "type":"number"
              },
              "sEffectRestoreFatigue":{
                "name":"sEffectRestoreFatigue",
                "type":"number"
              },
              "sKeyName_59":{
                "name":"sKeyName_59",
                "type":"number"
              },
              "sKeyName_B2":{
                "name":"sKeyName_B2",
                "type":"number"
              },
              "sCompanionWarningButtonTwo":{
                "name":"sCompanionWarningButtonTwo",
                "type":"number"
              },
              "sKeyName_C3":{
                "name":"sKeyName_C3",
                "type":"number"
              },
              "sEffectCureCorprusDisease":{
                "name":"sEffectCureCorprusDisease",
                "type":"number"
              },
              "sEffectCommandCreatures":{
                "name":"sEffectCommandCreatures",
                "type":"number"
              },
              "sEnchantmentHelp1":{
                "name":"sEnchantmentHelp1",
                "type":"number"
              },
              "sSpdDesc":{
                "name":"sSpdDesc",
                "type":"number"
              },
              "sMagicBoundLongswordID":{
                "name":"sMagicBoundLongswordID",
                "type":"number"
              },
              "sKeyName_99":{
                "name":"sKeyName_99",
                "type":"number"
              },
              "sBarterDialog4":{
                "name":"sBarterDialog4",
                "type":"number"
              },
              "sEnchantItems":{
                "name":"sEnchantItems",
                "type":"number"
              },
              "fAIMagicSpellMult":{
                "name":"fAIMagicSpellMult",
                "type":"number"
              },
              "fDispWeaponDrawn":{
                "name":"fDispWeaponDrawn",
                "type":"number"
              },
              "sNo":{
                "name":"sNo",
                "type":"number"
              },
              "sSkillUnarmored":{
                "name":"sSkillUnarmored",
                "type":"number"
              },
              "sCreateClassMenuHelp2":{
                "name":"sCreateClassMenuHelp2",
                "type":"number"
              },
              "sIntimidateSuccess":{
                "name":"sIntimidateSuccess",
                "type":"number"
              },
              "fCombatTorsoStopPercent":{
                "name":"fCombatTorsoStopPercent",
                "type":"number"
              },
              "sKeyName_46":{
                "name":"sKeyName_46",
                "type":"number"
              },
              "fWereWolfHandtoHand":{
                "name":"fWereWolfHandtoHand",
                "type":"number"
              },
              "sKeyName_E8":{
                "name":"sKeyName_E8",
                "type":"number"
              },
              "sBirthsignmenu2":{
                "name":"sBirthsignmenu2",
                "type":"number"
              },
              "fSwimWalkBase":{
                "name":"fSwimWalkBase",
                "type":"number"
              },
              "sEffectResistShock":{
                "name":"sEffectResistShock",
                "type":"number"
              },
              "sNeedTwoSkills":{
                "name":"sNeedTwoSkills",
                "type":"number"
              },
              "sWitchhunter":{
                "name":"sWitchhunter",
                "type":"number"
              },
              "sMonthEveningstar":{
                "name":"sMonthEveningstar",
                "type":"number"
              },
              "sUntilHealed":{
                "name":"sUntilHealed",
                "type":"number"
              },
              "sEnchantmentMenu7":{
                "name":"sEnchantmentMenu7",
                "type":"number"
              },
              "fMagicItemOnceMult":{
                "name":"fMagicItemOnceMult",
                "type":"number"
              },
              "sSlash":{
                "name":"sSlash",
                "type":"number"
              },
              "sNewGame":{
                "name":"sNewGame",
                "type":"number"
              },
              "sEffectWeaknessToMagicka":{
                "name":"sEffectWeaknessToMagicka",
                "type":"number"
              },
              "sMouseWheelDownShort":{
                "name":"sMouseWheelDownShort",
                "type":"number"
              },
              "sPrev":{
                "name":"sPrev",
                "type":"number"
              },
              "sEffectCharm":{
                "name":"sEffectCharm",
                "type":"number"
              },
              "sSaveMenu1":{
                "name":"sSaveMenu1",
                "type":"number"
              },
              "sEffectBoundLongbow":{
                "name":"sEffectBoundLongbow",
                "type":"number"
              },
              "sStrafe":{
                "name":"sStrafe",
                "type":"number"
              },
              "sNotifyMessage44":{
                "name":"sNotifyMessage44",
                "type":"number"
              },
              "fMagicDetectRefreshRate":{
                "name":"fMagicDetectRefreshRate",
                "type":"number"
              },
              "sKeyName_60":{
                "name":"sKeyName_60",
                "type":"number"
              },
              "sEffectSummonFlameAtronach":{
                "name":"sEffectSummonFlameAtronach",
                "type":"number"
              },
              "sChooseClassMenu1":{
                "name":"sChooseClassMenu1",
                "type":"number"
              },
              "sEffectSummonStormAtronach":{
                "name":"sEffectSummonStormAtronach",
                "type":"number"
              },
              "sand":{
                "name":"sand",
                "type":"number"
              },
              "fAudioMaxDistanceMult":{
                "name":"fAudioMaxDistanceMult",
                "type":"number"
              },
              "iLevelUp02Mult":{
                "name":"iLevelUp02Mult",
                "type":"number"
              },
              "fDispBargainFailMod":{
                "name":"fDispBargainFailMod",
                "type":"number"
              },
              "sMagicTargetResisted":{
                "name":"sMagicTargetResisted",
                "type":"number"
              },
              "sMagicGreaterBonewalkerID":{
                "name":"sMagicGreaterBonewalkerID",
                "type":"number"
              },
              "sKeyName_81":{
                "name":"sKeyName_81",
                "type":"number"
              },
              "sKeyName_C4":{
                "name":"sKeyName_C4",
                "type":"number"
              },
              "sfeet":{
                "name":"sfeet",
                "type":"number"
              },
              "sKeyName_F6":{
                "name":"sKeyName_F6",
                "type":"number"
              },
              "sWaterReflectUpdate":{
                "name":"sWaterReflectUpdate",
                "type":"number"
              },
              "sBarterDialog2":{
                "name":"sBarterDialog2",
                "type":"number"
              },
              "sTauntFail":{
                "name":"sTauntFail",
                "type":"number"
              },
              "sKeyName_1B":{
                "name":"sKeyName_1B",
                "type":"number"
              },
              "sInventorySelectNoIngredients":{
                "name":"sInventorySelectNoIngredients",
                "type":"number"
              },
              "sSpells":{
                "name":"sSpells",
                "type":"number"
              },
              "sMagicBoundLongbowID":{
                "name":"sMagicBoundLongbowID",
                "type":"number"
              },
              "sEffectSummonCreature01":{
                "name":"sEffectSummonCreature01",
                "type":"number"
              },
              "sEffectSummonGreaterBonewalker":{
                "name":"sEffectSummonGreaterBonewalker",
                "type":"number"
              },
              "sMiscTab":{
                "name":"sMiscTab",
                "type":"number"
              },
              "sNone":{
                "name":"sNone",
                "type":"number"
              },
              "sEffectSanctuary":{
                "name":"sEffectSanctuary",
                "type":"number"
              },
              "iDispAttackMod":{
                "name":"iDispAttackMod",
                "type":"number"
              },
              "sMenuNextXbox":{
                "name":"sMenuNextXbox",
                "type":"number"
              },
              "sKeyName_B8":{
                "name":"sKeyName_B8",
                "type":"number"
              },
              "sKeyName_96":{
                "name":"sKeyName_96",
                "type":"number"
              },
              "sLeft":{
                "name":"sLeft",
                "type":"number"
              },
              "sPrefs":{
                "name":"sPrefs",
                "type":"number"
              },
              "sFatDesc":{
                "name":"sFatDesc",
                "type":"number"
              },
              "sMortar":{
                "name":"sMortar",
                "type":"number"
              },
              "sMessageQuestionAnswer2":{
                "name":"sMessageQuestionAnswer2",
                "type":"number"
              },
              "fSneakDistanceMultiplier":{
                "name":"fSneakDistanceMultiplier",
                "type":"number"
              },
              "sKeyName_22":{
                "name":"sKeyName_22",
                "type":"number"
              },
              "sSaveGameNoMemory":{
                "name":"sSaveGameNoMemory",
                "type":"number"
              },
              "sEffectBoundHelm":{
                "name":"sEffectBoundHelm",
                "type":"number"
              },
              "sKeyName_7A":{
                "name":"sKeyName_7A",
                "type":"number"
              },
              "sMessage5":{
                "name":"sMessage5",
                "type":"number"
              },
              "iPerMinChange":{
                "name":"iPerMinChange",
                "type":"number"
              },
              "sNotifyMessage47":{
                "name":"sNotifyMessage47",
                "type":"number"
              },
              "sEffectResistCommonDisease":{
                "name":"sEffectResistCommonDisease",
                "type":"number"
              },
              "sEffectResistCorprusDisease":{
                "name":"sEffectResistCorprusDisease",
                "type":"number"
              },
              "sKeyName_68":{
                "name":"sKeyName_68",
                "type":"number"
              },
              "sEffectInvisibility":{
                "name":"sEffectInvisibility",
                "type":"number"
              },
              "sExpelledMessage":{
                "name":"sExpelledMessage",
                "type":"number"
              },
              "fDispositionMod":{
                "name":"fDispositionMod",
                "type":"number"
              },
              "sKeyName_36":{
                "name":"sKeyName_36",
                "type":"number"
              },
              "sServiceRepairTitle":{
                "name":"sServiceRepairTitle",
                "type":"number"
              },
              "sGameWithoutLauncherXbox":{
                "name":"sGameWithoutLauncherXbox",
                "type":"number"
              },
              "sLevelProgress":{
                "name":"sLevelProgress",
                "type":"number"
              },
              "sKeyName_6F":{
                "name":"sKeyName_6F",
                "type":"number"
              },
              "iLevelUp08Mult":{
                "name":"iLevelUp08Mult",
                "type":"number"
              },
              "sQuanityMenuMessage01":{
                "name":"sQuanityMenuMessage01",
                "type":"number"
              },
              "fEnchantmentValueMult":{
                "name":"fEnchantmentValueMult",
                "type":"number"
              },
              "sEffectFortifyFatigue":{
                "name":"sEffectFortifyFatigue",
                "type":"number"
              },
              "fCombatInvisoMult":{
                "name":"fCombatInvisoMult",
                "type":"number"
              },
              "fFatigueRunBase":{
                "name":"fFatigueRunBase",
                "type":"number"
              },
              "sHealthDesc":{
                "name":"sHealthDesc",
                "type":"number"
              },
              "sMessageQuestionAnswer1":{
                "name":"sMessageQuestionAnswer1",
                "type":"number"
              },
              "sTurnRightXbox":{
                "name":"sTurnRightXbox",
                "type":"number"
              },
              "sMagnitude":{
                "name":"sMagnitude",
                "type":"number"
              },
              "sDialogText2Xbox":{
                "name":"sDialogText2Xbox",
                "type":"number"
              },
              "fPerDieRollMult":{
                "name":"fPerDieRollMult",
                "type":"number"
              },
              "sTrapSuccess":{
                "name":"sTrapSuccess",
                "type":"number"
              },
              "fSneakUseDelay":{
                "name":"fSneakUseDelay",
                "type":"number"
              },
              "sTaunt":{
                "name":"sTaunt",
                "type":"number"
              },
              "sAttributeLuck":{
                "name":"sAttributeLuck",
                "type":"number"
              },
              "sMagicBoundBootsID":{
                "name":"sMagicBoundBootsID",
                "type":"number"
              },
              "sKeyName_17":{
                "name":"sKeyName_17",
                "type":"number"
              },
              "sClose":{
                "name":"sClose",
                "type":"number"
              },
              "sNotifyMessage62":{
                "name":"sNotifyMessage62",
                "type":"number"
              },
              "sKeyName_A7":{
                "name":"sKeyName_A7",
                "type":"number"
              },
              "sKeyName_15":{
                "name":"sKeyName_15",
                "type":"number"
              },
              "sSkillClassMisc":{
                "name":"sSkillClassMisc",
                "type":"number"
              },
              "sKeyName_25":{
                "name":"sKeyName_25",
                "type":"number"
              },
              "sTurnLeftXbox":{
                "name":"sTurnLeftXbox",
                "type":"number"
              },
              "sCaughtStealingMessage":{
                "name":"sCaughtStealingMessage",
                "type":"number"
              },
              "sSelect":{
                "name":"sSelect",
                "type":"number"
              },
              "sFast":{
                "name":"sFast",
                "type":"number"
              },
              "sKeyName_13":{
                "name":"sKeyName_13",
                "type":"number"
              },
              "sMagicWingedTwilightID":{
                "name":"sMagicWingedTwilightID",
                "type":"number"
              },
              "sAgent":{
                "name":"sAgent",
                "type":"number"
              },
              "sKeyName_35":{
                "name":"sKeyName_35",
                "type":"number"
              },
              "fSpellValueMult":{
                "name":"fSpellValueMult",
                "type":"number"
              },
              "sKeyName_0D":{
                "name":"sKeyName_0D",
                "type":"number"
              },
              "sReturnToGame":{
                "name":"sReturnToGame",
                "type":"number"
              },
              "sKeyName_CB":{
                "name":"sKeyName_CB",
                "type":"number"
              },
              "sSystemMenuXbox":{
                "name":"sSystemMenuXbox",
                "type":"number"
              },
              "fThrownWeaponMinSpeed":{
                "name":"fThrownWeaponMinSpeed",
                "type":"number"
              },
              "sEditNote":{
                "name":"sEditNote",
                "type":"number"
              },
              "sAlways_Run":{
                "name":"sAlways_Run",
                "type":"number"
              },
              "sWarrior":{
                "name":"sWarrior",
                "type":"number"
              },
              "sDay":{
                "name":"sDay",
                "type":"number"
              },
              "sNotifyMessage18":{
                "name":"sNotifyMessage18",
                "type":"number"
              },
              "sKeyName_DA":{
                "name":"sKeyName_DA",
                "type":"number"
              },
              "sKeyName_32":{
                "name":"sKeyName_32",
                "type":"number"
              },
              "sDisposeofCorpse":{
                "name":"sDisposeofCorpse",
                "type":"number"
              },
              "iFightAttacking":{
                "name":"iFightAttacking",
                "type":"number"
              },
              "sEffectReflect":{
                "name":"sEffectReflect",
                "type":"number"
              },
              "sKeyName_EF":{
                "name":"sKeyName_EF",
                "type":"number"
              },
              "sEnchantmentMenu6":{
                "name":"sEnchantmentMenu6",
                "type":"number"
              },
              "sDrop":{
                "name":"sDrop",
                "type":"number"
              },
              "fMagicItemCostMult":{
                "name":"fMagicItemCostMult",
                "type":"number"
              },
              "sKeyName_3C":{
                "name":"sKeyName_3C",
                "type":"number"
              },
              "sMore":{
                "name":"sMore",
                "type":"number"
              },
              "iKnockDownOddsMult":{
                "name":"iKnockDownOddsMult",
                "type":"number"
              },
              "sRogue":{
                "name":"sRogue",
                "type":"number"
              },
              "sKeyName_71":{
                "name":"sKeyName_71",
                "type":"number"
              },
              "sSlow":{
                "name":"sSlow",
                "type":"number"
              },
              "fWereWolfFatigue":{
                "name":"fWereWolfFatigue",
                "type":"number"
              },
              "sPilgrim":{
                "name":"sPilgrim",
                "type":"number"
              },
              "sType":{
                "name":"sType",
                "type":"number"
              },
              "sSorceror":{
                "name":"sSorceror",
                "type":"number"
              },
              "sCreateClassMenuWarning":{
                "name":"sCreateClassMenuWarning",
                "type":"number"
              },
              "sMake":{
                "name":"sMake",
                "type":"number"
              },
              "sSaveMenuHelp03":{
                "name":"sSaveMenuHelp03",
                "type":"number"
              },
              "sNotifyMessage63":{
                "name":"sNotifyMessage63",
                "type":"number"
              },
              "sChooseClassMenu4":{
                "name":"sChooseClassMenu4",
                "type":"number"
              },
              "sWorld":{
                "name":"sWorld",
                "type":"number"
              },
              "sKeyName_7C":{
                "name":"sKeyName_7C",
                "type":"number"
              },
              "sSeldom":{
                "name":"sSeldom",
                "type":"number"
              },
              "sQuick6Cmd":{
                "name":"sQuick6Cmd",
                "type":"number"
              },
              "sNotifyMessage23":{
                "name":"sNotifyMessage23",
                "type":"number"
              },
              "sAssassin":{
                "name":"sAssassin",
                "type":"number"
              },
              "sKeyName_58":{
                "name":"sKeyName_58",
                "type":"number"
              },
              "iNumberCreatures":{
                "name":"iNumberCreatures",
                "type":"number"
              },
              "sIntimidateFail":{
                "name":"sIntimidateFail",
                "type":"number"
              },
              "sCustomClassName":{
                "name":"sCustomClassName",
                "type":"number"
              },
              "sInfo":{
                "name":"sInfo",
                "type":"number"
              },
              "sKeyName_41":{
                "name":"sKeyName_41",
                "type":"number"
              },
              "fPickLockMult":{
                "name":"fPickLockMult",
                "type":"number"
              },
              "sKeyName_C1":{
                "name":"sKeyName_C1",
                "type":"number"
              },
              "fConstantEffectMult":{
                "name":"fConstantEffectMult",
                "type":"number"
              },
              "sMagicEffects":{
                "name":"sMagicEffects",
                "type":"number"
              },
              "sReadyMagicXbox":{
                "name":"sReadyMagicXbox",
                "type":"number"
              },
              "fMinFlySpeed":{
                "name":"fMinFlySpeed",
                "type":"number"
              },
              "sKeyName_01":{
                "name":"sKeyName_01",
                "type":"number"
              },
              "fNPCHealthBarFade":{
                "name":"fNPCHealthBarFade",
                "type":"number"
              },
              "sMagicDaedrothID":{
                "name":"sMagicDaedrothID",
                "type":"number"
              },
              "sEffectParalyze":{
                "name":"sEffectParalyze",
                "type":"number"
              },
              "sSkillBlock":{
                "name":"sSkillBlock",
                "type":"number"
              },
              "sDeleteGame":{
                "name":"sDeleteGame",
                "type":"number"
              },
              "sKeyName_38":{
                "name":"sKeyName_38",
                "type":"number"
              },
              "sKeyName_A8":{
                "name":"sKeyName_A8",
                "type":"number"
              },
              "sYes":{
                "name":"sYes",
                "type":"number"
              },
              "sMonthSunsheight":{
                "name":"sMonthSunsheight",
                "type":"number"
              },
              "sKeyName_4D":{
                "name":"sKeyName_4D",
                "type":"number"
              },
              "sMagicStormAtronachID":{
                "name":"sMagicStormAtronachID",
                "type":"number"
              },
              "sKeyName_3D":{
                "name":"sKeyName_3D",
                "type":"number"
              },
              "sNextSpell":{
                "name":"sNextSpell",
                "type":"number"
              },
              "sKeyName_67":{
                "name":"sKeyName_67",
                "type":"number"
              },
              "sJoystickShort":{
                "name":"sJoystickShort",
                "type":"number"
              },
              "sKeyName_B3":{
                "name":"sKeyName_B3",
                "type":"number"
              },
              "sNotifyMessage26":{
                "name":"sNotifyMessage26",
                "type":"number"
              },
              "sPersuasion":{
                "name":"sPersuasion",
                "type":"number"
              },
              "sRepairFailed":{
                "name":"sRepairFailed",
                "type":"number"
              },
              "sKeyName_C7":{
                "name":"sKeyName_C7",
                "type":"number"
              },
              "sKeyName_DD":{
                "name":"sKeyName_DD",
                "type":"number"
              },
              "sNext":{
                "name":"sNext",
                "type":"number"
              },
              "sEffectBoundGloves":{
                "name":"sEffectBoundGloves",
                "type":"number"
              },
              "sQuick4Xbox":{
                "name":"sQuick4Xbox",
                "type":"number"
              },
              "fWeaponFatigueBlockMult":{
                "name":"fWeaponFatigueBlockMult",
                "type":"number"
              },
              "sRaceMenu5":{
                "name":"sRaceMenu5",
                "type":"number"
              },
              "sKeyName_05":{
                "name":"sKeyName_05",
                "type":"number"
              },
              "sKeyName_45":{
                "name":"sKeyName_45",
                "type":"number"
              },
              "iWereWolfLevelToAttack":{
                "name":"iWereWolfLevelToAttack",
                "type":"number"
              },
              "sSkillEnchant":{
                "name":"sSkillEnchant",
                "type":"number"
              },
              "sKeyName_4E":{
                "name":"sKeyName_4E",
                "type":"number"
              },
              "sKeyName_E3":{
                "name":"sKeyName_E3",
                "type":"number"
              },
              "sNotifyMessage31":{
                "name":"sNotifyMessage31",
                "type":"number"
              },
              "sPickUp":{
                "name":"sPickUp",
                "type":"number"
              },
              "sSaveMenuHelp04":{
                "name":"sSaveMenuHelp04",
                "type":"number"
              },
              "sNotifyMessage66":{
                "name":"sNotifyMessage66",
                "type":"number"
              },
              "fFatigueRunMult":{
                "name":"fFatigueRunMult",
                "type":"number"
              },
              "sBack":{
                "name":"sBack",
                "type":"number"
              },
              "sAttributeListTitle":{
                "name":"sAttributeListTitle",
                "type":"number"
              },
              "sOptionsMenuXbox":{
                "name":"sOptionsMenuXbox",
                "type":"number"
              },
              "fWereWolfSneak":{
                "name":"fWereWolfSneak",
                "type":"number"
              },
              "sInfoRefusal":{
                "name":"sInfoRefusal",
                "type":"number"
              },
              "fCombatAngleZ":{
                "name":"fCombatAngleZ",
                "type":"number"
              },
              "sLoadingMessage5":{
                "name":"sLoadingMessage5",
                "type":"number"
              },
              "fFatigueSpellBase":{
                "name":"fFatigueSpellBase",
                "type":"number"
              },
              "iFlee":{
                "name":"iFlee",
                "type":"number"
              },
              "sClass":{
                "name":"sClass",
                "type":"number"
              },
              "sMenus":{
                "name":"sMenus",
                "type":"number"
              },
              "sKeyName_20":{
                "name":"sKeyName_20",
                "type":"number"
              },
              "fDispCrimeMod":{
                "name":"fDispCrimeMod",
                "type":"number"
              },
              "sRangeTouch":{
                "name":"sRangeTouch",
                "type":"number"
              },
              "sReadyItemXbox":{
                "name":"sReadyItemXbox",
                "type":"number"
              },
              "sKeyName_64":{
                "name":"sKeyName_64",
                "type":"number"
              },
              "sNotifyMessage58":{
                "name":"sNotifyMessage58",
                "type":"number"
              },
              "sEffectTurnUndead":{
                "name":"sEffectTurnUndead",
                "type":"number"
              },
              "sJournalEntry":{
                "name":"sJournalEntry",
                "type":"number"
              },
              "sKeyName_72":{
                "name":"sKeyName_72",
                "type":"number"
              },
              "sUses":{
                "name":"sUses",
                "type":"number"
              },
              "sServiceTrainingTitle":{
                "name":"sServiceTrainingTitle",
                "type":"number"
              },
              "sSpellmakingHelp5":{
                "name":"sSpellmakingHelp5",
                "type":"number"
              },
              "sKeyName_5B":{
                "name":"sKeyName_5B",
                "type":"number"
              },
              "sValue":{
                "name":"sValue",
                "type":"number"
              },
              "sCreateClassMenu1":{
                "name":"sCreateClassMenu1",
                "type":"number"
              },
              "fKnockDownMult":{
                "name":"fKnockDownMult",
                "type":"number"
              },
              "sArea":{
                "name":"sArea",
                "type":"number"
              },
              "fCombatKODamageMult":{
                "name":"fCombatKODamageMult",
                "type":"number"
              },
              "sBarterDialog1":{
                "name":"sBarterDialog1",
                "type":"number"
              },
              "sInvalidSaveGameMsgXBOX":{
                "name":"sInvalidSaveGameMsgXBOX",
                "type":"number"
              },
              "sTauntSuccess":{
                "name":"sTauntSuccess",
                "type":"number"
              },
              "sMagicFabricantID":{
                "name":"sMagicFabricantID",
                "type":"number"
              },
              "sInventoryMessage5":{
                "name":"sInventoryMessage5",
                "type":"number"
              },
              "sSkillAcrobatics":{
                "name":"sSkillAcrobatics",
                "type":"number"
              },
              "sTogglePOVXbox":{
                "name":"sTogglePOVXbox",
                "type":"number"
              },
              "sBarterDialog10":{
                "name":"sBarterDialog10",
                "type":"number"
              },
              "fMagicItemUsedMult":{
                "name":"fMagicItemUsedMult",
                "type":"number"
              },
              "fFatigueBlockMult":{
                "name":"fFatigueBlockMult",
                "type":"number"
              },
              "sMenuModeXbox":{
                "name":"sMenuModeXbox",
                "type":"number"
              },
              "iSoulAmountForConstantEffect":{
                "name":"iSoulAmountForConstantEffect",
                "type":"number"
              },
              "sEffectBurden":{
                "name":"sEffectBurden",
                "type":"number"
              },
              "sKeyName_02":{
                "name":"sKeyName_02",
                "type":"number"
              },
              "sNotifyMessage4XBOX":{
                "name":"sNotifyMessage4XBOX",
                "type":"number"
              },
              "fWaterReflectUpdateSeldom":{
                "name":"fWaterReflectUpdateSeldom",
                "type":"number"
              },
              "sKeyName_2A":{
                "name":"sKeyName_2A",
                "type":"number"
              },
              "sNotifyMessage4":{
                "name":"sNotifyMessage4",
                "type":"number"
              },
              "sAlembic":{
                "name":"sAlembic",
                "type":"number"
              },
              "fCombatBlockLeftAngle":{
                "name":"fCombatBlockLeftAngle",
                "type":"number"
              },
              "fDifficultyMult":{
                "name":"fDifficultyMult",
                "type":"number"
              },
              "sMonthFirstseed":{
                "name":"sMonthFirstseed",
                "type":"number"
              },
              "fFatigueSwimRunMult":{
                "name":"fFatigueSwimRunMult",
                "type":"number"
              },
              "sDialogText3Xbox":{
                "name":"sDialogText3Xbox",
                "type":"number"
              },
              "sHair":{
                "name":"sHair",
                "type":"number"
              },
              "sKeyName_D9":{
                "name":"sKeyName_D9",
                "type":"number"
              },
              "sVideo":{
                "name":"sVideo",
                "type":"number"
              },
              "sNotifyMessage67":{
                "name":"sNotifyMessage67",
                "type":"number"
              },
              "sDoYouWantTo":{
                "name":"sDoYouWantTo",
                "type":"number"
              },
              "fAutoSpellChance":{
                "name":"fAutoSpellChance",
                "type":"number"
              },
              "sSoulGem":{
                "name":"sSoulGem",
                "type":"number"
              },
              "fProjectileThrownStoreChance":{
                "name":"fProjectileThrownStoreChance",
                "type":"number"
              },
              "fAudioDefaultMinDistance":{
                "name":"fAudioDefaultMinDistance",
                "type":"number"
              },
              "sNotifyMessage5":{
                "name":"sNotifyMessage5",
                "type":"number"
              },
              "sKeyName_E5":{
                "name":"sKeyName_E5",
                "type":"number"
              },
              "sResChangeWarning":{
                "name":"sResChangeWarning",
                "type":"number"
              },
              "sAdmireSuccess":{
                "name":"sAdmireSuccess",
                "type":"number"
              },
              "sGold":{
                "name":"sGold",
                "type":"number"
              },
              "sKeyName_2C":{
                "name":"sKeyName_2C",
                "type":"number"
              },
              "iCrimeThresholdMultiplier":{
                "name":"iCrimeThresholdMultiplier",
                "type":"number"
              },
              "sSex":{
                "name":"sSex",
                "type":"number"
              },
              "sEffectVampirism":{
                "name":"sEffectVampirism",
                "type":"number"
              },
              "sKeyUsed":{
                "name":"sKeyUsed",
                "type":"number"
              },
              "sExitGame":{
                "name":"sExitGame",
                "type":"number"
              },
              "fJumpEncumbranceBase":{
                "name":"fJumpEncumbranceBase",
                "type":"number"
              },
              "sLucDesc":{
                "name":"sLucDesc",
                "type":"number"
              },
              "sEnchantmentHelp2":{
                "name":"sEnchantmentHelp2",
                "type":"number"
              },
              "sWait":{
                "name":"sWait",
                "type":"number"
              },
              "sKeyName_EA":{
                "name":"sKeyName_EA",
                "type":"number"
              },
              "sExpelled":{
                "name":"sExpelled",
                "type":"number"
              },
              "sRest":{
                "name":"sRest",
                "type":"number"
              },
              "sMagicHungerID":{
                "name":"sMagicHungerID",
                "type":"number"
              },
              "sRechargeEnchantment":{
                "name":"sRechargeEnchantment",
                "type":"number"
              },
              "sKeyName_6E":{
                "name":"sKeyName_6E",
                "type":"number"
              },
              "sKeyName_23":{
                "name":"sKeyName_23",
                "type":"number"
              },
              "sNotifyMessage53":{
                "name":"sNotifyMessage53",
                "type":"number"
              },
              "fAIMeleeWeaponMult":{
                "name":"fAIMeleeWeaponMult",
                "type":"number"
              },
              "sBonusSkillTitle":{
                "name":"sBonusSkillTitle",
                "type":"number"
              },
              "sQuickMenu3":{
                "name":"sQuickMenu3",
                "type":"number"
              },
              "sSkillLongblade":{
                "name":"sSkillLongblade",
                "type":"number"
              },
              "sChooseClassMenu2":{
                "name":"sChooseClassMenu2",
                "type":"number"
              },
              "sRender_Distance":{
                "name":"sRender_Distance",
                "type":"number"
              },
              "sFull":{
                "name":"sFull",
                "type":"number"
              },
              "sTypeAbility":{
                "name":"sTypeAbility",
                "type":"number"
              },
              "sKeyName_CA":{
                "name":"sKeyName_CA",
                "type":"number"
              },
              "sKeyName_5A":{
                "name":"sKeyName_5A",
                "type":"number"
              },
              "sKeyName_F5":{
                "name":"sKeyName_F5",
                "type":"number"
              },
              "sQuick5Cmd":{
                "name":"sQuick5Cmd",
                "type":"number"
              },
              "sEffectSummonCreature04":{
                "name":"sEffectSummonCreature04",
                "type":"number"
              },
              "sEnchantmentHelp7":{
                "name":"sEnchantmentHelp7",
                "type":"number"
              },
              "s3dHardware":{
                "name":"s3dHardware",
                "type":"number"
              },
              "sKeyName_B6":{
                "name":"sKeyName_B6",
                "type":"number"
              },
              "fDispDiseaseMod":{
                "name":"fDispDiseaseMod",
                "type":"number"
              },
              "sKeyName_14":{
                "name":"sKeyName_14",
                "type":"number"
              },
              "sMonthRainshand":{
                "name":"sMonthRainshand",
                "type":"number"
              },
              "sEffectNightEye":{
                "name":"sEffectNightEye",
                "type":"number"
              },
              "sGame":{
                "name":"sGame",
                "type":"number"
              },
              "fSleepRestMod":{
                "name":"fSleepRestMod",
                "type":"number"
              },
              "sKeyName_9F":{
                "name":"sKeyName_9F",
                "type":"number"
              },
              "sSaveGameTooBig":{
                "name":"sSaveGameTooBig",
                "type":"number"
              },
              "sKeyName_D2":{
                "name":"sKeyName_D2",
                "type":"number"
              },
              "sKeyName_27":{
                "name":"sKeyName_27",
                "type":"number"
              },
              "sKeyName_BE":{
                "name":"sKeyName_BE",
                "type":"number"
              },
              "sKeyName_3B":{
                "name":"sKeyName_3B",
                "type":"number"
              },
              "sHealthPerHourOfRest":{
                "name":"sHealthPerHourOfRest",
                "type":"number"
              },
              "sSkillMaxReached":{
                "name":"sSkillMaxReached",
                "type":"number"
              },
              "sKeyName_29":{
                "name":"sKeyName_29",
                "type":"number"
              },
              "fWeaponDamageMult":{
                "name":"fWeaponDamageMult",
                "type":"number"
              },
              "sKeyName_31":{
                "name":"sKeyName_31",
                "type":"number"
              },
              "sKeyName_42":{
                "name":"sKeyName_42",
                "type":"number"
              },
              "sKeyName_04":{
                "name":"sKeyName_04",
                "type":"number"
              },
              "sKeyName_44":{
                "name":"sKeyName_44",
                "type":"number"
              },
              "sKeyName_54":{
                "name":"sKeyName_54",
                "type":"number"
              },
              "sMenu_Mode":{
                "name":"sMenu_Mode",
                "type":"number"
              },
              "fSneakUseDist":{
                "name":"fSneakUseDist",
                "type":"number"
              },
              "sQuickLoadCmd":{
                "name":"sQuickLoadCmd",
                "type":"number"
              },
              "sAttributePersonality":{
                "name":"sAttributePersonality",
                "type":"number"
              },
              "fEffectCostMult":{
                "name":"fEffectCostMult",
                "type":"number"
              },
              "sKeyName_57":{
                "name":"sKeyName_57",
                "type":"number"
              },
              "sKeyName_73":{
                "name":"sKeyName_73",
                "type":"number"
              },
              "sEffectSummonHunger":{
                "name":"sEffectSummonHunger",
                "type":"number"
              },
              "sKeyName_8B":{
                "name":"sKeyName_8B",
                "type":"number"
              },
              "sKeyName_97":{
                "name":"sKeyName_97",
                "type":"number"
              },
              "sSkillMediumarmor":{
                "name":"sSkillMediumarmor",
                "type":"number"
              },
              "sKeyName_7E":{
                "name":"sKeyName_7E",
                "type":"number"
              },
              "sSubtitles":{
                "name":"sSubtitles",
                "type":"number"
              },
              "sEffectResistBlightDisease":{
                "name":"sEffectResistBlightDisease",
                "type":"number"
              },
              "sKeyName_7D":{
                "name":"sKeyName_7D",
                "type":"number"
              },
              "sEnchantmentMenu10":{
                "name":"sEnchantmentMenu10",
                "type":"number"
              },
              "sKeyName_91":{
                "name":"sKeyName_91",
                "type":"number"
              },
              "sControlsMenu3":{
                "name":"sControlsMenu3",
                "type":"number"
              },
              "sKeyName_6A":{
                "name":"sKeyName_6A",
                "type":"number"
              },
              "fFatigueSpellMult":{
                "name":"fFatigueSpellMult",
                "type":"number"
              },
              "sKeyName_8F":{
                "name":"sKeyName_8F",
                "type":"number"
              },
              "sEffectFortifySkill":{
                "name":"sEffectFortifySkill",
                "type":"number"
              },
              "sOn":{
                "name":"sOn",
                "type":"number"
              },
              "sFar":{
                "name":"sFar",
                "type":"number"
              },
              "sWerewolfRestMessage":{
                "name":"sWerewolfRestMessage",
                "type":"number"
              },
              "iMaxInfoDist":{
                "name":"iMaxInfoDist",
                "type":"number"
              },
              "sSpecializationMagic":{
                "name":"sSpecializationMagic",
                "type":"number"
              },
              "sSchoolConjuration":{
                "name":"sSchoolConjuration",
                "type":"number"
              },
              "sKeyName_39":{
                "name":"sKeyName_39",
                "type":"number"
              },
              "fSneakSpeedMultiplier":{
                "name":"fSneakSpeedMultiplier",
                "type":"number"
              },
              "sKeyName_A5":{
                "name":"sKeyName_A5",
                "type":"number"
              },
              "sKeyName_2D":{
                "name":"sKeyName_2D",
                "type":"number"
              },
              "sEffectFrenzyHumanoid":{
                "name":"sEffectFrenzyHumanoid",
                "type":"number"
              },
              "fFatigueMult":{
                "name":"fFatigueMult",
                "type":"number"
              },
              "sStartCell":{
                "name":"sStartCell",
                "type":"number"
              },
              "sApparelTab":{
                "name":"sApparelTab",
                "type":"number"
              },
              "sKeyName_2E":{
                "name":"sKeyName_2E",
                "type":"number"
              },
              "fPotionT4BaseStrengthMult":{
                "name":"fPotionT4BaseStrengthMult",
                "type":"number"
              },
              "iAutoSpellIllusionMax":{
                "name":"iAutoSpellIllusionMax",
                "type":"number"
              },
              "sEffectCalmHumanoid":{
                "name":"sEffectCalmHumanoid",
                "type":"number"
              },
              "sEffectFortifyAttribute":{
                "name":"sEffectFortifyAttribute",
                "type":"number"
              },
              "sDone":{
                "name":"sDone",
                "type":"number"
              },
              "sSpellServiceTitle":{
                "name":"sSpellServiceTitle",
                "type":"number"
              },
              "sQuick10Cmd":{
                "name":"sQuick10Cmd",
                "type":"number"
              },
              "sKeyName_D1":{
                "name":"sKeyName_D1",
                "type":"number"
              },
              "sKeyName_D4":{
                "name":"sKeyName_D4",
                "type":"number"
              },
              "sEnchantmentHelp4":{
                "name":"sEnchantmentHelp4",
                "type":"number"
              },
              "sEffectDamageMagicka":{
                "name":"sEffectDamageMagicka",
                "type":"number"
              },
              "sKeyName_DE":{
                "name":"sKeyName_DE",
                "type":"number"
              },
              "sKeyName_7B":{
                "name":"sKeyName_7B",
                "type":"number"
              },
              "sKeyName_E6":{
                "name":"sKeyName_E6",
                "type":"number"
              },
              "sEffectDetectEnchantment":{
                "name":"sEffectDetectEnchantment",
                "type":"number"
              },
              "sKeyName_EB":{
                "name":"sKeyName_EB",
                "type":"number"
              },
              "sKeyName_3E":{
                "name":"sKeyName_3E",
                "type":"number"
              },
              "sEffectSwiftSwim":{
                "name":"sEffectSwiftSwim",
                "type":"number"
              },
              "sKeyName_78":{
                "name":"sKeyName_78",
                "type":"number"
              },
              "sMagicAncestralGhostID":{
                "name":"sMagicAncestralGhostID",
                "type":"number"
              },
              "sJoystickNotFound":{
                "name":"sJoystickNotFound",
                "type":"number"
              },
              "sHard":{
                "name":"sHard",
                "type":"number"
              },
              "sBarterDialog12":{
                "name":"sBarterDialog12",
                "type":"number"
              },
              "sItemName":{
                "name":"sItemName",
                "type":"number"
              },
              "sEasy":{
                "name":"sEasy",
                "type":"number"
              },
              "sKeyName_EC":{
                "name":"sKeyName_EC",
                "type":"number"
              },
              "sKeyName_DB":{
                "name":"sKeyName_DB",
                "type":"number"
              },
              "sEffectSoultrap":{
                "name":"sEffectSoultrap",
                "type":"number"
              },
              "iLevelUp06Mult":{
                "name":"iLevelUp06Mult",
                "type":"number"
              },
              "sSlideLeftXbox":{
                "name":"sSlideLeftXbox",
                "type":"number"
              },
              "sQuickLoadXbox":{
                "name":"sQuickLoadXbox",
                "type":"number"
              },
              "sKeyName_0B":{
                "name":"sKeyName_0B",
                "type":"number"
              },
              "sWeight":{
                "name":"sWeight",
                "type":"number"
              },
              "sEffectRallyHumanoid":{
                "name":"sEffectRallyHumanoid",
                "type":"number"
              },
              "sEffectDemoralizeCreature":{
                "name":"sEffectDemoralizeCreature",
                "type":"number"
              },
              "sNotifyMessage38":{
                "name":"sNotifyMessage38",
                "type":"number"
              },
              "sMagicOpenSuccess":{
                "name":"sMagicOpenSuccess",
                "type":"number"
              },
              "iFightTrespass":{
                "name":"iFightTrespass",
                "type":"number"
              },
              "sTo":{
                "name":"sTo",
                "type":"number"
              },
              "sKeyName_98":{
                "name":"sKeyName_98",
                "type":"number"
              },
              "sEffectLight":{
                "name":"sEffectLight",
                "type":"number"
              },
              "sEffectChameleon":{
                "name":"sEffectChameleon",
                "type":"number"
              },
              "sQuick_Save":{
                "name":"sQuick_Save",
                "type":"number"
              },
              "sKeyName_6B":{
                "name":"sKeyName_6B",
                "type":"number"
              },
              "sShadowText":{
                "name":"sShadowText",
                "type":"number"
              },
              "sPowerAlreadyUsed":{
                "name":"sPowerAlreadyUsed",
                "type":"number"
              },
              "fElementalShieldMult":{
                "name":"fElementalShieldMult",
                "type":"number"
              },
              "sEffectSummonDremora":{
                "name":"sEffectSummonDremora",
                "type":"number"
              },
              "fSeriousWoundMult":{
                "name":"fSeriousWoundMult",
                "type":"number"
              },
              "fSwingBlockMult":{
                "name":"fSwingBlockMult",
                "type":"number"
              },
              "sLockImpossible":{
                "name":"sLockImpossible",
                "type":"number"
              },
              "fRepairAmountMult":{
                "name":"fRepairAmountMult",
                "type":"number"
              },
              "sQuickMenu1":{
                "name":"sQuickMenu1",
                "type":"number"
              },
              "sEffectShield":{
                "name":"sEffectShield",
                "type":"number"
              },
              "sEncumbrance":{
                "name":"sEncumbrance",
                "type":"number"
              },
              "sSpellmakingMenuTitle":{
                "name":"sSpellmakingMenuTitle",
                "type":"number"
              },
              "sEffectWeaknessToCommonDisease":{
                "name":"sEffectWeaknessToCommonDisease",
                "type":"number"
              },
              "sSkillArmorer":{
                "name":"sSkillArmorer",
                "type":"number"
              },
              "sCostCharge":{
                "name":"sCostCharge",
                "type":"number"
              },
              "sKeyName_85":{
                "name":"sKeyName_85",
                "type":"number"
              },
              "sActivate":{
                "name":"sActivate",
                "type":"number"
              },
              "sCostChance":{
                "name":"sCostChance",
                "type":"number"
              },
              "sClassChoiceMenu1":{
                "name":"sClassChoiceMenu1",
                "type":"number"
              },
              "sChangedMastersMsg":{
                "name":"sChangedMastersMsg",
                "type":"number"
              },
              "sNotifyMessage2":{
                "name":"sNotifyMessage2",
                "type":"number"
              },
              "sNotifyMessage9":{
                "name":"sNotifyMessage9",
                "type":"number"
              },
              "sSaveGameDenied":{
                "name":"sSaveGameDenied",
                "type":"number"
              },
              "sInputMenu1":{
                "name":"sInputMenu1",
                "type":"number"
              },
              "sEffectWeaknessToShock":{
                "name":"sEffectWeaknessToShock",
                "type":"number"
              },
              "sKeyName_3A":{
                "name":"sKeyName_3A",
                "type":"number"
              },
              "sEffectSummonLeastBonewalker":{
                "name":"sEffectSummonLeastBonewalker",
                "type":"number"
              },
              "sKeyName_B1":{
                "name":"sKeyName_B1",
                "type":"number"
              },
              "sKeyName_50":{
                "name":"sKeyName_50",
                "type":"number"
              },
              "sKeyName_16":{
                "name":"sKeyName_16",
                "type":"number"
              },
              "sKeyName_9D":{
                "name":"sKeyName_9D",
                "type":"number"
              },
              "sNotifyMessage17":{
                "name":"sNotifyMessage17",
                "type":"number"
              },
              "sKeyName_10":{
                "name":"sKeyName_10",
                "type":"number"
              },
              "sKeyName_52":{
                "name":"sKeyName_52",
                "type":"number"
              },
              "sUserDefinedClass":{
                "name":"sUserDefinedClass",
                "type":"number"
              },
              "sEffectBoundMace":{
                "name":"sEffectBoundMace",
                "type":"number"
              },
              "sKeyName_E1":{
                "name":"sKeyName_E1",
                "type":"number"
              },
              "sNotifyMessage20":{
                "name":"sNotifyMessage20",
                "type":"number"
              },
              "sNotifyMessage22":{
                "name":"sNotifyMessage22",
                "type":"number"
              },
              "i1stPersonSneakDelta":{
                "name":"i1stPersonSneakDelta",
                "type":"number"
              },
              "sBarterDialog9":{
                "name":"sBarterDialog9",
                "type":"number"
              },
              "sKeyName_75":{
                "name":"sKeyName_75",
                "type":"number"
              },
              "fAIMeleeArmorMult":{
                "name":"fAIMeleeArmorMult",
                "type":"number"
              },
              "fDispPersonalityMult":{
                "name":"fDispPersonalityMult",
                "type":"number"
              },
              "sKeyName_FE":{
                "name":"sKeyName_FE",
                "type":"number"
              },
              "sKeyName_51":{
                "name":"sKeyName_51",
                "type":"number"
              },
              "sNotifyMessage32":{
                "name":"sNotifyMessage32",
                "type":"number"
              },
              "sEffectDrainHealth":{
                "name":"sEffectDrainHealth",
                "type":"number"
              },
              "sKeyName_0C":{
                "name":"sKeyName_0C",
                "type":"number"
              },
              "fMagicSunBlockedMult":{
                "name":"fMagicSunBlockedMult",
                "type":"number"
              },
              "sNotifyMessage43":{
                "name":"sNotifyMessage43",
                "type":"number"
              },
              "sEffectAbsorbFatigue":{
                "name":"sEffectAbsorbFatigue",
                "type":"number"
              },
              "sKeyName_E2":{
                "name":"sKeyName_E2",
                "type":"number"
              },
              "sMagicSkillFail":{
                "name":"sMagicSkillFail",
                "type":"number"
              },
              "sAt":{
                "name":"sAt",
                "type":"number"
              },
              "iDispTresspass":{
                "name":"iDispTresspass",
                "type":"number"
              },
              "sKeyName_43":{
                "name":"sKeyName_43",
                "type":"number"
              },
              "sBestAttack":{
                "name":"sBestAttack",
                "type":"number"
              },
              "sKeyName_FC":{
                "name":"sKeyName_FC",
                "type":"number"
              },
              "sNotifyMessage55":{
                "name":"sNotifyMessage55",
                "type":"number"
              },
              "sEffectBoundShield":{
                "name":"sEffectBoundShield",
                "type":"number"
              },
              "fWereWolfSpeechcraft":{
                "name":"fWereWolfSpeechcraft",
                "type":"number"
              },
              "sQuanityMenuMessage02":{
                "name":"sQuanityMenuMessage02",
                "type":"number"
              },
              "sNotifyMessage56":{
                "name":"sNotifyMessage56",
                "type":"number"
              },
              "sKeyName_5E":{
                "name":"sKeyName_5E",
                "type":"number"
              },
              "sDetail_Level":{
                "name":"sDetail_Level",
                "type":"number"
              },
              "fWereWolfWillPower":{
                "name":"fWereWolfWillPower",
                "type":"number"
              },
              "fCombatDelayNPC":{
                "name":"fCombatDelayNPC",
                "type":"number"
              },
              "fCombatAngleXY":{
                "name":"fCombatAngleXY",
                "type":"number"
              },
              "sKeyName_62":{
                "name":"sKeyName_62",
                "type":"number"
              },
              "sControls":{
                "name":"sControls",
                "type":"number"
              },
              "fFightDistanceMultiplier":{
                "name":"fFightDistanceMultiplier",
                "type":"number"
              },
              "sKeyName_4C":{
                "name":"sKeyName_4C",
                "type":"number"
              },
              "fPotionT4EquipStrengthMult":{
                "name":"fPotionT4EquipStrengthMult",
                "type":"number"
              },
              "sTakeAll":{
                "name":"sTakeAll",
                "type":"number"
              },
              "fAudioVoiceDefaultMaxDistance":{
                "name":"fAudioVoiceDefaultMaxDistance",
                "type":"number"
              },
              "sPreferences":{
                "name":"sPreferences",
                "type":"number"
              },
              "sControlerVibration":{
                "name":"sControlerVibration",
                "type":"number"
              },
              "sPrevWeaponXbox":{
                "name":"sPrevWeaponXbox",
                "type":"number"
              },
              "sKeyName_18":{
                "name":"sKeyName_18",
                "type":"number"
              },
              "sSpellmakingHelp1":{
                "name":"sSpellmakingHelp1",
                "type":"number"
              },
              "sEffectSummonCreature02":{
                "name":"sEffectSummonCreature02",
                "type":"number"
              },
              "fMinHandToHandMult":{
                "name":"fMinHandToHandMult",
                "type":"number"
              },
              "sAdmireFail":{
                "name":"sAdmireFail",
                "type":"number"
              },
              "fWereWolfMysticism":{
                "name":"fWereWolfMysticism",
                "type":"number"
              },
              "sQuickMenu6":{
                "name":"sQuickMenu6",
                "type":"number"
              },
              "sWerewolfRefusal":{
                "name":"sWerewolfRefusal",
                "type":"number"
              },
              "sKeyName_6D":{
                "name":"sKeyName_6D",
                "type":"number"
              },
              "sHigh":{
                "name":"sHigh",
                "type":"number"
              },
              "sBookSkillMessage":{
                "name":"sBookSkillMessage",
                "type":"number"
              },
              "fWereWolfMediumArmor":{
                "name":"fWereWolfMediumArmor",
                "type":"number"
              },
              "fMaxHandToHandMult":{
                "name":"fMaxHandToHandMult",
                "type":"number"
              },
              "sLoadingMessage2":{
                "name":"sLoadingMessage2",
                "type":"number"
              },
              "sQuick9Xbox":{
                "name":"sQuick9Xbox",
                "type":"number"
              },
              "sQuick8Xbox":{
                "name":"sQuick8Xbox",
                "type":"number"
              },
              "sKeyName_21":{
                "name":"sKeyName_21",
                "type":"number"
              },
              "spoint":{
                "name":"spoint",
                "type":"number"
              },
              "fDiseaseXferChance":{
                "name":"fDiseaseXferChance",
                "type":"number"
              },
              "sQuick9Cmd":{
                "name":"sQuick9Cmd",
                "type":"number"
              },
              "sSpecialization":{
                "name":"sSpecialization",
                "type":"number"
              },
              "sLoadingMessage15":{
                "name":"sLoadingMessage15",
                "type":"number"
              },
              "sNotifyMessage35":{
                "name":"sNotifyMessage35",
                "type":"number"
              },
              "fWereWolfBluntWeapon":{
                "name":"fWereWolfBluntWeapon",
                "type":"number"
              },
              "sSaveMenuHelp05":{
                "name":"sSaveMenuHelp05",
                "type":"number"
              },
              "iTrainingMod":{
                "name":"iTrainingMod",
                "type":"number"
              },
              "sQuick6Xbox":{
                "name":"sQuick6Xbox",
                "type":"number"
              },
              "sControlsMenu6":{
                "name":"sControlsMenu6",
                "type":"number"
              },
              "sKeyName_4A":{
                "name":"sKeyName_4A",
                "type":"number"
              },
              "sIntDesc":{
                "name":"sIntDesc",
                "type":"number"
              },
              "sEffectAbsorbAttribute":{
                "name":"sEffectAbsorbAttribute",
                "type":"number"
              },
              "sEffectDamageHealth":{
                "name":"sEffectDamageHealth",
                "type":"number"
              },
              "sMissingMastersMsg":{
                "name":"sMissingMastersMsg",
                "type":"number"
              },
              "sMessage3":{
                "name":"sMessage3",
                "type":"number"
              },
              "sMessageQuestionAnswer3":{
                "name":"sMessageQuestionAnswer3",
                "type":"number"
              },
              "sBarterDialog3":{
                "name":"sBarterDialog3",
                "type":"number"
              },
              "iLevelUp03Mult":{
                "name":"iLevelUp03Mult",
                "type":"number"
              },
              "sBarterDialog6":{
                "name":"sBarterDialog6",
                "type":"number"
              },
              "sRepairServiceTitle":{
                "name":"sRepairServiceTitle",
                "type":"number"
              },
              "sMaximumSaveGameMessage":{
                "name":"sMaximumSaveGameMessage",
                "type":"number"
              },
              "sNotifyMessage27":{
                "name":"sNotifyMessage27",
                "type":"number"
              },
              "sSaveGameFailed":{
                "name":"sSaveGameFailed",
                "type":"number"
              },
              "sJump":{
                "name":"sJump",
                "type":"number"
              },
              "sBarterDialog11":{
                "name":"sBarterDialog11",
                "type":"number"
              },
              "sLookDownXbox":{
                "name":"sLookDownXbox",
                "type":"number"
              },
              "sKeyName_F4":{
                "name":"sKeyName_F4",
                "type":"number"
              },
              "sCharges":{
                "name":"sCharges",
                "type":"number"
              },
              "sNotifyMessage13":{
                "name":"sNotifyMessage13",
                "type":"number"
              },
              "sMagicGoldenSaintID":{
                "name":"sMagicGoldenSaintID",
                "type":"number"
              },
              "sMonthHeartfire":{
                "name":"sMonthHeartfire",
                "type":"number"
              },
              "sInventoryMessage3":{
                "name":"sInventoryMessage3",
                "type":"number"
              },
              "sSkillMarksman":{
                "name":"sSkillMarksman",
                "type":"number"
              },
              "sKeyName_B4":{
                "name":"sKeyName_B4",
                "type":"number"
              },
              "sOnce":{
                "name":"sOnce",
                "type":"number"
              },
              "sContentsMessage2":{
                "name":"sContentsMessage2",
                "type":"number"
              },
              "sEffectFrenzyCreature":{
                "name":"sEffectFrenzyCreature",
                "type":"number"
              },
              "sConsoleTitle":{
                "name":"sConsoleTitle",
                "type":"number"
              },
              "sCreateClassMenu2":{
                "name":"sCreateClassMenu2",
                "type":"number"
              },
              "fAudioVoiceDefaultMinDistance":{
                "name":"fAudioVoiceDefaultMinDistance",
                "type":"number"
              },
              "sMagicBoundHelmID":{
                "name":"sMagicBoundHelmID",
                "type":"number"
              },
              "spoints":{
                "name":"spoints",
                "type":"number"
              },
              "sArmor":{
                "name":"sArmor",
                "type":"number"
              },
              "sControlsMenu2":{
                "name":"sControlsMenu2",
                "type":"number"
              },
              "sLockFail":{
                "name":"sLockFail",
                "type":"number"
              },
              "fCombatDistanceWerewolfMod":{
                "name":"fCombatDistanceWerewolfMod",
                "type":"number"
              },
              "fAIRangeMeleeWeaponMult":{
                "name":"fAIRangeMeleeWeaponMult",
                "type":"number"
              },
              "sQuick2Cmd":{
                "name":"sQuick2Cmd",
                "type":"number"
              },
              "sControlsMenu4":{
                "name":"sControlsMenu4",
                "type":"number"
              },
              "sKeyName_1D":{
                "name":"sKeyName_1D",
                "type":"number"
              },
              "sBuy":{
                "name":"sBuy",
                "type":"number"
              },
              "sSkillShortblade":{
                "name":"sSkillShortblade",
                "type":"number"
              },
              "sKeyName_9B":{
                "name":"sKeyName_9B",
                "type":"number"
              },
              "sLoadingMessage14":{
                "name":"sLoadingMessage14",
                "type":"number"
              },
              "sEffectSummonWingedTwilight":{
                "name":"sEffectSummonWingedTwilight",
                "type":"number"
              },
              "sEffectResistParalysis":{
                "name":"sEffectResistParalysis",
                "type":"number"
              },
              "sNotifyMessage61":{
                "name":"sNotifyMessage61",
                "type":"number"
              },
              "sEffectWeaknessToNormalWeapons":{
                "name":"sEffectWeaknessToNormalWeapons",
                "type":"number"
              },
              "sDialogMenu1":{
                "name":"sDialogMenu1",
                "type":"number"
              },
              "fAIFleeFleeMult":{
                "name":"fAIFleeFleeMult",
                "type":"number"
              },
              "sEnchantmentMenu2":{
                "name":"sEnchantmentMenu2",
                "type":"number"
              },
              "sEnchantmentMenu3":{
                "name":"sEnchantmentMenu3",
                "type":"number"
              },
              "sSaveMenuHelp02":{
                "name":"sSaveMenuHelp02",
                "type":"number"
              },
              "sKeyName_08":{
                "name":"sKeyName_08",
                "type":"number"
              },
              "sNotifyMessage41":{
                "name":"sNotifyMessage41",
                "type":"number"
              },
              "sEnchantmentMenu8":{
                "name":"sEnchantmentMenu8",
                "type":"number"
              },
              "sBarterDialog5":{
                "name":"sBarterDialog5",
                "type":"number"
              },
              "sEnchantmentMenu9":{
                "name":"sEnchantmentMenu9",
                "type":"number"
              },
              "sSchoolRestoration":{
                "name":"sSchoolRestoration",
                "type":"number"
              },
              "sEnchantmentMenu11":{
                "name":"sEnchantmentMenu11",
                "type":"number"
              },
              "sDialogText1Xbox":{
                "name":"sDialogText1Xbox",
                "type":"number"
              },
              "sArcher":{
                "name":"sArcher",
                "type":"number"
              },
              "sOff":{
                "name":"sOff",
                "type":"number"
              },
              "sKeyName_B9":{
                "name":"sKeyName_B9",
                "type":"number"
              },
              "fCombatBlockRightAngle":{
                "name":"fCombatBlockRightAngle",
                "type":"number"
              },
              "sAlways":{
                "name":"sAlways",
                "type":"number"
              },
              "sEnchantmentHelp5":{
                "name":"sEnchantmentHelp5",
                "type":"number"
              },
              "sNotifyMessage12":{
                "name":"sNotifyMessage12",
                "type":"number"
              },
              "sUseXbox":{
                "name":"sUseXbox",
                "type":"number"
              },
              "sKeyName_B0":{
                "name":"sKeyName_B0",
                "type":"number"
              },
              "sSkillProgress":{
                "name":"sSkillProgress",
                "type":"number"
              },
              "sEnchantmentHelp9":{
                "name":"sEnchantmentHelp9",
                "type":"number"
              },
              "sInventoryMenu1":{
                "name":"sInventoryMenu1",
                "type":"number"
              },
              "sKeyName_09":{
                "name":"sKeyName_09",
                "type":"number"
              },
              "sItem":{
                "name":"sItem",
                "type":"number"
              },
              "sJumpXbox":{
                "name":"sJumpXbox",
                "type":"number"
              },
              "sEffectCurePoison":{
                "name":"sEffectCurePoison",
                "type":"number"
              },
              "fInteriorHeadTrackMult":{
                "name":"fInteriorHeadTrackMult",
                "type":"number"
              },
              "sDuration":{
                "name":"sDuration",
                "type":"number"
              },
              "sKeyName_C0":{
                "name":"sKeyName_C0",
                "type":"number"
              },
              "sRaceMenu6":{
                "name":"sRaceMenu6",
                "type":"number"
              },
              "sEffectWeaknessToFire":{
                "name":"sEffectWeaknessToFire",
                "type":"number"
              },
              "sKeyName_92":{
                "name":"sKeyName_92",
                "type":"number"
              },
              "sMagicBoundDaggerID":{
                "name":"sMagicBoundDaggerID",
                "type":"number"
              },
              "sAuto_Run":{
                "name":"sAuto_Run",
                "type":"number"
              },
              "fMinWalkSpeedCreature":{
                "name":"fMinWalkSpeedCreature",
                "type":"number"
              },
              "sRaceMenu7":{
                "name":"sRaceMenu7",
                "type":"number"
              },
              "sEffectWeaknessToPoison":{
                "name":"sEffectWeaknessToPoison",
                "type":"number"
              },
              "sKeyName_C8":{
                "name":"sKeyName_C8",
                "type":"number"
              },
              "sCenter":{
                "name":"sCenter",
                "type":"number"
              },
              "fBargainOfferMulti":{
                "name":"fBargainOfferMulti",
                "type":"number"
              },
              "sVoice":{
                "name":"sVoice",
                "type":"number"
              },
              "sLevelUpMsg":{
                "name":"sLevelUpMsg",
                "type":"number"
              },
              "sKeyName_F1":{
                "name":"sKeyName_F1",
                "type":"number"
              },
              "fReputationMod":{
                "name":"fReputationMod",
                "type":"number"
              },
              "sLevelUp":{
                "name":"sLevelUp",
                "type":"number"
              },
              "sRange":{
                "name":"sRange",
                "type":"number"
              },
              "sArmorRating":{
                "name":"sArmorRating",
                "type":"number"
              },
              "sDamage":{
                "name":"sDamage",
                "type":"number"
              },
              "fGreetDistanceReset":{
                "name":"fGreetDistanceReset",
                "type":"number"
              },
              "fWereWolfMarksman":{
                "name":"fWereWolfMarksman",
                "type":"number"
              },
              "fFatigueSwimWalkMult":{
                "name":"fFatigueSwimWalkMult",
                "type":"number"
              },
              "sKeyName_1E":{
                "name":"sKeyName_1E",
                "type":"number"
              },
              "spercent":{
                "name":"spercent",
                "type":"number"
              },
              "ssecond":{
                "name":"ssecond",
                "type":"number"
              },
              "sIngredients":{
                "name":"sIngredients",
                "type":"number"
              },
              "sActivateXbox":{
                "name":"sActivateXbox",
                "type":"number"
              },
              "sSpellmakingMenu1":{
                "name":"sSpellmakingMenu1",
                "type":"number"
              },
              "fFallDistanceMult":{
                "name":"fFallDistanceMult",
                "type":"number"
              },
              "fFightDispMult":{
                "name":"fFightDispMult",
                "type":"number"
              },
              "sKeyName_E0":{
                "name":"sKeyName_E0",
                "type":"number"
              },
              "sSkillClassMinor":{
                "name":"sSkillClassMinor",
                "type":"number"
              },
              "sKeyName_AA":{
                "name":"sKeyName_AA",
                "type":"number"
              },
              "iPerMinChance":{
                "name":"iPerMinChance",
                "type":"number"
              },
              "sLevels":{
                "name":"sLevels",
                "type":"number"
              },
              "sKeyName_BD":{
                "name":"sKeyName_BD",
                "type":"number"
              },
              "sStartError":{
                "name":"sStartError",
                "type":"number"
              },
              "sBribe":{
                "name":"sBribe",
                "type":"number"
              },
              "sRepairSuccess":{
                "name":"sRepairSuccess",
                "type":"number"
              },
              "sKeyName_FD":{
                "name":"sKeyName_FD",
                "type":"number"
              },
              "iLevelUp05Mult":{
                "name":"iLevelUp05Mult",
                "type":"number"
              },
              "sKeyName_07":{
                "name":"sKeyName_07",
                "type":"number"
              },
              "sKeyName_C5":{
                "name":"sKeyName_C5",
                "type":"number"
              },
              "sPersuasionMenuTitle":{
                "name":"sPersuasionMenuTitle",
                "type":"number"
              },
              "fBargainOfferBase":{
                "name":"fBargainOfferBase",
                "type":"number"
              },
              "sKeyName_1F":{
                "name":"sKeyName_1F",
                "type":"number"
              },
              "sKeyName_C6":{
                "name":"sKeyName_C6",
                "type":"number"
              },
              "sMagicInvalidEffect":{
                "name":"sMagicInvalidEffect",
                "type":"number"
              },
              "sMonthSunsdawn":{
                "name":"sMonthSunsdawn",
                "type":"number"
              },
              "sEnchantmentMenu1":{
                "name":"sEnchantmentMenu1",
                "type":"number"
              },
              "sEffectLock":{
                "name":"sEffectLock",
                "type":"number"
              },
              "sMagicCenturionSphereID":{
                "name":"sMagicCenturionSphereID",
                "type":"number"
              },
              "sMouseWheelUpShort":{
                "name":"sMouseWheelUpShort",
                "type":"number"
              },
              "sBattlemage":{
                "name":"sBattlemage",
                "type":"number"
              },
              "sOfferMenuTitle":{
                "name":"sOfferMenuTitle",
                "type":"number"
              },
              "sForward":{
                "name":"sForward",
                "type":"number"
              },
              "sEnchantmentHelp3":{
                "name":"sEnchantmentHelp3",
                "type":"number"
              },
              "iCuirassWeight":{
                "name":"iCuirassWeight",
                "type":"number"
              },
              "sRaceMenu2":{
                "name":"sRaceMenu2",
                "type":"number"
              },
              "sRestMenu2":{
                "name":"sRestMenu2",
                "type":"number"
              },
              "sBookPageTwo":{
                "name":"sBookPageTwo",
                "type":"number"
              },
              "sMagicCreature03ID":{
                "name":"sMagicCreature03ID",
                "type":"number"
              },
              "sRestMenu3":{
                "name":"sRestMenu3",
                "type":"number"
              },
              "sDisposeCorpseFail":{
                "name":"sDisposeCorpseFail",
                "type":"number"
              },
              "sEffectSummonGoldensaint":{
                "name":"sEffectSummonGoldensaint",
                "type":"number"
              },
              "iWereWolfFightMod":{
                "name":"iWereWolfFightMod",
                "type":"number"
              },
              "sServiceSpellsTitle":{
                "name":"sServiceSpellsTitle",
                "type":"number"
              },
              "sKeyName_AB":{
                "name":"sKeyName_AB",
                "type":"number"
              },
              "sLoadLastSaveMsg":{
                "name":"sLoadLastSaveMsg",
                "type":"number"
              },
              "fCrimeStealing":{
                "name":"fCrimeStealing",
                "type":"number"
              },
              "sMonthLastseed":{
                "name":"sMonthLastseed",
                "type":"number"
              },
              "fHandtoHandHealthPer":{
                "name":"fHandtoHandHealthPer",
                "type":"number"
              },
              "sKeyName_8A":{
                "name":"sKeyName_8A",
                "type":"number"
              },
              "sKeyName_C2":{
                "name":"sKeyName_C2",
                "type":"number"
              },
              "sKeyName_EE":{
                "name":"sKeyName_EE",
                "type":"number"
              },
              "sMagicSelectTitle":{
                "name":"sMagicSelectTitle",
                "type":"number"
              },
              "sRepair":{
                "name":"sRepair",
                "type":"number"
              },
              "sFace":{
                "name":"sFace",
                "type":"number"
              },
              "sNeedOneSkill":{
                "name":"sNeedOneSkill",
                "type":"number"
              },
              "sQuick5Xbox":{
                "name":"sQuick5Xbox",
                "type":"number"
              },
              "sEffectDivineIntervention":{
                "name":"sEffectDivineIntervention",
                "type":"number"
              },
              "iAlarmPickPocket":{
                "name":"iAlarmPickPocket",
                "type":"number"
              },
              "sQuickMenuTitle":{
                "name":"sQuickMenuTitle",
                "type":"number"
              },
              "sDark_Gamma":{
                "name":"sDark_Gamma",
                "type":"number"
              },
              "sMonthSunsdusk":{
                "name":"sMonthSunsdusk",
                "type":"number"
              },
              "sInventoryMessage1":{
                "name":"sInventoryMessage1",
                "type":"number"
              },
              "sEffectSilence":{
                "name":"sEffectSilence",
                "type":"number"
              },
              "sDurationDes":{
                "name":"sDurationDes",
                "type":"number"
              },
              "sJournalCmd":{
                "name":"sJournalCmd",
                "type":"number"
              },
              "fBlockStillBonus":{
                "name":"fBlockStillBonus",
                "type":"number"
              },
              "sMove":{
                "name":"sMove",
                "type":"number"
              },
              "sEffectFrostShield":{
                "name":"sEffectFrostShield",
                "type":"number"
              },
              "sCustom":{
                "name":"sCustom",
                "type":"number"
              },
              "fCombatDelayCreature":{
                "name":"fCombatDelayCreature",
                "type":"number"
              },
              "sKeyName_82":{
                "name":"sKeyName_82",
                "type":"number"
              },
              "sNotifyMessage6":{
                "name":"sNotifyMessage6",
                "type":"number"
              },
              "sRangeDes":{
                "name":"sRangeDes",
                "type":"number"
              },
              "sCalcinator":{
                "name":"sCalcinator",
                "type":"number"
              },
              "sRetort":{
                "name":"sRetort",
                "type":"number"
              },
              "sSchoolIllusion":{
                "name":"sSchoolIllusion",
                "type":"number"
              },
              "sKeyName_F7":{
                "name":"sKeyName_F7",
                "type":"number"
              },
              "sKeyName_A6":{
                "name":"sKeyName_A6",
                "type":"number"
              },
              "sEffectCorpus":{
                "name":"sEffectCorpus",
                "type":"number"
              },
              "fDispFactionMod":{
                "name":"fDispFactionMod",
                "type":"number"
              },
              "sEffectResistMagicka":{
                "name":"sEffectResistMagicka",
                "type":"number"
              },
              "sQuestionMark":{
                "name":"sQuestionMark",
                "type":"number"
              },
              "sKeyName_AD":{
                "name":"sKeyName_AD",
                "type":"number"
              },
              "sKeyName_5D":{
                "name":"sKeyName_5D",
                "type":"number"
              },
              "sEffectAbsorbSpellPoints":{
                "name":"sEffectAbsorbSpellPoints",
                "type":"number"
              },
              "sPrevSpellXbox":{
                "name":"sPrevSpellXbox",
                "type":"number"
              },
              "sYourGold":{
                "name":"sYourGold",
                "type":"number"
              },
              "sKeyName_83":{
                "name":"sKeyName_83",
                "type":"number"
              },
              "sNextWeaponXbox":{
                "name":"sNextWeaponXbox",
                "type":"number"
              },
              "sEffectFortifySpellpoints":{
                "name":"sEffectFortifySpellpoints",
                "type":"number"
              },
              "sTargetCriticalStrike":{
                "name":"sTargetCriticalStrike",
                "type":"number"
              },
              "fPerTempMult":{
                "name":"fPerTempMult",
                "type":"number"
              },
              "sSoulGemsWithSouls":{
                "name":"sSoulGemsWithSouls",
                "type":"number"
              },
              "sQuick1Cmd":{
                "name":"sQuick1Cmd",
                "type":"number"
              },
              "iLevelupMiscMultAttriubte":{
                "name":"iLevelupMiscMultAttriubte",
                "type":"number"
              },
              "sOptions":{
                "name":"sOptions",
                "type":"number"
              },
              "sContentsMessage1":{
                "name":"sContentsMessage1",
                "type":"number"
              },
              "sSpellmakingHelp6":{
                "name":"sSpellmakingHelp6",
                "type":"number"
              },
              "sSell":{
                "name":"sSell",
                "type":"number"
              },
              "fPotionStrengthMult":{
                "name":"fPotionStrengthMult",
                "type":"number"
              },
              "sEffectSummonCreature05":{
                "name":"sEffectSummonCreature05",
                "type":"number"
              },
              "sMagicCorprusWorsens":{
                "name":"sMagicCorprusWorsens",
                "type":"number"
              },
              "sThief":{
                "name":"sThief",
                "type":"number"
              },
              "fSoulGemMult":{
                "name":"fSoulGemMult",
                "type":"number"
              },
              "sReady_Magic":{
                "name":"sReady_Magic",
                "type":"number"
              },
              "sService":{
                "name":"sService",
                "type":"number"
              },
              "sMastPlugMismatchMsg":{
                "name":"sMastPlugMismatchMsg",
                "type":"number"
              },
              "iBlockMinChance":{
                "name":"iBlockMinChance",
                "type":"number"
              },
              "sKeyName_74":{
                "name":"sKeyName_74",
                "type":"number"
              },
              "fDispAttacking":{
                "name":"fDispAttacking",
                "type":"number"
              },
              "sTurn":{
                "name":"sTurn",
                "type":"number"
              },
              "sEffectLightningShield":{
                "name":"sEffectLightningShield",
                "type":"number"
              },
              "sEffectDrainSpellpoints":{
                "name":"sEffectDrainSpellpoints",
                "type":"number"
              },
              "sTopics":{
                "name":"sTopics",
                "type":"number"
              },
              "sCancel":{
                "name":"sCancel",
                "type":"number"
              },
              "sQuickMenu":{
                "name":"sQuickMenu",
                "type":"number"
              },
              "sEffects":{
                "name":"sEffects",
                "type":"number"
              },
              "sLoadingMessage9":{
                "name":"sLoadingMessage9",
                "type":"number"
              },
              "fPCbaseMagickaMult":{
                "name":"fPCbaseMagickaMult",
                "type":"number"
              },
              "fDispPickPocketMod":{
                "name":"fDispPickPocketMod",
                "type":"number"
              },
              "sSkillAlteration":{
                "name":"sSkillAlteration",
                "type":"number"
              },
              "sContainer":{
                "name":"sContainer",
                "type":"number"
              },
              "sEffectLevitate":{
                "name":"sEffectLevitate",
                "type":"number"
              },
              "sDeleteNote":{
                "name":"sDeleteNote",
                "type":"number"
              },
              "fWereWolfUnarmored":{
                "name":"fWereWolfUnarmored",
                "type":"number"
              },
              "sQuick7Cmd":{
                "name":"sQuick7Cmd",
                "type":"number"
              },
              "sBlocks":{
                "name":"sBlocks",
                "type":"number"
              },
              "fSwimRunBase":{
                "name":"fSwimRunBase",
                "type":"number"
              },
              "sEffectCureParalyzation":{
                "name":"sEffectCureParalyzation",
                "type":"number"
              },
              "iVoiceHitOdds":{
                "name":"iVoiceHitOdds",
                "type":"number"
              },
              "sXStrafe":{
                "name":"sXStrafe",
                "type":"number"
              },
              "sAudio":{
                "name":"sAudio",
                "type":"number"
              },
              "sNotifyMessage29":{
                "name":"sNotifyMessage29",
                "type":"number"
              },
              "sQuick0Xbox":{
                "name":"sQuick0Xbox",
                "type":"number"
              },
              "fHandToHandReach":{
                "name":"fHandToHandReach",
                "type":"number"
              },
              "sFileSize":{
                "name":"sFileSize",
                "type":"number"
              },
              "sSave":{
                "name":"sSave",
                "type":"number"
              },
              "sLevelUpMenu3":{
                "name":"sLevelUpMenu3",
                "type":"number"
              },
              "sWerewolfAlarmMessage":{
                "name":"sWerewolfAlarmMessage",
                "type":"number"
              },
              "sControlsMenu1":{
                "name":"sControlsMenu1",
                "type":"number"
              },
              "sInventorySelectNoItems":{
                "name":"sInventorySelectNoItems",
                "type":"number"
              },
              "sLocal":{
                "name":"sLocal",
                "type":"number"
              },
              "sEffectTelekinesis":{
                "name":"sEffectTelekinesis",
                "type":"number"
              },
              "sTotalCost":{
                "name":"sTotalCost",
                "type":"number"
              },
              "sNotifyMessage7":{
                "name":"sNotifyMessage7",
                "type":"number"
              },
              "fSneakBootMult":{
                "name":"fSneakBootMult",
                "type":"number"
              },
              "sEffectRecall":{
                "name":"sEffectRecall",
                "type":"number"
              },
              "sKeyName_6C":{
                "name":"sKeyName_6C",
                "type":"number"
              },
              "iFightAlarmMult":{
                "name":"iFightAlarmMult",
                "type":"number"
              },
              "sShadows":{
                "name":"sShadows",
                "type":"number"
              },
              "sMagicFlameAtronachID":{
                "name":"sMagicFlameAtronachID",
                "type":"number"
              },
              "sGamma_Correction":{
                "name":"sGamma_Correction",
                "type":"number"
              },
              "sCastCost":{
                "name":"sCastCost",
                "type":"number"
              },
              "sKeyName_FF":{
                "name":"sKeyName_FF",
                "type":"number"
              },
              "sBookPageOne":{
                "name":"sBookPageOne",
                "type":"number"
              },
              "sMoveUpXbox":{
                "name":"sMoveUpXbox",
                "type":"number"
              },
              "sKeyName_87":{
                "name":"sKeyName_87",
                "type":"number"
              },
              "sEffectWeaknessToCorprusDisease":{
                "name":"sEffectWeaknessToCorprusDisease",
                "type":"number"
              },
              "iLevelUp07Mult":{
                "name":"iLevelUp07Mult",
                "type":"number"
              },
              "sOffer":{
                "name":"sOffer",
                "type":"number"
              },
              "sMagicCreature01ID":{
                "name":"sMagicCreature01ID",
                "type":"number"
              },
              "sKeyName_F9":{
                "name":"sKeyName_F9",
                "type":"number"
              },
              "sFavoriteSkills":{
                "name":"sFavoriteSkills",
                "type":"number"
              },
              "sInventorySelectNoSoul":{
                "name":"sInventorySelectNoSoul",
                "type":"number"
              },
              "sQuickMenu4":{
                "name":"sQuickMenu4",
                "type":"number"
              },
              "sQuickMenu5":{
                "name":"sQuickMenu5",
                "type":"number"
              },
              "sOneHanded":{
                "name":"sOneHanded",
                "type":"number"
              },
              "sReady_Weapon":{
                "name":"sReady_Weapon",
                "type":"number"
              },
              "sKeyName_70":{
                "name":"sKeyName_70",
                "type":"number"
              },
              "sEffectBoundCuirass":{
                "name":"sEffectBoundCuirass",
                "type":"number"
              },
              "sXTimes":{
                "name":"sXTimes",
                "type":"number"
              },
              "sUnequip":{
                "name":"sUnequip",
                "type":"number"
              },
              "sNotifyMessage64":{
                "name":"sNotifyMessage64",
                "type":"number"
              },
              "fWereWolfEndurance":{
                "name":"fWereWolfEndurance",
                "type":"number"
              },
              "iLevelupMajorMult":{
                "name":"iLevelupMajorMult",
                "type":"number"
              },
              "sScrolldown":{
                "name":"sScrolldown",
                "type":"number"
              },
              "fAudioMinDistanceMult":{
                "name":"fAudioMinDistanceMult",
                "type":"number"
              },
              "sScrollup":{
                "name":"sScrollup",
                "type":"number"
              },
              "sEffectBlind":{
                "name":"sEffectBlind",
                "type":"number"
              },
              "fNPCHealthBarTime":{
                "name":"fNPCHealthBarTime",
                "type":"number"
              },
              "sSleepInterrupt":{
                "name":"sSleepInterrupt",
                "type":"number"
              },
              "sSetValueMessage01":{
                "name":"sSetValueMessage01",
                "type":"number"
              },
              "sCrimeHelp":{
                "name":"sCrimeHelp",
                "type":"number"
              },
              "sKeyName_BC":{
                "name":"sKeyName_BC",
                "type":"number"
              },
              "fMiscSkillBonus":{
                "name":"fMiscSkillBonus",
                "type":"number"
              },
              "iFightAttack":{
                "name":"iFightAttack",
                "type":"number"
              },
              "fMagicItemRechargePerSecond":{
                "name":"fMagicItemRechargePerSecond",
                "type":"number"
              },
              "fTrapCostMult":{
                "name":"fTrapCostMult",
                "type":"number"
              },
              "iGreetDuration":{
                "name":"iGreetDuration",
                "type":"number"
              },
              "fWereWolfHeavyArmor":{
                "name":"fWereWolfHeavyArmor",
                "type":"number"
              },
              "sWeaponTab":{
                "name":"sWeaponTab",
                "type":"number"
              },
              "sDifficulty":{
                "name":"sDifficulty",
                "type":"number"
              },
              "sNotifyMessage36":{
                "name":"sNotifyMessage36",
                "type":"number"
              },
              "sSkillClassMajor":{
                "name":"sSkillClassMajor",
                "type":"number"
              },
              "sKeyName_A3":{
                "name":"sKeyName_A3",
                "type":"number"
              },
              "sEffectFortifyHealth":{
                "name":"sEffectFortifyHealth",
                "type":"number"
              },
              "sLoadFailedMessage":{
                "name":"sLoadFailedMessage",
                "type":"number"
              },
              "sfor":{
                "name":"sfor",
                "type":"number"
              },
              "sKeyName_79":{
                "name":"sKeyName_79",
                "type":"number"
              },
              "sKeyName_11":{
                "name":"sKeyName_11",
                "type":"number"
              },
              "sCompanionShare":{
                "name":"sCompanionShare",
                "type":"number"
              },
              "sCompanionWarningMessage":{
                "name":"sCompanionWarningMessage",
                "type":"number"
              },
              "iMagicItemChargeConst":{
                "name":"iMagicItemChargeConst",
                "type":"number"
              },
              "sQuickSaveXbox":{
                "name":"sQuickSaveXbox",
                "type":"number"
              },
              "sAttributeStrength":{
                "name":"sAttributeStrength",
                "type":"number"
              },
              "sTravelServiceTitle":{
                "name":"sTravelServiceTitle",
                "type":"number"
              },
              "sAttributeWillpower":{
                "name":"sAttributeWillpower",
                "type":"number"
              },
              "fFatigueSwimRunBase":{
                "name":"fFatigueSwimRunBase",
                "type":"number"
              },
              "sKeyName_00":{
                "name":"sKeyName_00",
                "type":"number"
              },
              "sAttributeSpeed":{
                "name":"sAttributeSpeed",
                "type":"number"
              },
              "sAttributeEndurance":{
                "name":"sAttributeEndurance",
                "type":"number"
              },
              "sMonthMorningstar":{
                "name":"sMonthMorningstar",
                "type":"number"
              },
              "iAlchemyMod":{
                "name":"iAlchemyMod",
                "type":"number"
              },
              "iAutoSpellDestructionMax":{
                "name":"iAutoSpellDestructionMax",
                "type":"number"
              },
              "iMagicItemChargeUse":{
                "name":"iMagicItemChargeUse",
                "type":"number"
              },
              "sSkillHeavyarmor":{
                "name":"sSkillHeavyarmor",
                "type":"number"
              },
              "sSkillBluntweapon":{
                "name":"sSkillBluntweapon",
                "type":"number"
              },
              "sKeyName_BA":{
                "name":"sKeyName_BA",
                "type":"number"
              },
              "sSkillSpear":{
                "name":"sSkillSpear",
                "type":"number"
              },
              "sSkillAthletics":{
                "name":"sSkillAthletics",
                "type":"number"
              },
              "sMap":{
                "name":"sMap",
                "type":"number"
              },
              "fMagicItemPriceMult":{
                "name":"fMagicItemPriceMult",
                "type":"number"
              },
              "sIntimidate":{
                "name":"sIntimidate",
                "type":"number"
              },
              "sSkillRestoration":{
                "name":"sSkillRestoration",
                "type":"number"
              },
              "sStartCellError":{
                "name":"sStartCellError",
                "type":"number"
              },
              "sSkillSecurity":{
                "name":"sSkillSecurity",
                "type":"number"
              },
              "sQuality":{
                "name":"sQuality",
                "type":"number"
              },
              "sDrain":{
                "name":"sDrain",
                "type":"number"
              },
              "fDispBargainSuccessMod":{
                "name":"fDispBargainSuccessMod",
                "type":"number"
              },
              "fFatigueSpellCostMult":{
                "name":"fFatigueSpellCostMult",
                "type":"number"
              },
              "sThrust":{
                "name":"sThrust",
                "type":"number"
              },
              "sSpecializationStealth":{
                "name":"sSpecializationStealth",
                "type":"number"
              },
              "sMagicClannfearID":{
                "name":"sMagicClannfearID",
                "type":"number"
              },
              "sBirthSign":{
                "name":"sBirthSign",
                "type":"number"
              },
              "sKeyName_88":{
                "name":"sKeyName_88",
                "type":"number"
              },
              "iWereWolfBounty":{
                "name":"iWereWolfBounty",
                "type":"number"
              },
              "sNotifyMessage48":{
                "name":"sNotifyMessage48",
                "type":"number"
              },
              "iAlarmStealing":{
                "name":"iAlarmStealing",
                "type":"number"
              },
              "sonword":{
                "name":"sonword",
                "type":"number"
              },
              "sReputation":{
                "name":"sReputation",
                "type":"number"
              },
              "sBackspace":{
                "name":"sBackspace",
                "type":"number"
              },
              "sRun":{
                "name":"sRun",
                "type":"number"
              },
              "sMedium":{
                "name":"sMedium",
                "type":"number"
              },
              "fWereWolfAcrobatics":{
                "name":"fWereWolfAcrobatics",
                "type":"number"
              },
              "fFatigueJumpBase":{
                "name":"fFatigueJumpBase",
                "type":"number"
              },
              "sTrainingServiceTitle":{
                "name":"sTrainingServiceTitle",
                "type":"number"
              },
              "sEnchantmentHelp8":{
                "name":"sEnchantmentHelp8",
                "type":"number"
              },
              "sNightblade":{
                "name":"sNightblade",
                "type":"number"
              },
              "sKeyName_F0":{
                "name":"sKeyName_F0",
                "type":"number"
              },
              "fFatigueAttackMult":{
                "name":"fFatigueAttackMult",
                "type":"number"
              },
              "fFatigueAttackBase":{
                "name":"fFatigueAttackBase",
                "type":"number"
              },
              "sRace":{
                "name":"sRace",
                "type":"number"
              },
              "sKeyName_CC":{
                "name":"sKeyName_CC",
                "type":"number"
              },
              "sStrDesc":{
                "name":"sStrDesc",
                "type":"number"
              },
              "sMagic":{
                "name":"sMagic",
                "type":"number"
              },
              "sMaster":{
                "name":"sMaster",
                "type":"number"
              },
              "sRacialTraits":{
                "name":"sRacialTraits",
                "type":"number"
              },
              "fSwingBlockBase":{
                "name":"fSwingBlockBase",
                "type":"number"
              },
              "fRestMagicMult":{
                "name":"fRestMagicMult",
                "type":"number"
              },
              "sMagicMenu":{
                "name":"sMagicMenu",
                "type":"number"
              },
              "iAutoPCSpellMax":{
                "name":"iAutoPCSpellMax",
                "type":"number"
              },
              "sMagicItem":{
                "name":"sMagicItem",
                "type":"number"
              },
              "sMaxSale":{
                "name":"sMaxSale",
                "type":"number"
              },
              "sTotalSold":{
                "name":"sTotalSold",
                "type":"number"
              },
              "sEffectDrainAttribute":{
                "name":"sEffectDrainAttribute",
                "type":"number"
              },
              "sEffectBoundBoots":{
                "name":"sEffectBoundBoots",
                "type":"number"
              },
              "sEffectDamageFatigue":{
                "name":"sEffectDamageFatigue",
                "type":"number"
              },
              "sKeyName_C9":{
                "name":"sKeyName_C9",
                "type":"number"
              },
              "sAttack":{
                "name":"sAttack",
                "type":"number"
              },
              "fUnarmoredBase1":{
                "name":"fUnarmoredBase1",
                "type":"number"
              },
              "sHealth":{
                "name":"sHealth",
                "type":"number"
              },
              "sKeyName_E9":{
                "name":"sKeyName_E9",
                "type":"number"
              },
              "iLevelupMinorMult":{
                "name":"iLevelupMinorMult",
                "type":"number"
              },
              "fHoldBreathTime":{
                "name":"fHoldBreathTime",
                "type":"number"
              },
              "sKeyName_77":{
                "name":"sKeyName_77",
                "type":"number"
              },
              "sSkillHandtohand":{
                "name":"sSkillHandtohand",
                "type":"number"
              },
              "sKeyName_19":{
                "name":"sKeyName_19",
                "type":"number"
              },
              "sEndDesc":{
                "name":"sEndDesc",
                "type":"number"
              },
              "sSpecializationMenu1":{
                "name":"sSpecializationMenu1",
                "type":"number"
              },
              "iHelmWeight":{
                "name":"iHelmWeight",
                "type":"number"
              },
              "fMaxHeadTrackDistance":{
                "name":"fMaxHeadTrackDistance",
                "type":"number"
              },
              "sWerewolfPopup":{
                "name":"sWerewolfPopup",
                "type":"number"
              },
              "sTraining":{
                "name":"sTraining",
                "type":"number"
              },
              "fDamageStrengthBase":{
                "name":"fDamageStrengthBase",
                "type":"number"
              },
              "sMagDesc":{
                "name":"sMagDesc",
                "type":"number"
              },
              "fWortChanceValue":{
                "name":"fWortChanceValue",
                "type":"number"
              },
              "sDefaultCellname":{
                "name":"sDefaultCellname",
                "type":"number"
              },
              "fFallAcroMult":{
                "name":"fFallAcroMult",
                "type":"number"
              },
              "fMinWalkSpeed":{
                "name":"fMinWalkSpeed",
                "type":"number"
              },
              "sKeyName_26":{
                "name":"sKeyName_26",
                "type":"number"
              },
              "sSpellmakingHelp4":{
                "name":"sSpellmakingHelp4",
                "type":"number"
              },
              "fMaxWalkSpeed":{
                "name":"fMaxWalkSpeed",
                "type":"number"
              },
              "fMaxWalkSpeedCreature":{
                "name":"fMaxWalkSpeedCreature",
                "type":"number"
              },
              "sEffectJump":{
                "name":"sEffectJump",
                "type":"number"
              },
              "fEncumberedMoveEffect":{
                "name":"fEncumberedMoveEffect",
                "type":"number"
              },
              "sSkillIllusion":{
                "name":"sSkillIllusion",
                "type":"number"
              },
              "sSkillsMenuReputationHelp":{
                "name":"sSkillsMenuReputationHelp",
                "type":"number"
              },
              "fBaseRunMultiplier":{
                "name":"fBaseRunMultiplier",
                "type":"number"
              },
              "sKeyName_F8":{
                "name":"sKeyName_F8",
                "type":"number"
              },
              "fWereWolfAthletics":{
                "name":"fWereWolfAthletics",
                "type":"number"
              },
              "fAthleticsRunBonus":{
                "name":"fAthleticsRunBonus",
                "type":"number"
              },
              "sWilDesc":{
                "name":"sWilDesc",
                "type":"number"
              },
              "sKeyName_9C":{
                "name":"sKeyName_9C",
                "type":"number"
              },
              "fJumpEncumbranceMultiplier":{
                "name":"fJumpEncumbranceMultiplier",
                "type":"number"
              },
              "sFaction":{
                "name":"sFaction",
                "type":"number"
              },
              "sEnableJoystick":{
                "name":"sEnableJoystick",
                "type":"number"
              },
              "fJumpMoveBase":{
                "name":"fJumpMoveBase",
                "type":"number"
              },
              "sNotifyMessage46":{
                "name":"sNotifyMessage46",
                "type":"number"
              },
              "fMagesGuildTravel":{
                "name":"fMagesGuildTravel",
                "type":"number"
              },
              "sPowers":{
                "name":"sPowers",
                "type":"number"
              },
              "sLevelUpMenu2":{
                "name":"sLevelUpMenu2",
                "type":"number"
              },
              "fSwimWalkAthleticsMult":{
                "name":"fSwimWalkAthleticsMult",
                "type":"number"
              },
              "fSuffocationDamage":{
                "name":"fSuffocationDamage",
                "type":"number"
              },
              "sNotifyMessage39":{
                "name":"sNotifyMessage39",
                "type":"number"
              },
              "fFatigueJumpMult":{
                "name":"fFatigueJumpMult",
                "type":"number"
              },
              "sKeyName_24":{
                "name":"sKeyName_24",
                "type":"number"
              },
              "fFallDamageDistanceMin":{
                "name":"fFallDamageDistanceMin",
                "type":"number"
              },
              "sDelete":{
                "name":"sDelete",
                "type":"number"
              },
              "iFightKilling":{
                "name":"iFightKilling",
                "type":"number"
              },
              "fFallAcroBase":{
                "name":"fFallAcroBase",
                "type":"number"
              },
              "sNotifyMessage28":{
                "name":"sNotifyMessage28",
                "type":"number"
              },
              "iMaxActivateDist":{
                "name":"iMaxActivateDist",
                "type":"number"
              },
              "sKeyName_93":{
                "name":"sKeyName_93",
                "type":"number"
              },
              "fVanityDelay":{
                "name":"fVanityDelay",
                "type":"number"
              },
              "sKeyName_03":{
                "name":"sKeyName_03",
                "type":"number"
              },
              "sSkillsMenu1":{
                "name":"sSkillsMenu1",
                "type":"number"
              },
              "iGauntletWeight":{
                "name":"iGauntletWeight",
                "type":"number"
              },
              "iGreavesWeight":{
                "name":"iGreavesWeight",
                "type":"number"
              },
              "sSoultrapSuccess":{
                "name":"sSoultrapSuccess",
                "type":"number"
              },
              "fJumpAcrobaticsBase":{
                "name":"fJumpAcrobaticsBase",
                "type":"number"
              },
              "iBootsWeight":{
                "name":"iBootsWeight",
                "type":"number"
              },
              "fStromWalkMult":{
                "name":"fStromWalkMult",
                "type":"number"
              },
              "fSpellMakingValueMult":{
                "name":"fSpellMakingValueMult",
                "type":"number"
              },
              "sEffectAlmsiviIntervention":{
                "name":"sEffectAlmsiviIntervention",
                "type":"number"
              },
              "iPauldronWeight":{
                "name":"iPauldronWeight",
                "type":"number"
              },
              "sSkillAlchemy":{
                "name":"sSkillAlchemy",
                "type":"number"
              },
              "sRestMenu4":{
                "name":"sRestMenu4",
                "type":"number"
              },
              "iCrimeAttack":{
                "name":"iCrimeAttack",
                "type":"number"
              },
              "sMoveDownXbox":{
                "name":"sMoveDownXbox",
                "type":"number"
              },
              "sRestore":{
                "name":"sRestore",
                "type":"number"
              },
              "fWereWolfIllusion":{
                "name":"fWereWolfIllusion",
                "type":"number"
              },
              "sMonk":{
                "name":"sMonk",
                "type":"number"
              },
              "sfootarea":{
                "name":"sfootarea",
                "type":"number"
              },
              "sKeyName_E7":{
                "name":"sKeyName_E7",
                "type":"number"
              },
              "sActorInCombat":{
                "name":"sActorInCombat",
                "type":"number"
              },
              "fFatigueSneakBase":{
                "name":"fFatigueSneakBase",
                "type":"number"
              },
              "sTraits":{
                "name":"sTraits",
                "type":"number"
              },
              "fFatigueSneakMult":{
                "name":"fFatigueSneakMult",
                "type":"number"
              },
              "sLoadingErrorsMsg":{
                "name":"sLoadingErrorsMsg",
                "type":"number"
              },
              "fFatigueReturnBase":{
                "name":"fFatigueReturnBase",
                "type":"number"
              },
              "iLevelUp04Mult":{
                "name":"iLevelUp04Mult",
                "type":"number"
              },
              "sNotifyMessage1":{
                "name":"sNotifyMessage1",
                "type":"number"
              },
              "sKeyName_CE":{
                "name":"sKeyName_CE",
                "type":"number"
              },
              "sSkillLightarmor":{
                "name":"sSkillLightarmor",
                "type":"number"
              },
              "sNotifyMessage65":{
                "name":"sNotifyMessage65",
                "type":"number"
              },
              "sEffectRestoreHealth":{
                "name":"sEffectRestoreHealth",
                "type":"number"
              },
              "fMagicItemStrikeMult":{
                "name":"fMagicItemStrikeMult",
                "type":"number"
              },
              "fMagicItemConstantMult":{
                "name":"fMagicItemConstantMult",
                "type":"number"
              },
              "iVoiceAttackOdds":{
                "name":"iVoiceAttackOdds",
                "type":"number"
              },
              "fEnchantmentChanceMult":{
                "name":"fEnchantmentChanceMult",
                "type":"number"
              },
              "fNPCbaseMagickaMult":{
                "name":"fNPCbaseMagickaMult",
                "type":"number"
              },
              "iAutoSpellTimesCanCast":{
                "name":"iAutoSpellTimesCanCast",
                "type":"number"
              },
              "sAttributeIntelligence":{
                "name":"sAttributeIntelligence",
                "type":"number"
              },
              "sPotionSuccess":{
                "name":"sPotionSuccess",
                "type":"number"
              },
              "iAutoRepFacMod":{
                "name":"iAutoRepFacMod",
                "type":"number"
              },
              "iAutoRepLevMod":{
                "name":"iAutoRepLevMod",
                "type":"number"
              },
              "iMagicItemChargeOnce":{
                "name":"iMagicItemChargeOnce",
                "type":"number"
              },
              "sGoodbye":{
                "name":"sGoodbye",
                "type":"number"
              },
              "sSkillMysticism":{
                "name":"sSkillMysticism",
                "type":"number"
              },
              "sKeyName_90":{
                "name":"sKeyName_90",
                "type":"number"
              },
              "iMagicItemChargeStrike":{
                "name":"iMagicItemChargeStrike",
                "type":"number"
              },
              "iMonthsToRespawn":{
                "name":"iMonthsToRespawn",
                "type":"number"
              },
              "fCombatTorsoStartPercent":{
                "name":"fCombatTorsoStartPercent",
                "type":"number"
              },
              "fCorpseRespawnDelay":{
                "name":"fCorpseRespawnDelay",
                "type":"number"
              },
              "fBarterGoldResetDelay":{
                "name":"fBarterGoldResetDelay",
                "type":"number"
              },
              "sJournalXbox":{
                "name":"sJournalXbox",
                "type":"number"
              },
              "fCrimeGoldTurnInMult":{
                "name":"fCrimeGoldTurnInMult",
                "type":"number"
              },
              "fLightMaxMod":{
                "name":"fLightMaxMod",
                "type":"number"
              },
              "sCreateClassMenuHelp1":{
                "name":"sCreateClassMenuHelp1",
                "type":"number"
              },
              "iBarterFailDisposition":{
                "name":"iBarterFailDisposition",
                "type":"number"
              },
              "iLevelupTotal":{
                "name":"iLevelupTotal",
                "type":"number"
              },
              "sName":{
                "name":"sName",
                "type":"number"
              },
              "sCrimeMessage":{
                "name":"sCrimeMessage",
                "type":"number"
              },
              "iShieldWeight":{
                "name":"iShieldWeight",
                "type":"number"
              },
              "sTypeCurse":{
                "name":"sTypeCurse",
                "type":"number"
              },
              "iLevelupSpecialization":{
                "name":"iLevelupSpecialization",
                "type":"number"
              },
              "fEndFatigueMult":{
                "name":"fEndFatigueMult",
                "type":"number"
              },
              "iLevelUp01Mult":{
                "name":"iLevelUp01Mult",
                "type":"number"
              },
              "sSkillSpeechcraft":{
                "name":"sSkillSpeechcraft",
                "type":"number"
              },
              "sSchool":{
                "name":"sSchool",
                "type":"number"
              },
              "sEffectSummonAncestralGhost":{
                "name":"sEffectSummonAncestralGhost",
                "type":"number"
              },
              "sSlideRightXbox":{
                "name":"sSlideRightXbox",
                "type":"number"
              },
              "fEnchantmentMult":{
                "name":"fEnchantmentMult",
                "type":"number"
              },
              "iLevelUp10Mult":{
                "name":"iLevelUp10Mult",
                "type":"number"
              },
              "sKnight":{
                "name":"sKnight",
                "type":"number"
              },
              "fEnchantmentConstantDurationMult":{
                "name":"fEnchantmentConstantDurationMult",
                "type":"number"
              },
              "fCombatArmorMinMult":{
                "name":"fCombatArmorMinMult",
                "type":"number"
              },
              "fWereWolfPersonality":{
                "name":"fWereWolfPersonality",
                "type":"number"
              },
              "sEffectAbsorbSkill":{
                "name":"sEffectAbsorbSkill",
                "type":"number"
              },
              "sLoadingMessage3":{
                "name":"sLoadingMessage3",
                "type":"number"
              },
              "sKeyName_5C":{
                "name":"sKeyName_5C",
                "type":"number"
              },
              "sVideoWarning":{
                "name":"sVideoWarning",
                "type":"number"
              },
              "sSpellmaking":{
                "name":"sSpellmaking",
                "type":"number"
              },
              "fTargetSpellMaxSpeed":{
                "name":"fTargetSpellMaxSpeed",
                "type":"number"
              },
              "sTrapped":{
                "name":"sTrapped",
                "type":"number"
              },
              "fDispRaceMod":{
                "name":"fDispRaceMod",
                "type":"number"
              },
              "fDispFactionRankBase":{
                "name":"fDispFactionRankBase",
                "type":"number"
              },
              "sSkillMercantile":{
                "name":"sSkillMercantile",
                "type":"number"
              },
              "sCondition":{
                "name":"sCondition",
                "type":"number"
              },
              "sSaveMenuHelp06":{
                "name":"sSaveMenuHelp06",
                "type":"number"
              },
              "sMagicScampID":{
                "name":"sMagicScampID",
                "type":"number"
              },
              "sEffectSummonBonelord":{
                "name":"sEffectSummonBonelord",
                "type":"number"
              },
              "iDispKilling":{
                "name":"iDispKilling",
                "type":"number"
              },
              "sRaceMenu1":{
                "name":"sRaceMenu1",
                "type":"number"
              },
              "fBribe100Mod":{
                "name":"fBribe100Mod",
                "type":"number"
              },
              "sCrouchXbox":{
                "name":"sCrouchXbox",
                "type":"number"
              },
              "sEffectCureBlightDisease":{
                "name":"sEffectCureBlightDisease",
                "type":"number"
              },
              "sMonthSecondseed":{
                "name":"sMonthSecondseed",
                "type":"number"
              },
              "fMajorSkillBonus":{
                "name":"fMajorSkillBonus",
                "type":"number"
              },
              "fMinorSkillBonus":{
                "name":"fMinorSkillBonus",
                "type":"number"
              },
              "iBarterSuccessDisposition":{
                "name":"iBarterSuccessDisposition",
                "type":"number"
              },
              "iAlarmKilling":{
                "name":"iAlarmKilling",
                "type":"number"
              },
              "sKeyName_E4":{
                "name":"sKeyName_E4",
                "type":"number"
              },
              "iAlarmAttack":{
                "name":"iAlarmAttack",
                "type":"number"
              },
              "sseconds":{
                "name":"sseconds",
                "type":"number"
              },
              "sEffectFireDamage":{
                "name":"sEffectFireDamage",
                "type":"number"
              },
              "sKeyName_94":{
                "name":"sKeyName_94",
                "type":"number"
              },
              "sChop":{
                "name":"sChop",
                "type":"number"
              },
              "iBaseArmorSkill":{
                "name":"iBaseArmorSkill",
                "type":"number"
              },
              "sEnchantmentMenu12":{
                "name":"sEnchantmentMenu12",
                "type":"number"
              },
              "sLevelUpMenu4":{
                "name":"sLevelUpMenu4",
                "type":"number"
              },
              "fBribe10Mod":{
                "name":"fBribe10Mod",
                "type":"number"
              },
              "sMagicCreature02ID":{
                "name":"sMagicCreature02ID",
                "type":"number"
              },
              "sNotifyMessage24":{
                "name":"sNotifyMessage24",
                "type":"number"
              },
              "fFatigueBase":{
                "name":"fFatigueBase",
                "type":"number"
              },
              "sPerDesc":{
                "name":"sPerDesc",
                "type":"number"
              },
              "sEffectShockDamage":{
                "name":"sEffectShockDamage",
                "type":"number"
              },
              "sBarter":{
                "name":"sBarter",
                "type":"number"
              },
              "iCrimeTresspass":{
                "name":"iCrimeTresspass",
                "type":"number"
              },
              "sNotifyMessage54":{
                "name":"sNotifyMessage54",
                "type":"number"
              },
              "fWereWolfMagicka":{
                "name":"fWereWolfMagicka",
                "type":"number"
              },
              "sXTimesINT":{
                "name":"sXTimesINT",
                "type":"number"
              },
              "fWereWolfBlock":{
                "name":"fWereWolfBlock",
                "type":"number"
              },
              "sMagnitudeDes":{
                "name":"sMagnitudeDes",
                "type":"number"
              },
              "sBirthsignmenu1":{
                "name":"sBirthsignmenu1",
                "type":"number"
              },
              "sNextRank":{
                "name":"sNextRank",
                "type":"number"
              },
              "fDispStealing":{
                "name":"fDispStealing",
                "type":"number"
              },
              "sKeyName_89":{
                "name":"sKeyName_89",
                "type":"number"
              },
              "sKeyName_63":{
                "name":"sKeyName_63",
                "type":"number"
              },
              "sEffectRallyCreature":{
                "name":"sEffectRallyCreature",
                "type":"number"
              },
              "sAttributesMenu1":{
                "name":"sAttributesMenu1",
                "type":"number"
              },
              "sEffectResistNormalWeapons":{
                "name":"sEffectResistNormalWeapons",
                "type":"number"
              },
              "iAutoSpellMysticismMax":{
                "name":"iAutoSpellMysticismMax",
                "type":"number"
              },
              "fAudioDefaultMaxDistance":{
                "name":"fAudioDefaultMaxDistance",
                "type":"number"
              },
              "sOnetypeEffectMessage":{
                "name":"sOnetypeEffectMessage",
                "type":"number"
              },
              "iAutoSpellRestorationMax":{
                "name":"iAutoSpellRestorationMax",
                "type":"number"
              },
              "sMenu_Help_Delay":{
                "name":"sMenu_Help_Delay",
                "type":"number"
              },
              "sSellerGold":{
                "name":"sSellerGold",
                "type":"number"
              },
              "sKeyName_47":{
                "name":"sKeyName_47",
                "type":"number"
              },
              "sBreath":{
                "name":"sBreath",
                "type":"number"
              },
              "sEffectDemoralizeHumanoid":{
                "name":"sEffectDemoralizeHumanoid",
                "type":"number"
              },
              "sNotifyMessage21":{
                "name":"sNotifyMessage21",
                "type":"number"
              },
              "sNotifyMessage51":{
                "name":"sNotifyMessage51",
                "type":"number"
              },
              "sEffectExtraSpell":{
                "name":"sEffectExtraSpell",
                "type":"number"
              },
              "sEffectWaterWalking":{
                "name":"sEffectWaterWalking",
                "type":"number"
              },
              "fDispFactionRankMult":{
                "name":"fDispFactionRankMult",
                "type":"number"
              },
              "sEffectStuntedMagicka":{
                "name":"sEffectStuntedMagicka",
                "type":"number"
              },
              "fSneakNoViewMult":{
                "name":"fSneakNoViewMult",
                "type":"number"
              },
              "sNextWeapon":{
                "name":"sNextWeapon",
                "type":"number"
              },
              "sBarbarian":{
                "name":"sBarbarian",
                "type":"number"
              },
              "sPrevSpell":{
                "name":"sPrevSpell",
                "type":"number"
              },
              "fJumpMoveMult":{
                "name":"fJumpMoveMult",
                "type":"number"
              },
              "fFatigueBlockBase":{
                "name":"fFatigueBlockBase",
                "type":"number"
              },
              "sKeyName_AC":{
                "name":"sKeyName_AC",
                "type":"number"
              },
              "fCombatTorsoSideAngle":{
                "name":"fCombatTorsoSideAngle",
                "type":"number"
              },
              "sToggleRunXbox":{
                "name":"sToggleRunXbox",
                "type":"number"
              },
              "fPotionT1MagMult":{
                "name":"fPotionT1MagMult",
                "type":"number"
              },
              "sGeneralMastPlugMismatchMsg":{
                "name":"sGeneralMastPlugMismatchMsg",
                "type":"number"
              },
              "sEffectFortifyAttackBonus":{
                "name":"sEffectFortifyAttackBonus",
                "type":"number"
              },
              "sWaterTerrainReflect":{
                "name":"sWaterTerrainReflect",
                "type":"number"
              },
              "sSaveGame":{
                "name":"sSaveGame",
                "type":"number"
              },
              "fSneakDistanceBase":{
                "name":"fSneakDistanceBase",
                "type":"number"
              },
              "sKeyName_D7":{
                "name":"sKeyName_D7",
                "type":"number"
              },
              "sKeyName_95":{
                "name":"sKeyName_95",
                "type":"number"
              },
              "sTeleportDisabled":{
                "name":"sTeleportDisabled",
                "type":"number"
              },
              "sEffectWaterBreathing":{
                "name":"sEffectWaterBreathing",
                "type":"number"
              },
              "fAIMeleeSummWeaponMult":{
                "name":"fAIMeleeSummWeaponMult",
                "type":"number"
              },
              "sCursorOff":{
                "name":"sCursorOff",
                "type":"number"
              },
              "sContentsMessage3":{
                "name":"sContentsMessage3",
                "type":"number"
              },
              "sOK":{
                "name":"sOK",
                "type":"number"
              },
              "fWeaponFatigueMult":{
                "name":"fWeaponFatigueMult",
                "type":"number"
              },
              "sKeyName_CF":{
                "name":"sKeyName_CF",
                "type":"number"
              },
              "sMagicCreature05ID":{
                "name":"sMagicCreature05ID",
                "type":"number"
              },
              "sMagicBoundLeftGauntletID":{
                "name":"sMagicBoundLeftGauntletID",
                "type":"number"
              },
              "fWereWolfAlchemy":{
                "name":"fWereWolfAlchemy",
                "type":"number"
              },
              "sServiceRefusal":{
                "name":"sServiceRefusal",
                "type":"number"
              },
              "iCrimeKilling":{
                "name":"iCrimeKilling",
                "type":"number"
              },
              "sInventoryMessage4":{
                "name":"sInventoryMessage4",
                "type":"number"
              },
              "sKeyName_A9":{
                "name":"sKeyName_A9",
                "type":"number"
              },
              "sMouse":{
                "name":"sMouse",
                "type":"number"
              },
              "fWereWolfRestoration":{
                "name":"fWereWolfRestoration",
                "type":"number"
              },
              "sKeyName_40":{
                "name":"sKeyName_40",
                "type":"number"
              },
              "sKeyName_4F":{
                "name":"sKeyName_4F",
                "type":"number"
              },
              "fWereWolfRunMult":{
                "name":"fWereWolfRunMult",
                "type":"number"
              },
              "sFootsteps":{
                "name":"sFootsteps",
                "type":"number"
              },
              "fAlarmRadius":{
                "name":"fAlarmRadius",
                "type":"number"
              },
              "fWereWolfSilverWeaponDamageMult":{
                "name":"fWereWolfSilverWeaponDamageMult",
                "type":"number"
              },
              "iCrimeThreshold":{
                "name":"iCrimeThreshold",
                "type":"number"
              },
              "fPotionT1DurMult":{
                "name":"fPotionT1DurMult",
                "type":"number"
              },
              "sKeyName_66":{
                "name":"sKeyName_66",
                "type":"number"
              },
              "sKeyName_53":{
                "name":"sKeyName_53",
                "type":"number"
              },
              "sMagicContractDisease":{
                "name":"sMagicContractDisease",
                "type":"number"
              },
              "fEnchantmentConstantChanceMult":{
                "name":"fEnchantmentConstantChanceMult",
                "type":"number"
              },
              "fWereWolfAlteration":{
                "name":"fWereWolfAlteration",
                "type":"number"
              },
              "fWereWolfDestruction":{
                "name":"fWereWolfDestruction",
                "type":"number"
              },
              "sEffectRemoveCurse":{
                "name":"sEffectRemoveCurse",
                "type":"number"
              },
              "sEffectDamageSkill":{
                "name":"sEffectDamageSkill",
                "type":"number"
              },
              "sRangeSelf":{
                "name":"sRangeSelf",
                "type":"number"
              },
              "fWereWolfSpeed":{
                "name":"fWereWolfSpeed",
                "type":"number"
              },
              "fVoiceIdleOdds":{
                "name":"fVoiceIdleOdds",
                "type":"number"
              },
              "fWereWolfIntellegence":{
                "name":"fWereWolfIntellegence",
                "type":"number"
              },
              "fWereWolfSpear":{
                "name":"fWereWolfSpear",
                "type":"number"
              },
              "fWereWolfLightArmor":{
                "name":"fWereWolfLightArmor",
                "type":"number"
              },
              "iWereWolfFleeMod":{
                "name":"iWereWolfFleeMod",
                "type":"number"
              },
              "sNotifyMessage15":{
                "name":"sNotifyMessage15",
                "type":"number"
              },
              "sMagicInsufficientSP":{
                "name":"sMagicInsufficientSP",
                "type":"number"
              },
              "sNextSpellXbox":{
                "name":"sNextSpellXbox",
                "type":"number"
              },
              "sKeyName_ED":{
                "name":"sKeyName_ED",
                "type":"number"
              },
              "sNoName":{
                "name":"sNoName",
                "type":"number"
              },
              "sKeyName_37":{
                "name":"sKeyName_37",
                "type":"number"
              },
              "sMagicLeastBonewalkerID":{
                "name":"sMagicLeastBonewalkerID",
                "type":"number"
              },
              "sKeyName_AE":{
                "name":"sKeyName_AE",
                "type":"number"
              },
              "fFallDistanceBase":{
                "name":"fFallDistanceBase",
                "type":"number"
              },
              "fIngredientMult":{
                "name":"fIngredientMult",
                "type":"number"
              },
              "sControlsMenu5":{
                "name":"sControlsMenu5",
                "type":"number"
              },
              "sTransparency_Menu":{
                "name":"sTransparency_Menu",
                "type":"number"
              },
              "fWereWolfLuck":{
                "name":"fWereWolfLuck",
                "type":"number"
              },
              "sNotifyMessage30":{
                "name":"sNotifyMessage30",
                "type":"number"
              },
              "sKeyName_76":{
                "name":"sKeyName_76",
                "type":"number"
              },
              "sKeyName_2F":{
                "name":"sKeyName_2F",
                "type":"number"
              },
              "fJumpRunMultiplier":{
                "name":"fJumpRunMultiplier",
                "type":"number"
              },
              "fMedMaxMod":{
                "name":"fMedMaxMod",
                "type":"number"
              },
              "sNotifyMessage50":{
                "name":"sNotifyMessage50",
                "type":"number"
              },
              "sNotifyMessage16":{
                "name":"sNotifyMessage16",
                "type":"number"
              },
              "sKeyName_CD":{
                "name":"sKeyName_CD",
                "type":"number"
              },
              "sCreateClassMenu3":{
                "name":"sCreateClassMenu3",
                "type":"number"
              },
              "sClassChoiceMenu2":{
                "name":"sClassChoiceMenu2",
                "type":"number"
              },
              "fWereWolfConjuration":{
                "name":"fWereWolfConjuration",
                "type":"number"
              },
              "sBarterDialog7":{
                "name":"sBarterDialog7",
                "type":"number"
              },
              "sAgiDesc":{
                "name":"sAgiDesc",
                "type":"number"
              },
              "sInvalidSaveGameMsg":{
                "name":"sInvalidSaveGameMsg",
                "type":"number"
              },
              "fDamageStrengthMult":{
                "name":"fDamageStrengthMult",
                "type":"number"
              },
              "sQuick3Cmd":{
                "name":"sQuick3Cmd",
                "type":"number"
              },
              "sEffectFireShield":{
                "name":"sEffectFireShield",
                "type":"number"
              },
              "fAutoPCSpellChance":{
                "name":"fAutoPCSpellChance",
                "type":"number"
              },
              "sKeyName_DC":{
                "name":"sKeyName_DC",
                "type":"number"
              },
              "sDeleteSpellError":{
                "name":"sDeleteSpellError",
                "type":"number"
              },
              "sMagicBoundCuirassID":{
                "name":"sMagicBoundCuirassID",
                "type":"number"
              },
              "sin":{
                "name":"sin",
                "type":"number"
              },
              "sInventory":{
                "name":"sInventory",
                "type":"number"
              },
              "iCrimePickPocket":{
                "name":"iCrimePickPocket",
                "type":"number"
              },
              "sEffectOpen":{
                "name":"sEffectOpen",
                "type":"number"
              },
              "sStrip":{
                "name":"sStrip",
                "type":"number"
              },
              "sEffectDisintegrateWeapon":{
                "name":"sEffectDisintegrateWeapon",
                "type":"number"
              },
              "sNotifyMessage60":{
                "name":"sNotifyMessage60",
                "type":"number"
              },
              "s3dAudio":{
                "name":"s3dAudio",
                "type":"number"
              },
              "sMagicBonelordID":{
                "name":"sMagicBonelordID",
                "type":"number"
              },
              "sAsk":{
                "name":"sAsk",
                "type":"number"
              },
              "sMagicInvalidTarget":{
                "name":"sMagicInvalidTarget",
                "type":"number"
              },
              "sEffectSummonCreature03":{
                "name":"sEffectSummonCreature03",
                "type":"number"
              },
              "sKeyName_B5":{
                "name":"sKeyName_B5",
                "type":"number"
              },
              "sBribeSuccess":{
                "name":"sBribeSuccess",
                "type":"number"
              },
              "sEffectDispel":{
                "name":"sEffectDispel",
                "type":"number"
              },
              "sNotifyMessage37":{
                "name":"sNotifyMessage37",
                "type":"number"
              },
              "fWereWolfAgility":{
                "name":"fWereWolfAgility",
                "type":"number"
              },
              "sKilledEssential":{
                "name":"sKilledEssential",
                "type":"number"
              },
              "sSpellmakingHelp3":{
                "name":"sSpellmakingHelp3",
                "type":"number"
              },
              "sLevitateDisabled":{
                "name":"sLevitateDisabled",
                "type":"number"
              },
              "iLevelUp09Mult":{
                "name":"iLevelUp09Mult",
                "type":"number"
              },
              "fStromWindSpeed":{
                "name":"fStromWindSpeed",
                "type":"number"
              },
              "sEffectDetectKey":{
                "name":"sEffectDetectKey",
                "type":"number"
              },
              "fSpecialSkillBonus":{
                "name":"fSpecialSkillBonus",
                "type":"number"
              },
              "sCompanionWarningButtonOne":{
                "name":"sCompanionWarningButtonOne",
                "type":"number"
              },
              "sKeyName_BB":{
                "name":"sKeyName_BB",
                "type":"number"
              },
              "sEffectRestoreSkill":{
                "name":"sEffectRestoreSkill",
                "type":"number"
              },
              "iPickMinChance":{
                "name":"iPickMinChance",
                "type":"number"
              },
              "sEffectRestoreSpellPoints":{
                "name":"sEffectRestoreSpellPoints",
                "type":"number"
              },
              "sSkillAxe":{
                "name":"sSkillAxe",
                "type":"number"
              },
              "sLoadingMessage1":{
                "name":"sLoadingMessage1",
                "type":"number"
              },
              "sProfitValue":{
                "name":"sProfitValue",
                "type":"number"
              },
              "sMagicTargetResistsWeapons":{
                "name":"sMagicTargetResistsWeapons",
                "type":"number"
              },
              "fSneakViewMult":{
                "name":"fSneakViewMult",
                "type":"number"
              },
              "sBard":{
                "name":"sBard",
                "type":"number"
              },
              "fPickPocketMod":{
                "name":"fPickPocketMod",
                "type":"number"
              },
              "fMagicStartIconBlink":{
                "name":"fMagicStartIconBlink",
                "type":"number"
              },
              "sEffectFortifyMagickaMultiplier":{
                "name":"sEffectFortifyMagickaMultiplier",
                "type":"number"
              },
              "sTwoHanded":{
                "name":"sTwoHanded",
                "type":"number"
              },
              "fWereWolfArmorer":{
                "name":"fWereWolfArmorer",
                "type":"number"
              },
              "sAcrobat":{
                "name":"sAcrobat",
                "type":"number"
              },
              "sEffectResistPoison":{
                "name":"sEffectResistPoison",
                "type":"number"
              },
              "fWereWolfLongBlade":{
                "name":"fWereWolfLongBlade",
                "type":"number"
              },
              "sEffectSummonSkeletalMinion":{
                "name":"sEffectSummonSkeletalMinion",
                "type":"number"
              },
              "sMagicDremoraID":{
                "name":"sMagicDremoraID",
                "type":"number"
              },
              "sNotifyMessage59":{
                "name":"sNotifyMessage59",
                "type":"number"
              },
              "sMouseFlip":{
                "name":"sMouseFlip",
                "type":"number"
              },
              "sEffectSummonFrostAtronach":{
                "name":"sEffectSummonFrostAtronach",
                "type":"number"
              },
              "sJoystickHatShort":{
                "name":"sJoystickHatShort",
                "type":"number"
              },
              "fLuckMod":{
                "name":"fLuckMod",
                "type":"number"
              },
              "sRestMenuXbox":{
                "name":"sRestMenuXbox",
                "type":"number"
              },
              "fUnarmoredBase2":{
                "name":"fUnarmoredBase2",
                "type":"number"
              },
              "sLookUpXbox":{
                "name":"sLookUpXbox",
                "type":"number"
              },
              "fFightStealing":{
                "name":"fFightStealing",
                "type":"number"
              },
              "sLight_Gamma":{
                "name":"sLight_Gamma",
                "type":"number"
              },
              "fSneakSkillMult":{
                "name":"fSneakSkillMult",
                "type":"number"
              },
              "sDeleteSpell":{
                "name":"sDeleteSpell",
                "type":"number"
              },
              "sEffectDisintegrateArmor":{
                "name":"sEffectDisintegrateArmor",
                "type":"number"
              },
              "sTypeSpell":{
                "name":"sTypeSpell",
                "type":"number"
              },
              "sMagicCreature04ID":{
                "name":"sMagicCreature04ID",
                "type":"number"
              },
              "iLevelupMajorMultAttribute":{
                "name":"iLevelupMajorMultAttribute",
                "type":"number"
              },
              "sMage":{
                "name":"sMage",
                "type":"number"
              },
              "sSchoolDestruction":{
                "name":"sSchoolDestruction",
                "type":"number"
              },
              "sEffectDetectAnimal":{
                "name":"sEffectDetectAnimal",
                "type":"number"
              },
              "sLevelUpMenu1":{
                "name":"sLevelUpMenu1",
                "type":"number"
              },
              "sHealer":{
                "name":"sHealer",
                "type":"number"
              }
            },
            "type":"table"
          },
          "unlock":{
            "type":"function",
            "description":"Unlocks an object. Returns true if the object can be and wasn't already unlocked.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string)",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "returnTypes":[{
                "type":"boolean"
              }],
            "argTypes":["table"]
          },
          "getLanguage":{
            "description":"Gets the language as an ISO string (e.g. \"eng\"), determined by the language entry in Morrowind.ini.",
            "type":"function"
          },
          "positionCell":{
            "type":"function",
            "description":"Positions a reference to another place.\n\nAccepts parameters through a table with the given keys:\n * (cell: tes3cell)\n * (orientation: tes3vector3|table)\n * (position: tes3vector3|table)\n * (reference: tes3reference|tes3mobileActor|string) The reference to attach the sound to. Default: tes3.mobilePlayer\n * (teleportCompanions: boolean) If used on the player, determines if companions should also be teleported. Default: true",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "unhammerKey":{
            "type":"function",
            "description":"Stops simulating hammering a key.",
            "args":[{
                "name":"keyCode"
              }],
            "argTypes":["number"]
          },
          "setGlobal":{
            "type":"function",
            "description":"Sets the value of a global value. If the global could not be found, the function returns false.",
            "args":[{
                "name":"id"
              },{
                "name":"value"
              }],
            "returnTypes":[{
                "type":"boolean"
              }],
            "argTypes":["string","number"]
          },
          "getSimulationTimestamp":{
            "description":"Returns a UNIX-style timestamp based on in-world simulation time since the start of the era.",
            "type":"function"
          },
          "removeEffects":{
            "type":"function",
            "description":"Removes effects from a given reference. Requires that either the effect or castType parameter be provided.",
            "args":[{
                "name":"castType",
                "displayName":"[castType]"
              },{
                "name":"chance",
                "displayName":"chance = 100"
              },{
                "name":"effect",
                "displayName":"[effect]"
              },{
                "name":"reference"
              },{
                "name":"removeSpell",
                "displayName":"[removeSpell]"
              }],
            "argTypes":["number","number","number","tes3reference","boolean"]
          },
          "getPlayerTarget":{
            "description":"Gets the object the player is currently looking at. This only applies when a tooltip would normally display.",
            "type":"function"
          },
          "soundMix":{
            "fields":{
              "master":{
                "name":"master",
                "type":"number"
              },
              "voice":{
                "name":"voice",
                "type":"number"
              },
              "music":{
                "name":"music",
                "type":"number"
              },
              "footsteps":{
                "name":"footsteps",
                "type":"number"
              },
              "effects":{
                "name":"effects",
                "type":"number"
              }
            },
            "type":"table"
          },
          "weaponType":{
            "fields":{
              "longBladeOneHand":{
                "name":"longBladeOneHand",
                "type":"number"
              },
              "arrow":{
                "name":"arrow",
                "type":"number"
              },
              "shortBladeOneHand":{
                "name":"shortBladeOneHand",
                "type":"number"
              },
              "axeTwoHand":{
                "name":"axeTwoHand",
                "type":"number"
              },
              "marksmanThrown":{
                "name":"marksmanThrown",
                "type":"number"
              },
              "bluntTwoWide":{
                "name":"bluntTwoWide",
                "type":"number"
              },
              "bluntTwoClose":{
                "name":"bluntTwoClose",
                "type":"number"
              },
              "longBladeTwoClose":{
                "name":"longBladeTwoClose",
                "type":"number"
              },
              "marksmanBow":{
                "name":"marksmanBow",
                "type":"number"
              },
              "axeOneHand":{
                "name":"axeOneHand",
                "type":"number"
              },
              "marksmanCrossbow":{
                "name":"marksmanCrossbow",
                "type":"number"
              },
              "bluntOneHand":{
                "name":"bluntOneHand",
                "type":"number"
              },
              "spearTwoWide":{
                "name":"spearTwoWide",
                "type":"number"
              },
              "bolt":{
                "name":"bolt",
                "type":"number"
              }
            },
            "type":"table"
          },
          "getLocked":{
            "type":"function",
            "description":"Determines if a given reference is a locked door or container.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string)",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "returnTypes":[{
                "type":"boolean"
              }],
            "argTypes":["table"]
          },
          "effect":{
            "fields":{
              "summonGoldenSaint":{
                "name":"summonGoldenSaint",
                "type":"number"
              },
              "weaknesstoCommonDisease":{
                "name":"weaknesstoCommonDisease",
                "type":"number"
              },
              "summonFabricant":{
                "name":"summonFabricant",
                "type":"number"
              },
              "weaknesstoBlightDisease":{
                "name":"weaknesstoBlightDisease",
                "type":"number"
              },
              "summonCenturionSphere":{
                "name":"summonCenturionSphere",
                "type":"number"
              },
              "dispel":{
                "name":"dispel",
                "type":"number"
              },
              "rallyHumanoid":{
                "name":"rallyHumanoid",
                "type":"number"
              },
              "eXTRASPELL":{
                "name":"eXTRASPELL",
                "type":"number"
              },
              "restoreSkill":{
                "name":"restoreSkill",
                "type":"number"
              },
              "feather":{
                "name":"feather",
                "type":"number"
              },
              "restoreFatigue":{
                "name":"restoreFatigue",
                "type":"number"
              },
              "fortifyMaximumMagicka":{
                "name":"fortifyMaximumMagicka",
                "type":"number"
              },
              "frenzyHumanoid":{
                "name":"frenzyHumanoid",
                "type":"number"
              },
              "damageAttribute":{
                "name":"damageAttribute",
                "type":"number"
              },
              "burden":{
                "name":"burden",
                "type":"number"
              },
              "resistBlightDisease":{
                "name":"resistBlightDisease",
                "type":"number"
              },
              "summonDaedroth":{
                "name":"summonDaedroth",
                "type":"number"
              },
              "weaknesstoFire":{
                "name":"weaknesstoFire",
                "type":"number"
              },
              "boundCuirass":{
                "name":"boundCuirass",
                "type":"number"
              },
              "paralyze":{
                "name":"paralyze",
                "type":"number"
              },
              "silence":{
                "name":"silence",
                "type":"number"
              },
              "callWolf":{
                "name":"callWolf",
                "type":"number"
              },
              "shockDamage":{
                "name":"shockDamage",
                "type":"number"
              },
              "summonHunger":{
                "name":"summonHunger",
                "type":"number"
              },
              "blind":{
                "name":"blind",
                "type":"number"
              },
              "cureCommonDisease":{
                "name":"cureCommonDisease",
                "type":"number"
              },
              "boundLongsword":{
                "name":"boundLongsword",
                "type":"number"
              },
              "sanctuary":{
                "name":"sanctuary",
                "type":"number"
              },
              "weaknesstoFrost":{
                "name":"weaknesstoFrost",
                "type":"number"
              },
              "resistParalysis":{
                "name":"resistParalysis",
                "type":"number"
              },
              "boundShield":{
                "name":"boundShield",
                "type":"number"
              },
              "vampirism":{
                "name":"vampirism",
                "type":"number"
              },
              "resistFire":{
                "name":"resistFire",
                "type":"number"
              },
              "absorbSkill":{
                "name":"absorbSkill",
                "type":"number"
              },
              "damageFatigue":{
                "name":"damageFatigue",
                "type":"number"
              },
              "summonStormAtronach":{
                "name":"summonStormAtronach",
                "type":"number"
              },
              "weaknesstoShock":{
                "name":"weaknesstoShock",
                "type":"number"
              },
              "shield":{
                "name":"shield",
                "type":"number"
              },
              "drainFatigue":{
                "name":"drainFatigue",
                "type":"number"
              },
              "damageSkill":{
                "name":"damageSkill",
                "type":"number"
              },
              "callBear":{
                "name":"callBear",
                "type":"number"
              },
              "lock":{
                "name":"lock",
                "type":"number"
              },
              "summonClannfear":{
                "name":"summonClannfear",
                "type":"number"
              },
              "sound":{
                "name":"sound",
                "type":"number"
              },
              "sEffectSummonCreature04":{
                "name":"sEffectSummonCreature04",
                "type":"number"
              },
              "disintegrateArmor":{
                "name":"disintegrateArmor",
                "type":"number"
              },
              "summonBonewalker":{
                "name":"summonBonewalker",
                "type":"number"
              },
              "restoreHealth":{
                "name":"restoreHealth",
                "type":"number"
              },
              "slowFall":{
                "name":"slowFall",
                "type":"number"
              },
              "absorbAttribute":{
                "name":"absorbAttribute",
                "type":"number"
              },
              "summonWingedTwilight":{
                "name":"summonWingedTwilight",
                "type":"number"
              },
              "boundDagger":{
                "name":"boundDagger",
                "type":"number"
              },
              "poison":{
                "name":"poison",
                "type":"number"
              },
              "resistPoison":{
                "name":"resistPoison",
                "type":"number"
              },
              "calmHumanoid":{
                "name":"calmHumanoid",
                "type":"number"
              },
              "lightningShield":{
                "name":"lightningShield",
                "type":"number"
              },
              "corprus":{
                "name":"corprus",
                "type":"number"
              },
              "fortifySkill":{
                "name":"fortifySkill",
                "type":"number"
              },
              "open":{
                "name":"open",
                "type":"number"
              },
              "frostDamage":{
                "name":"frostDamage",
                "type":"number"
              },
              "demoralizeHumanoid":{
                "name":"demoralizeHumanoid",
                "type":"number"
              },
              "almsiviIntervention":{
                "name":"almsiviIntervention",
                "type":"number"
              },
              "resistCommonDisease":{
                "name":"resistCommonDisease",
                "type":"number"
              },
              "cureParalyzation":{
                "name":"cureParalyzation",
                "type":"number"
              },
              "absorbFatigue":{
                "name":"absorbFatigue",
                "type":"number"
              },
              "fortifyAttribute":{
                "name":"fortifyAttribute",
                "type":"number"
              },
              "sunDamage":{
                "name":"sunDamage",
                "type":"number"
              },
              "damageHealth":{
                "name":"damageHealth",
                "type":"number"
              },
              "nightEye":{
                "name":"nightEye",
                "type":"number"
              },
              "cureBlightDisease":{
                "name":"cureBlightDisease",
                "type":"number"
              },
              "spellAbsorption":{
                "name":"spellAbsorption",
                "type":"number"
              },
              "weaknesstoCorprusDisease":{
                "name":"weaknesstoCorprusDisease",
                "type":"number"
              },
              "fortifyFatigue":{
                "name":"fortifyFatigue",
                "type":"number"
              },
              "cureCorprusDisease":{
                "name":"cureCorprusDisease",
                "type":"number"
              },
              "fireShield":{
                "name":"fireShield",
                "type":"number"
              },
              "removeCurse":{
                "name":"removeCurse",
                "type":"number"
              },
              "fortifyMagicka":{
                "name":"fortifyMagicka",
                "type":"number"
              },
              "curePoison":{
                "name":"curePoison",
                "type":"number"
              },
              "swiftSwim":{
                "name":"swiftSwim",
                "type":"number"
              },
              "drainHealth":{
                "name":"drainHealth",
                "type":"number"
              },
              "damageMagicka":{
                "name":"damageMagicka",
                "type":"number"
              },
              "frostShield":{
                "name":"frostShield",
                "type":"number"
              },
              "boundMace":{
                "name":"boundMace",
                "type":"number"
              },
              "detectEnchantment":{
                "name":"detectEnchantment",
                "type":"number"
              },
              "weaknesstoMagicka":{
                "name":"weaknesstoMagicka",
                "type":"number"
              },
              "fireDamage":{
                "name":"fireDamage",
                "type":"number"
              },
              "disintegrateWeapon":{
                "name":"disintegrateWeapon",
                "type":"number"
              },
              "resistShock":{
                "name":"resistShock",
                "type":"number"
              },
              "drainAttribute":{
                "name":"drainAttribute",
                "type":"number"
              },
              "weaknesstoPoison":{
                "name":"weaknesstoPoison",
                "type":"number"
              },
              "weaknesstoNormalWeapons":{
                "name":"weaknesstoNormalWeapons",
                "type":"number"
              },
              "detectAnimal":{
                "name":"detectAnimal",
                "type":"number"
              },
              "demoralizeCreature":{
                "name":"demoralizeCreature",
                "type":"number"
              },
              "drainMagicka":{
                "name":"drainMagicka",
                "type":"number"
              },
              "soultrap":{
                "name":"soultrap",
                "type":"number"
              },
              "frenzyCreature":{
                "name":"frenzyCreature",
                "type":"number"
              },
              "drainSkill":{
                "name":"drainSkill",
                "type":"number"
              },
              "calmCreature":{
                "name":"calmCreature",
                "type":"number"
              },
              "mark":{
                "name":"mark",
                "type":"number"
              },
              "boundBoots":{
                "name":"boundBoots",
                "type":"number"
              },
              "commandCreature":{
                "name":"commandCreature",
                "type":"number"
              },
              "boundHelm":{
                "name":"boundHelm",
                "type":"number"
              },
              "jump":{
                "name":"jump",
                "type":"number"
              },
              "recall":{
                "name":"recall",
                "type":"number"
              },
              "divineIntervention":{
                "name":"divineIntervention",
                "type":"number"
              },
              "invisibility":{
                "name":"invisibility",
                "type":"number"
              },
              "restoreAttribute":{
                "name":"restoreAttribute",
                "type":"number"
              },
              "fortifyAttack":{
                "name":"fortifyAttack",
                "type":"number"
              },
              "boundSpear":{
                "name":"boundSpear",
                "type":"number"
              },
              "fortifyHealth":{
                "name":"fortifyHealth",
                "type":"number"
              },
              "restoreMagicka":{
                "name":"restoreMagicka",
                "type":"number"
              },
              "summonDremora":{
                "name":"summonDremora",
                "type":"number"
              },
              "summonGreaterBonewalker":{
                "name":"summonGreaterBonewalker",
                "type":"number"
              },
              "absorbHealth":{
                "name":"absorbHealth",
                "type":"number"
              },
              "absorbMagicka":{
                "name":"absorbMagicka",
                "type":"number"
              },
              "charm":{
                "name":"charm",
                "type":"number"
              },
              "summonFrostAtronach":{
                "name":"summonFrostAtronach",
                "type":"number"
              },
              "light":{
                "name":"light",
                "type":"number"
              },
              "waterWalking":{
                "name":"waterWalking",
                "type":"number"
              },
              "rallyCreature":{
                "name":"rallyCreature",
                "type":"number"
              },
              "resistFrost":{
                "name":"resistFrost",
                "type":"number"
              },
              "chameleon":{
                "name":"chameleon",
                "type":"number"
              },
              "resistMagicka":{
                "name":"resistMagicka",
                "type":"number"
              },
              "telekinesis":{
                "name":"telekinesis",
                "type":"number"
              },
              "turnUndead":{
                "name":"turnUndead",
                "type":"number"
              },
              "summonScamp":{
                "name":"summonScamp",
                "type":"number"
              },
              "resistCorprusDisease":{
                "name":"resistCorprusDisease",
                "type":"number"
              },
              "summonAncestralGhost":{
                "name":"summonAncestralGhost",
                "type":"number"
              },
              "summonSkeletalMinion":{
                "name":"summonSkeletalMinion",
                "type":"number"
              },
              "levitate":{
                "name":"levitate",
                "type":"number"
              },
              "boundGloves":{
                "name":"boundGloves",
                "type":"number"
              },
              "sEffectSummonCreature05":{
                "name":"sEffectSummonCreature05",
                "type":"number"
              },
              "boundBattleAxe":{
                "name":"boundBattleAxe",
                "type":"number"
              },
              "summonBonewolf":{
                "name":"summonBonewolf",
                "type":"number"
              },
              "reflect":{
                "name":"reflect",
                "type":"number"
              },
              "boundLongbow":{
                "name":"boundLongbow",
                "type":"number"
              },
              "commandHumanoid":{
                "name":"commandHumanoid",
                "type":"number"
              },
              "waterBreathing":{
                "name":"waterBreathing",
                "type":"number"
              },
              "resistNormalWeapons":{
                "name":"resistNormalWeapons",
                "type":"number"
              },
              "summonBonelord":{
                "name":"summonBonelord",
                "type":"number"
              },
              "detectKey":{
                "name":"detectKey",
                "type":"number"
              },
              "summonFlameAtronach":{
                "name":"summonFlameAtronach",
                "type":"number"
              },
              "stuntedMagicka":{
                "name":"stuntedMagicka",
                "type":"number"
              }
            },
            "type":"table"
          },
          "getSoundPlaying":{
            "type":"function",
            "description":"Determines if a sound is playing, optionally filtered to a given reference.\n\nAccepts parameters through a table with the given keys:\n * (sound: tes3sound|string)\n * (reference: tes3reference|tes3mobileActor|string) Optional.",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "returnTypes":[{
                "type":"boolean"
              }],
            "argTypes":["table"]
          },
          "getLockLevel":{
            "type":"function",
            "description":"Gets an locked reference's lock level. If no lock data is available, it will return nil.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string)",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "returnTypes":[{
                "type":"number"
              }],
            "argTypes":["table"]
          },
          "spellState":{
            "fields":{
              "endingFortify":{
                "name":"endingFortify",
                "type":"number"
              },
              "ending":{
                "name":"ending",
                "type":"number"
              },
              "beginning":{
                "name":"beginning",
                "type":"number"
              },
              "cast":{
                "name":"cast",
                "type":"number"
              },
              "preCast":{
                "name":"preCast",
                "type":"number"
              },
              "retired":{
                "name":"retired",
                "type":"number"
              },
              "workingFortify":{
                "name":"workingFortify",
                "type":"number"
              },
              "working":{
                "name":"working",
                "type":"number"
              }
            },
            "type":"table"
          },
          "playSound":{
            "type":"function",
            "description":"Plays a sound on a given reference. Provides control over volume (including volume channel), pitch, and loop control.\n\nAccepts parameters through a table with the given keys:\n * (sound: tes3sound|string)\n * (reference: tes3reference|tes3mobileActor|string) The reference to attach the sound to. Optional.\n * (loop: boolean)\n * (mixChannel: number) The channel to base volume off of. Maps to tes3.audioMixType constants. Default: tes3.audioMixType.effects\n * (volume: number) A value between 0.0 and 1.0 to scale the volume off of. Default: 1.0\n * (pitch: number)",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "voiceover":{
            "fields":{
              "hello":{
                "name":"hello",
                "type":"number"
              },
              "idle":{
                "name":"idle",
                "type":"number"
              },
              "hit":{
                "name":"hit",
                "type":"number"
              },
              "intruder":{
                "name":"intruder",
                "type":"number"
              },
              "thief":{
                "name":"thief",
                "type":"number"
              },
              "flee":{
                "name":"flee",
                "type":"number"
              },
              "attack":{
                "name":"attack",
                "type":"number"
              }
            },
            "type":"table"
          },
          "getObject":{
            "type":"function",
            "description":"Fetches the core game object for a given object ID.",
            "args":[{
                "name":"id"
              }],
            "returnTypes":[{
                "name":"tes3object",
                "type":"ref"
              }],
            "argTypes":["string"]
          },
          "setStatistic":{
            "type":"function",
            "description":"Sets a statistic on a given actor. This should be used instead of manually setting values on the game structures, to ensure that events and GUI elements are properly handled. Either skill, attribute, or name must be provided.\n\nAccepts parameters through a table with the given keys:\n * (attribute: number) The attribute to set. Optional.\n * (base: number) If set, the base value will be set. Optional.\n * (current: number) If set, the current value will be set. Optional.\n * (limit: boolean) If set, the attribute won't rise above 100 or fall below 0.\n * (name: string) A generic name of an attribute to set. Optional.\n * (reference: tes3mobileActor|tes3reference|string)\n * (skill: number) The skill to set. Optional.\n * (value: number) If set, both the base and current value will be set. Optional.",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "getSoundGenerator":{
            "type":"function",
            "description":"Returns a sound generator by a given creature id and type.",
            "args":[{
                "name":"creatureId"
              },{
                "name":"soundType"
              }],
            "returnTypes":[{
                "name":"tes3soundGenerator",
                "type":"ref"
              }],
            "argTypes":["string","number"]
          },
          "creatureType":{
            "fields":{
              "normal":{
                "name":"normal",
                "type":"number"
              },
              "humanoid":{
                "name":"humanoid",
                "type":"number"
              },
              "daedra":{
                "name":"daedra",
                "type":"number"
              },
              "undead":{
                "name":"undead",
                "type":"number"
              }
            },
            "type":"table"
          },
          "uiProperty":{
            "fields":{
              "enterMenuMode":{
                "name":"enterMenuMode",
                "type":"number"
              },
              "stillOver":{
                "name":"stillOver",
                "type":"number"
              },
              "preUpdate":{
                "name":"preUpdate",
                "type":"number"
              },
              "unfocus":{
                "name":"unfocus",
                "type":"number"
              },
              "stillPressed":{
                "name":"stillPressed",
                "type":"number"
              },
              "keyPress":{
                "name":"keyPress",
                "type":"number"
              },
              "mouseDown":{
                "name":"mouseDown",
                "type":"number"
              },
              "destroy":{
                "name":"destroy",
                "type":"number"
              },
              "leaveMenuMode":{
                "name":"leaveMenuMode",
                "type":"number"
              },
              "stillPressedOutside":{
                "name":"stillPressedOutside",
                "type":"number"
              },
              "mouseClick":{
                "name":"mouseClick",
                "type":"number"
              },
              "stillIdle":{
                "name":"stillIdle",
                "type":"number"
              },
              "scrollUp":{
                "name":"scrollUp",
                "type":"number"
              },
              "enter":{
                "name":"enter",
                "type":"number"
              },
              "focus":{
                "name":"focus",
                "type":"number"
              },
              "scrollDown":{
                "name":"scrollDown",
                "type":"number"
              },
              "doubleClick":{
                "name":"doubleClick",
                "type":"number"
              },
              "release":{
                "name":"release",
                "type":"number"
              },
              "mouseLeave":{
                "name":"mouseLeave",
                "type":"number"
              },
              "mouseOver":{
                "name":"mouseOver",
                "type":"number"
              },
              "update":{
                "name":"update",
                "type":"number"
              }
            },
            "type":"table"
          },
          "adjustSoundVolume":{
            "type":"function",
            "description":"Changes the volume of a sound that is playing on a given reference.\n\nAccepts parameters through a table with the given keys:\n * (sound: tes3sound|string)\n * (reference: tes3reference|tes3mobileActor|string) The reference to attach the sound to.\n * (mixChannel: number) The channel to base volume off of. Maps to tes3.audioMixType constants. Default: tes3.audioMixType.effects\n * (volume: number) A value between 0.0 and 1.0 to scale the volume off of. Default: 1.0",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "getGlobal":{
            "type":"function",
            "description":"Retrieves the value of a global value, or nil if the global could not be found.",
            "args":[{
                "name":"id"
              }],
            "returnTypes":[{
                "type":"number"
              }],
            "argTypes":["string"]
          },
          "armorSlot":{
            "fields":{
              "cuirass":{
                "name":"cuirass",
                "type":"number"
              },
              "leftPauldron":{
                "name":"leftPauldron",
                "type":"number"
              },
              "helmet":{
                "name":"helmet",
                "type":"number"
              },
              "rightGauntlet":{
                "name":"rightGauntlet",
                "type":"number"
              },
              "rightPauldron":{
                "name":"rightPauldron",
                "type":"number"
              },
              "leftGauntlet":{
                "name":"leftGauntlet",
                "type":"number"
              },
              "shield":{
                "name":"shield",
                "type":"number"
              },
              "greaves":{
                "name":"greaves",
                "type":"number"
              },
              "boots":{
                "name":"boots",
                "type":"number"
              },
              "leftBracer":{
                "name":"leftBracer",
                "type":"number"
              },
              "rightBracer":{
                "name":"rightBracer",
                "type":"number"
              }
            },
            "type":"table"
          },
          "getAttributeName":{
            "description":"Returns the lowercase identifying name of an attribute for a given numerical, 0-based index. E.g. \"strength\".",
            "type":"function"
          },
          "spellType":{
            "fields":{
              "spell":{
                "name":"spell",
                "type":"number"
              },
              "power":{
                "name":"power",
                "type":"number"
              },
              "ability":{
                "name":"ability",
                "type":"number"
              },
              "curse":{
                "name":"curse",
                "type":"number"
              },
              "blight":{
                "name":"blight",
                "type":"number"
              },
              "disease":{
                "name":"disease",
                "type":"number"
              }
            },
            "type":"table"
          },
          "getOwner":{
            "type":"function",
            "description":"Returns the object's owner, or nil if the object is unowned.",
            "args":[{
                "name":"reference"
              }],
            "returnTypes":[{
                "name":"tes3object",
                "type":"ref"
              }],
            "argTypes":["tes3reference"]
          },
          "enchantmentType":{
            "fields":{
              "castOnce":{
                "name":"castOnce",
                "type":"number"
              },
              "onStrike":{
                "name":"onStrike",
                "type":"number"
              },
              "onUse":{
                "name":"onUse",
                "type":"number"
              },
              "constant":{
                "name":"constant",
                "type":"number"
              }
            },
            "type":"table"
          },
          "specializationName":{
            "fields":{
              "1":{
                "name":1,
                "type":"string"
              },
              "2":{
                "name":2,
                "type":"string"
              },
              "0":{
                "name":0,
                "type":"string"
              }
            },
            "type":"table"
          },
          "specialization":{
            "fields":{
              "combat":{
                "name":"combat",
                "type":"number"
              },
              "stealth":{
                "name":"stealth",
                "type":"number"
              },
              "magic":{
                "name":"magic",
                "type":"number"
              },
              "invalid":{
                "name":"invalid",
                "type":"number"
              }
            },
            "type":"table"
          },
          "fadeTo":{
            "type":"function",
            "description":"Similar to the vanilla FadeTo mwscript command.\n\nAccepts parameters through a table with the given keys:\n * (fader: tes3fader) Defaults to the transition fader. Optional.\n * (duration: number) Time, in seconds, for the fade. Default: 1.0\n * (value: number) Default: 1.0",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "getCameraVector":{
            "description":"Returns the camera look vector.",
            "type":"function"
          },
          "getSpecializationName":{
            "description":"Returns the lowercase identifying name of a specialization type for a given numerical, 0-based index. E.g. \"magic\".",
            "type":"function"
          },
          "streamMusic":{
            "type":"function",
            "description":"Plays a music track.\n\nAccepts parameters through a table with the given keys:\n * (path: string) Path to the music file, relative to Data Files/music/.\n * (situation: number) Determines what kind of gameplay situation the music should stay active for. Default: tes3.musicSituation.uninterruptible\n * (crossfade: number) The duration in seconds of the crossfade from the old to the new track. The default is 1.0. Default: 1.0",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "saveGame":{
            "type":"function",
            "description":"Saves the game.\n\nAccepts parameters through a table with the given keys:\n * (file: string) The filename of the save that will be created, without extension. Default: quiksave\n * (name: string) The display name of the save. Default: Quicksave",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "getPlayerGold":{
            "description":"Gets the gold count carried by the player.",
            "type":"function"
          },
          "weather":{
            "fields":{
              "clear":{
                "name":"clear",
                "type":"number"
              },
              "blight":{
                "name":"blight",
                "type":"number"
              },
              "blizzard":{
                "name":"blizzard",
                "type":"number"
              },
              "cloudy":{
                "name":"cloudy",
                "type":"number"
              },
              "thunder":{
                "name":"thunder",
                "type":"number"
              },
              "overcast":{
                "name":"overcast",
                "type":"number"
              },
              "foggy":{
                "name":"foggy",
                "type":"number"
              },
              "rain":{
                "name":"rain",
                "type":"number"
              },
              "ash":{
                "name":"ash",
                "type":"number"
              },
              "snow":{
                "name":"snow",
                "type":"number"
              }
            },
            "type":"table"
          },
          "getDaysInMonth":{
            "type":"function",
            "description":"Returns the number of days in a given month. This may be altered if a Morrowind Code Patch feature was installed.",
            "args":[{
                "name":"month"
              }],
            "returnTypes":[{
                "type":"number"
              }],
            "argTypes":["number"]
          },
          "soundGenType":{
            "fields":{
              "roar":{
                "name":"roar",
                "type":"number"
              },
              "moan":{
                "name":"moan",
                "type":"number"
              },
              "leftFoot":{
                "name":"leftFoot",
                "type":"number"
              },
              "swimRight":{
                "name":"swimRight",
                "type":"number"
              },
              "scream":{
                "name":"scream",
                "type":"number"
              },
              "swimLeft":{
                "name":"swimLeft",
                "type":"number"
              },
              "rightFoot":{
                "name":"rightFoot",
                "type":"number"
              },
              "land":{
                "name":"land",
                "type":"number"
              }
            },
            "type":"table"
          },
          "skillType":{
            "fields":{
              "minor":{
                "name":"minor",
                "type":"number"
              },
              "misc":{
                "name":"misc",
                "type":"number"
              },
              "major":{
                "name":"major",
                "type":"number"
              },
              "miscellaneous":{
                "name":"miscellaneous",
                "type":"number"
              }
            },
            "type":"table"
          },
          "skillName":{
            "fields":{
              "1":{
                "name":1,
                "type":"string"
              },
              "2":{
                "name":2,
                "type":"string"
              },
              "3":{
                "name":3,
                "type":"string"
              },
              "4":{
                "name":4,
                "type":"string"
              },
              "5":{
                "name":5,
                "type":"string"
              },
              "6":{
                "name":6,
                "type":"string"
              },
              "7":{
                "name":7,
                "type":"string"
              },
              "8":{
                "name":8,
                "type":"string"
              },
              "9":{
                "name":9,
                "type":"string"
              },
              "10":{
                "name":10,
                "type":"string"
              },
              "11":{
                "name":11,
                "type":"string"
              },
              "12":{
                "name":12,
                "type":"string"
              },
              "13":{
                "name":13,
                "type":"string"
              },
              "14":{
                "name":14,
                "type":"string"
              },
              "15":{
                "name":15,
                "type":"string"
              },
              "16":{
                "name":16,
                "type":"string"
              },
              "17":{
                "name":17,
                "type":"string"
              },
              "18":{
                "name":18,
                "type":"string"
              },
              "19":{
                "name":19,
                "type":"string"
              },
              "20":{
                "name":20,
                "type":"string"
              },
              "21":{
                "name":21,
                "type":"string"
              },
              "22":{
                "name":22,
                "type":"string"
              },
              "23":{
                "name":23,
                "type":"string"
              },
              "24":{
                "name":24,
                "type":"string"
              },
              "25":{
                "name":25,
                "type":"string"
              },
              "26":{
                "name":26,
                "type":"string"
              },
              "0":{
                "name":0,
                "type":"string"
              }
            },
            "type":"table"
          },
          "mobilePlayer":{
            "type":"ref",
            "description":"The player's mobile actor.",
            "name":"tes3mobilePlayer"
          },
          "addSoulGem":{
            "type":"function",
            "description":"Causes a misc item to be recognized as a soul gem, so that it can be used for soul trapping.\n\nAccepts parameters through a table with the given keys:\n * (item: tes3misc|string) The item to recognize as a soul gem.",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "returnTypes":[{
                "type":"number"
              }],
            "argTypes":["table"]
          },
          "getRegion":{
            "description":"Gets the current region the player is in. This checks the player's current cell first, but will fall back to the last exterior cell.",
            "type":"function"
          },
          "spellOrigin":{
            "fields":{
              "module":{
                "name":"module",
                "type":"number"
              },
              "spellmaker":{
                "name":"spellmaker",
                "type":"number"
              }
            },
            "type":"table"
          },
          "scanCode":{
            "fields":{
              "greaterThan":{
                "name":"greaterThan",
                "type":"number"
              },
              "pageUp":{
                "name":"pageUp",
                "type":"number"
              },
              "closeCurlyBracket":{
                "name":"closeCurlyBracket",
                "type":"number"
              },
              "caps":{
                "name":"caps",
                "type":"number"
              },
              "home":{
                "name":"home",
                "type":"number"
              },
              "two":{
                "name":"two",
                "type":"number"
              },
              "F2":{
                "name":"F2",
                "type":"number"
              },
              "seven":{
                "name":"seven",
                "type":"number"
              },
              "eight":{
                "name":"eight",
                "type":"number"
              },
              "singleQuote":{
                "name":"singleQuote",
                "type":"number"
              },
              "pipe":{
                "name":"pipe",
                "type":"number"
              },
              "backslash":{
                "name":"backslash",
                "type":"number"
              },
              "openCurlyBracket":{
                "name":"openCurlyBracket",
                "type":"number"
              },
              "delete":{
                "name":"delete",
                "type":"number"
              },
              "F5":{
                "name":"F5",
                "type":"number"
              },
              "numLock":{
                "name":"numLock",
                "type":"number"
              },
              "semicolon":{
                "name":"semicolon",
                "type":"number"
              },
              "!":{
                "name":"!",
                "type":"number"
              },
              "#":{
                "name":"#",
                "type":"number"
              },
              "lessThan":{
                "name":"lessThan",
                "type":"number"
              },
              "$":{
                "name":"$",
                "type":"number"
              },
              "'":{
                "name":"'",
                "type":"number"
              },
              "&":{
                "name":"&",
                "type":"number"
              },
              ")":{
                "name":")",
                "type":"number"
              },
              "(":{
                "name":"(",
                "type":"number"
              },
              "+":{
                "name":"+",
                "type":"number"
              },
              "*":{
                "name":"*",
                "type":"number"
              },
              "-":{
                "name":"-",
                "type":"number"
              },
              ",":{
                "name":",",
                "type":"number"
              },
              "/":{
                "name":"/",
                "type":"number"
              },
              ".":{
                "name":".",
                "type":"number"
              },
              "1":{
                "name":"1",
                "type":"number"
              },
              "0":{
                "name":"0",
                "type":"number"
              },
              "3":{
                "name":"3",
                "type":"number"
              },
              "2":{
                "name":"2",
                "type":"number"
              },
              "5":{
                "name":"5",
                "type":"number"
              },
              "numpadEnter":{
                "name":"numpadEnter",
                "type":"number"
              },
              "7":{
                "name":"7",
                "type":"number"
              },
              "6":{
                "name":"6",
                "type":"number"
              },
              "9":{
                "name":"9",
                "type":"number"
              },
              "8":{
                "name":"8",
                "type":"number"
              },
              ";":{
                "name":";",
                "type":"number"
              },
              ":":{
                "name":":",
                "type":"number"
              },
              "=":{
                "name":"=",
                "type":"number"
              },
              "<":{
                "name":"<",
                "type":"number"
              },
              "percent":{
                "name":"percent",
                "type":"number"
              },
              ">":{
                "name":">",
                "type":"number"
              },
              "@":{
                "name":"@",
                "type":"number"
              },
              "four":{
                "name":"four",
                "type":"number"
              },
              "backspace":{
                "name":"backspace",
                "type":"number"
              },
              "doubleQuote":{
                "name":"doubleQuote",
                "type":"number"
              },
              "end":{
                "name":"end",
                "type":"number"
              },
              "one":{
                "name":"one",
                "type":"number"
              },
              "openSquareBracket":{
                "name":"openSquareBracket",
                "type":"number"
              },
              "caret":{
                "name":"caret",
                "type":"number"
              },
              "[":{
                "name":"[",
                "type":"number"
              },
              "]":{
                "name":"]",
                "type":"number"
              },
              "five":{
                "name":"five",
                "type":"number"
              },
              "^":{
                "name":"^",
                "type":"number"
              },
              "keyUp":{
                "name":"keyUp",
                "type":"number"
              },
              "`":{
                "name":"`",
                "type":"number"
              },
              "numpad0":{
                "name":"numpad0",
                "type":"number"
              },
              "b":{
                "name":"b",
                "type":"number"
              },
              "e":{
                "name":"e",
                "type":"number"
              },
              "d":{
                "name":"d",
                "type":"number"
              },
              "g":{
                "name":"g",
                "type":"number"
              },
              "f":{
                "name":"f",
                "type":"number"
              },
              "i":{
                "name":"i",
                "type":"number"
              },
              "h":{
                "name":"h",
                "type":"number"
              },
              "closeSquareBracket":{
                "name":"closeSquareBracket",
                "type":"number"
              },
              "underscore":{
                "name":"underscore",
                "type":"number"
              },
              "quote":{
                "name":"quote",
                "type":"number"
              },
              "l":{
                "name":"l",
                "type":"number"
              },
              "openBracket":{
                "name":"openBracket",
                "type":"number"
              },
              "n":{
                "name":"n",
                "type":"number"
              },
              "hash":{
                "name":"hash",
                "type":"number"
              },
              "numpad6":{
                "name":"numpad6",
                "type":"number"
              },
              "rCtrl":{
                "name":"rCtrl",
                "type":"number"
              },
              "insert":{
                "name":"insert",
                "type":"number"
              },
              "lCtrl":{
                "name":"lCtrl",
                "type":"number"
              },
              "t":{
                "name":"t",
                "type":"number"
              },
              "w":{
                "name":"w",
                "type":"number"
              },
              "v":{
                "name":"v",
                "type":"number"
              },
              "six":{
                "name":"six",
                "type":"number"
              },
              "x":{
                "name":"x",
                "type":"number"
              },
              "numpad1":{
                "name":"numpad1",
                "type":"number"
              },
              "z":{
                "name":"z",
                "type":"number"
              },
              "dash":{
                "name":"dash",
                "type":"number"
              },
              "|":{
                "name":"|",
                "type":"number"
              },
              "~":{
                "name":"~",
                "type":"number"
              },
              "keyRight":{
                "name":"keyRight",
                "type":"number"
              },
              "decimal":{
                "name":"decimal",
                "type":"number"
              },
              "openPointyBracket":{
                "name":"openPointyBracket",
                "type":"number"
              },
              "bang":{
                "name":"bang",
                "type":"number"
              },
              "F10":{
                "name":"F10",
                "type":"number"
              },
              "leftCtrl":{
                "name":"leftCtrl",
                "type":"number"
              },
              "rightCtrl":{
                "name":"rightCtrl",
                "type":"number"
              },
              "fullStop":{
                "name":"fullStop",
                "type":"number"
              },
              "rAlt":{
                "name":"rAlt",
                "type":"number"
              },
              "_":{
                "name":"_",
                "type":"number"
              },
              "q":{
                "name":"q",
                "type":"number"
              },
              "escape":{
                "name":"escape",
                "type":"number"
              },
              "y":{
                "name":"y",
                "type":"number"
              },
              "u":{
                "name":"u",
                "type":"number"
              },
              "lAlt":{
                "name":"lAlt",
                "type":"number"
              },
              "o":{
                "name":"o",
                "type":"number"
              },
              "add":{
                "name":"add",
                "type":"number"
              },
              "rShift":{
                "name":"rShift",
                "type":"number"
              },
              "}":{
                "name":"}",
                "type":"number"
              },
              "at":{
                "name":"at",
                "type":"number"
              },
              "numpad3":{
                "name":"numpad3",
                "type":"number"
              },
              "esc":{
                "name":"esc",
                "type":"number"
              },
              "F9":{
                "name":"F9",
                "type":"number"
              },
              "numpad5":{
                "name":"numpad5",
                "type":"number"
              },
              "enter":{
                "name":"enter",
                "type":"number"
              },
              "closeBracket":{
                "name":"closeBracket",
                "type":"number"
              },
              "rightShift":{
                "name":"rightShift",
                "type":"number"
              },
              "return":{
                "name":"return",
                "type":"number"
              },
              "p":{
                "name":"p",
                "type":"number"
              },
              "pageDown":{
                "name":"pageDown",
                "type":"number"
              },
              "nine":{
                "name":"nine",
                "type":"number"
              },
              "s":{
                "name":"s",
                "type":"number"
              },
              "asterisk":{
                "name":"asterisk",
                "type":"number"
              },
              "multiply":{
                "name":"multiply",
                "type":"number"
              },
              "c":{
                "name":"c",
                "type":"number"
              },
              "a":{
                "name":"a",
                "type":"number"
              },
              "k":{
                "name":"k",
                "type":"number"
              },
              "numpad2":{
                "name":"numpad2",
                "type":"number"
              },
              "keyDown":{
                "name":"keyDown",
                "type":"number"
              },
              "colon":{
                "name":"colon",
                "type":"number"
              },
              "hat":{
                "name":"hat",
                "type":"number"
              },
              "quotationMark":{
                "name":"quotationMark",
                "type":"number"
              },
              "equals":{
                "name":"equals",
                "type":"number"
              },
              "quoteMark":{
                "name":"quoteMark",
                "type":"number"
              },
              "F7":{
                "name":"F7",
                "type":"number"
              },
              "ampersand":{
                "name":"ampersand",
                "type":"number"
              },
              "j":{
                "name":"j",
                "type":"number"
              },
              "lShift":{
                "name":"lShift",
                "type":"number"
              },
              "subtract":{
                "name":"subtract",
                "type":"number"
              },
              "{":{
                "name":"{",
                "type":"number"
              },
              "backSlash":{
                "name":"backSlash",
                "type":"number"
              },
              "m":{
                "name":"m",
                "type":"number"
              },
              "period":{
                "name":"period",
                "type":"number"
              },
              "numpad4":{
                "name":"numpad4",
                "type":"number"
              },
              "backTick":{
                "name":"backTick",
                "type":"number"
              },
              "tab":{
                "name":"tab",
                "type":"number"
              },
              "?":{
                "name":"?",
                "type":"number"
              },
              "closePointyBracket":{
                "name":"closePointyBracket",
                "type":"number"
              },
              "F6":{
                "name":"F6",
                "type":"number"
              },
              "comma":{
                "name":"comma",
                "type":"number"
              },
              "F8":{
                "name":"F8",
                "type":"number"
              },
              "leftAlt":{
                "name":"leftAlt",
                "type":"number"
              },
              "space":{
                "name":"space",
                "type":"number"
              },
              "leftShift":{
                "name":"leftShift",
                "type":"number"
              },
              "F1":{
                "name":"F1",
                "type":"number"
              },
              "F4":{
                "name":"F4",
                "type":"number"
              },
              "forwardSlash":{
                "name":"forwardSlash",
                "type":"number"
              },
              "three":{
                "name":"three",
                "type":"number"
              },
              "questionMark":{
                "name":"questionMark",
                "type":"number"
              },
              "F12":{
                "name":"F12",
                "type":"number"
              },
              "scrollLock":{
                "name":"scrollLock",
                "type":"number"
              },
              "numpad7":{
                "name":"numpad7",
                "type":"number"
              },
              "tilde":{
                "name":"tilde",
                "type":"number"
              },
              "zero":{
                "name":"zero",
                "type":"number"
              },
              "F3":{
                "name":"F3",
                "type":"number"
              },
              "exclamationMark":{
                "name":"exclamationMark",
                "type":"number"
              },
              "numpad9":{
                "name":"numpad9",
                "type":"number"
              },
              "r":{
                "name":"r",
                "type":"number"
              },
              "dollarSign":{
                "name":"dollarSign",
                "type":"number"
              },
              "capslock":{
                "name":"capslock",
                "type":"number"
              },
              "F11":{
                "name":"F11",
                "type":"number"
              },
              "plus":{
                "name":"plus",
                "type":"number"
              },
              "rightAlt":{
                "name":"rightAlt",
                "type":"number"
              },
              "numpad8":{
                "name":"numpad8",
                "type":"number"
              },
              "divide":{
                "name":"divide",
                "type":"number"
              },
              "keyLeft":{
                "name":"keyLeft",
                "type":"number"
              },
              "4":{
                "name":"4",
                "type":"number"
              }
            },
            "type":"table"
          },
          "dataHandler":{
            "type":"ref",
            "description":"One of the core game objects.",
            "name":"tes3dataHandler"
          },
          "apparatusType":{
            "fields":{
              "calcinator":{
                "name":"calcinator",
                "type":"number"
              },
              "mortarAndPestle":{
                "name":"mortarAndPestle",
                "type":"number"
              },
              "alembic":{
                "name":"alembic",
                "type":"number"
              },
              "retort":{
                "name":"retort",
                "type":"number"
              }
            },
            "type":"table"
          },
          "iterateObjects":{
            "type":"function",
            "description":"Iteration function used for looping over game options.",
            "args":[{
                "name":"filter"
              }],
            "returnTypes":[{
                "name":"tes3object",
                "type":"ref"
              }],
            "argTypes":["number"]
          },
          "niType":{
            "fields":{
              "NiLODNode":{
                "name":"NiLODNode",
                "type":"number"
              },
              "NiParticlesData":{
                "name":"NiParticlesData",
                "type":"number"
              },
              "NiGravity":{
                "name":"NiGravity",
                "type":"number"
              },
              "NiSphericalCollider":{
                "name":"NiSphericalCollider",
                "type":"number"
              },
              "NiVertexColorProperty":{
                "name":"NiVertexColorProperty",
                "type":"number"
              },
              "NiGeometry":{
                "name":"NiGeometry",
                "type":"number"
              },
              "NiAlphaAccumulator":{
                "name":"NiAlphaAccumulator",
                "type":"number"
              },
              "NiSkinPartition":{
                "name":"NiSkinPartition",
                "type":"number"
              },
              "TES3ObjectExtraData":{
                "name":"TES3ObjectExtraData",
                "type":"number"
              },
              "AvoidNode":{
                "name":"AvoidNode",
                "type":"number"
              },
              "NiFloatController":{
                "name":"NiFloatController",
                "type":"number"
              },
              "NiCollisionSwitch":{
                "name":"NiCollisionSwitch",
                "type":"number"
              },
              "NiCamera":{
                "name":"NiCamera",
                "type":"number"
              },
              "NiAccumulator":{
                "name":"NiAccumulator",
                "type":"number"
              },
              "NiAlphaController":{
                "name":"NiAlphaController",
                "type":"number"
              },
              "NiTriShapeDynamicData":{
                "name":"NiTriShapeDynamicData",
                "type":"number"
              },
              "NiVisController":{
                "name":"NiVisController",
                "type":"number"
              },
              "NiParticleRotation":{
                "name":"NiParticleRotation",
                "type":"number"
              },
              "NiParticleModifier":{
                "name":"NiParticleModifier",
                "type":"number"
              },
              "NiUVData":{
                "name":"NiUVData",
                "type":"number"
              },
              "NiObject":{
                "name":"NiObject",
                "type":"number"
              },
              "NiTriStrips":{
                "name":"NiTriStrips",
                "type":"number"
              },
              "NiTriShape":{
                "name":"NiTriShape",
                "type":"number"
              },
              "NiBSParticleNode":{
                "name":"NiBSParticleNode",
                "type":"number"
              },
              "NiParticleColorModifier":{
                "name":"NiParticleColorModifier",
                "type":"number"
              },
              "NiMaterialColorController":{
                "name":"NiMaterialColorController",
                "type":"number"
              },
              "NiAlphaProperty":{
                "name":"NiAlphaProperty",
                "type":"number"
              },
              "NiFltAnimationNode":{
                "name":"NiFltAnimationNode",
                "type":"number"
              },
              "NiTriStripsData":{
                "name":"NiTriStripsData",
                "type":"number"
              },
              "NiMorpherController":{
                "name":"NiMorpherController",
                "type":"number"
              },
              "NiGeomMorpherController":{
                "name":"NiGeomMorpherController",
                "type":"number"
              },
              "NiTextureEffect":{
                "name":"NiTextureEffect",
                "type":"number"
              },
              "NiFlipController":{
                "name":"NiFlipController",
                "type":"number"
              },
              "NiGeometryData":{
                "name":"NiGeometryData",
                "type":"number"
              },
              "BSMirroredNode":{
                "name":"BSMirroredNode",
                "type":"number"
              },
              "NiParticleCollider":{
                "name":"NiParticleCollider",
                "type":"number"
              },
              "NiParticleBomb":{
                "name":"NiParticleBomb",
                "type":"number"
              },
              "NiAVObject":{
                "name":"NiAVObject",
                "type":"number"
              },
              "NiKeyframeManager":{
                "name":"NiKeyframeManager",
                "type":"number"
              },
              "NiTriBasedGeom":{
                "name":"NiTriBasedGeom",
                "type":"number"
              },
              "NiBSPNode":{
                "name":"NiBSPNode",
                "type":"number"
              },
              "NiLinesData":{
                "name":"NiLinesData",
                "type":"number"
              },
              "BrickNiExtraData":{
                "name":"BrickNiExtraData",
                "type":"number"
              },
              "NiDynamicEffect":{
                "name":"NiDynamicEffect",
                "type":"number"
              },
              "NiDirectionalLight":{
                "name":"NiDirectionalLight",
                "type":"number"
              },
              "NiTriBasedGeomData":{
                "name":"NiTriBasedGeomData",
                "type":"number"
              },
              "NiShadeProperty":{
                "name":"NiShadeProperty",
                "type":"number"
              },
              "NiLines":{
                "name":"NiLines",
                "type":"number"
              },
              "NiKeyframeData":{
                "name":"NiKeyframeData",
                "type":"number"
              },
              "NiDX8Renderer":{
                "name":"NiDX8Renderer",
                "type":"number"
              },
              "RootCollisionNode":{
                "name":"RootCollisionNode",
                "type":"number"
              },
              "NiPixelData":{
                "name":"NiPixelData",
                "type":"number"
              },
              "NiFogProperty":{
                "name":"NiFogProperty",
                "type":"number"
              },
              "NiSwitchNode":{
                "name":"NiSwitchNode",
                "type":"number"
              },
              "NiLookAtController":{
                "name":"NiLookAtController",
                "type":"number"
              },
              "NiNode":{
                "name":"NiNode",
                "type":"number"
              },
              "NiBSAnimationNode":{
                "name":"NiBSAnimationNode",
                "type":"number"
              },
              "NiStringExtraData":{
                "name":"NiStringExtraData",
                "type":"number"
              },
              "NiBillboardNode":{
                "name":"NiBillboardNode",
                "type":"number"
              },
              "NiStencilProperty":{
                "name":"NiStencilProperty",
                "type":"number"
              },
              "NiAutoNormalParticlesData":{
                "name":"NiAutoNormalParticlesData",
                "type":"number"
              },
              "NiBSAnimationManager":{
                "name":"NiBSAnimationManager",
                "type":"number"
              },
              "NiAmbientLight":{
                "name":"NiAmbientLight",
                "type":"number"
              },
              "NiLight":{
                "name":"NiLight",
                "type":"number"
              },
              "NiObjectNET":{
                "name":"NiObjectNET",
                "type":"number"
              },
              "NiLightColorController":{
                "name":"NiLightColorController",
                "type":"number"
              },
              "NiParticleGrowFade":{
                "name":"NiParticleGrowFade",
                "type":"number"
              },
              "NiParticles":{
                "name":"NiParticles",
                "type":"number"
              },
              "NiParticleSystemController":{
                "name":"NiParticleSystemController",
                "type":"number"
              },
              "NiBltSource":{
                "name":"NiBltSource",
                "type":"number"
              },
              "NiFloatData":{
                "name":"NiFloatData",
                "type":"number"
              },
              "NiClusterAccumulator":{
                "name":"NiClusterAccumulator",
                "type":"number"
              },
              "NiPathController":{
                "name":"NiPathController",
                "type":"number"
              },
              "NiPlanarCollider":{
                "name":"NiPlanarCollider",
                "type":"number"
              },
              "NiPosData":{
                "name":"NiPosData",
                "type":"number"
              },
              "NiSourceTexture":{
                "name":"NiSourceTexture",
                "type":"number"
              },
              "NiVertWeightsExtraData":{
                "name":"NiVertWeightsExtraData",
                "type":"number"
              },
              "NiVisData":{
                "name":"NiVisData",
                "type":"number"
              },
              "NiRotatingParticles":{
                "name":"NiRotatingParticles",
                "type":"number"
              },
              "NiTexturingProperty":{
                "name":"NiTexturingProperty",
                "type":"number"
              },
              "NiRenderedCubeMap":{
                "name":"NiRenderedCubeMap",
                "type":"number"
              },
              "NiWireframeProperty":{
                "name":"NiWireframeProperty",
                "type":"number"
              },
              "NiTimeController":{
                "name":"NiTimeController",
                "type":"number"
              },
              "NiRenderedTexture":{
                "name":"NiRenderedTexture",
                "type":"number"
              },
              "NiTextKeyExtraData":{
                "name":"NiTextKeyExtraData",
                "type":"number"
              },
              "NiRenderer":{
                "name":"NiRenderer",
                "type":"number"
              },
              "NiRendererSpecificProperty":{
                "name":"NiRendererSpecificProperty",
                "type":"number"
              },
              "NiRollController":{
                "name":"NiRollController",
                "type":"number"
              },
              "NiProperty":{
                "name":"NiProperty",
                "type":"number"
              },
              "NiRotatingParticlesData":{
                "name":"NiRotatingParticlesData",
                "type":"number"
              },
              "NiUVController":{
                "name":"NiUVController",
                "type":"number"
              },
              "NiSkinData":{
                "name":"NiSkinData",
                "type":"number"
              },
              "NiSkinInstance":{
                "name":"NiSkinInstance",
                "type":"number"
              },
              "NiDitherProperty":{
                "name":"NiDitherProperty",
                "type":"number"
              },
              "NiBSPArrayController":{
                "name":"NiBSPArrayController",
                "type":"number"
              },
              "NiSortAdjustNode":{
                "name":"NiSortAdjustNode",
                "type":"number"
              },
              "NiSpecularProperty":{
                "name":"NiSpecularProperty",
                "type":"number"
              },
              "NiSpotLight":{
                "name":"NiSpotLight",
                "type":"number"
              },
              "NiColorData":{
                "name":"NiColorData",
                "type":"number"
              },
              "NiSequenceStreamHelper":{
                "name":"NiSequenceStreamHelper",
                "type":"number"
              },
              "NiExtraData":{
                "name":"NiExtraData",
                "type":"number"
              },
              "NiTriShapeData":{
                "name":"NiTriShapeData",
                "type":"number"
              },
              "NiScreenPolygon":{
                "name":"NiScreenPolygon",
                "type":"number"
              },
              "NiMorphData":{
                "name":"NiMorphData",
                "type":"number"
              },
              "NiPointLight":{
                "name":"NiPointLight",
                "type":"number"
              },
              "OffscreenSceneGraph_MasterPropertyAccumulator":{
                "name":"OffscreenSceneGraph_MasterPropertyAccumulator",
                "type":"number"
              },
              "NiTexture":{
                "name":"NiTexture",
                "type":"number"
              },
              "NiAutoNormalParticles":{
                "name":"NiAutoNormalParticles",
                "type":"number"
              },
              "NiMaterialProperty":{
                "name":"NiMaterialProperty",
                "type":"number"
              },
              "NiPalette":{
                "name":"NiPalette",
                "type":"number"
              },
              "NiKeyframeController":{
                "name":"NiKeyframeController",
                "type":"number"
              },
              "NiZBufferProperty":{
                "name":"NiZBufferProperty",
                "type":"number"
              }
            },
            "type":"table"
          },
          "musicSituation":{
            "fields":{
              "uninterruptible":{
                "name":"uninterruptible",
                "type":"number"
              },
              "explore":{
                "name":"explore",
                "type":"number"
              },
              "combat":{
                "name":"combat",
                "type":"number"
              }
            },
            "type":"table"
          },
          "keyTransition":{
            "fields":{
              "toggled":{
                "name":"toggled",
                "type":"number"
              },
              "test":{
                "name":"test",
                "type":"number"
              },
              "down":{
                "name":"down",
                "type":"number"
              },
              "up":{
                "name":"up",
                "type":"number"
              }
            },
            "type":"table"
          },
          "getCursorPosition":{
            "description":"Returns a table with values x and y that contain the current cursor position.",
            "type":"function"
          },
          "removeSound":{
            "type":"function",
            "description":"Removes a sound that is active.\n\nAccepts parameters through a table with the given keys:\n * (sound: tes3sound|string)\n * (reference: tes3reference|tes3mobileActor|string) Optional.",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "magicSchool":{
            "fields":{
              "conjuration":{
                "name":"conjuration",
                "type":"number"
              },
              "destruction":{
                "name":"destruction",
                "type":"number"
              },
              "illusion":{
                "name":"illusion",
                "type":"number"
              },
              "alteration":{
                "name":"alteration",
                "type":"number"
              },
              "mysticism":{
                "name":"mysticism",
                "type":"number"
              },
              "restoration":{
                "name":"restoration",
                "type":"number"
              },
              "none":{
                "name":"none",
                "type":"number"
              }
            },
            "type":"table"
          },
          "tapKey":{
            "type":"function",
            "description":"Simulates tapping a key.",
            "args":[{
                "name":"keyCode"
              }],
            "argTypes":["number"]
          },
          "clothingSlot":{
            "fields":{
              "amulet":{
                "name":"amulet",
                "type":"number"
              },
              "belt":{
                "name":"belt",
                "type":"number"
              },
              "robe":{
                "name":"robe",
                "type":"number"
              },
              "skirt":{
                "name":"skirt",
                "type":"number"
              },
              "shirt":{
                "name":"shirt",
                "type":"number"
              },
              "rightGlove":{
                "name":"rightGlove",
                "type":"number"
              },
              "pants":{
                "name":"pants",
                "type":"number"
              },
              "leftGlove":{
                "name":"leftGlove",
                "type":"number"
              },
              "ring":{
                "name":"ring",
                "type":"number"
              },
              "shoes":{
                "name":"shoes",
                "type":"number"
              }
            },
            "type":"table"
          },
          "disableKey":{
            "type":"function",
            "description":"Disables the use of a key.",
            "args":[{
                "name":"keyCode"
              }],
            "argTypes":["number"]
          },
          "keybind":{
            "fields":{
              "quick10":{
                "name":"quick10",
                "type":"number"
              },
              "menuMode":{
                "name":"menuMode",
                "type":"number"
              },
              "quick2":{
                "name":"quick2",
                "type":"number"
              },
              "sneak":{
                "name":"sneak",
                "type":"number"
              },
              "quickLoad":{
                "name":"quickLoad",
                "type":"number"
              },
              "quick1":{
                "name":"quick1",
                "type":"number"
              },
              "autoRun":{
                "name":"autoRun",
                "type":"number"
              },
              "readyMagicMCP":{
                "name":"readyMagicMCP",
                "type":"number"
              },
              "quickSave":{
                "name":"quickSave",
                "type":"number"
              },
              "forward":{
                "name":"forward",
                "type":"number"
              },
              "rest":{
                "name":"rest",
                "type":"number"
              },
              "nextSpell":{
                "name":"nextSpell",
                "type":"number"
              },
              "console":{
                "name":"console",
                "type":"number"
              },
              "readyWeapon":{
                "name":"readyWeapon",
                "type":"number"
              },
              "right":{
                "name":"right",
                "type":"number"
              },
              "quickMenu":{
                "name":"quickMenu",
                "type":"number"
              },
              "back":{
                "name":"back",
                "type":"number"
              },
              "togglePOV":{
                "name":"togglePOV",
                "type":"number"
              },
              "readyMagic":{
                "name":"readyMagic",
                "type":"number"
              },
              "previousSpell":{
                "name":"previousSpell",
                "type":"number"
              },
              "screenshot":{
                "name":"screenshot",
                "type":"number"
              },
              "quick9":{
                "name":"quick9",
                "type":"number"
              },
              "journal":{
                "name":"journal",
                "type":"number"
              },
              "quick3":{
                "name":"quick3",
                "type":"number"
              },
              "quick5":{
                "name":"quick5",
                "type":"number"
              },
              "jump":{
                "name":"jump",
                "type":"number"
              },
              "escape":{
                "name":"escape",
                "type":"number"
              },
              "left":{
                "name":"left",
                "type":"number"
              },
              "run":{
                "name":"run",
                "type":"number"
              },
              "alwaysRun":{
                "name":"alwaysRun",
                "type":"number"
              },
              "previousWeapon":{
                "name":"previousWeapon",
                "type":"number"
              },
              "quick4":{
                "name":"quick4",
                "type":"number"
              },
              "activate":{
                "name":"activate",
                "type":"number"
              },
              "nextWeapon":{
                "name":"nextWeapon",
                "type":"number"
              },
              "quick8":{
                "name":"quick8",
                "type":"number"
              },
              "quick7":{
                "name":"quick7",
                "type":"number"
              },
              "quick6":{
                "name":"quick6",
                "type":"number"
              },
              "use":{
                "name":"use",
                "type":"number"
              }
            },
            "type":"table"
          },
          "iterate":{
            "type":"function",
            "description":"This function returns a function that iterates over a tes3iterator object. This is useful for for loops.",
            "args":[{
                "name":"iterator"
              }],
            "returnTypes":[{
                "type":"function"
              }],
            "argTypes":["tes3iterator"]
          },
          "loopTArray":{
            "type":"function",
            "description":"This function returns a function that iterates over a tes3tarray object. This is useful for for loops.",
            "args":[{
                "name":"tarray"
              }],
            "returnTypes":[{
                "type":"function"
              }],
            "argTypes":["tes3tarray"]
          },
          "skill":{
            "fields":{
              "enchant":{
                "name":"enchant",
                "type":"number"
              },
              "axe":{
                "name":"axe",
                "type":"number"
              },
              "lightArmor":{
                "name":"lightArmor",
                "type":"number"
              },
              "spear":{
                "name":"spear",
                "type":"number"
              },
              "marksman":{
                "name":"marksman",
                "type":"number"
              },
              "armorer":{
                "name":"armorer",
                "type":"number"
              },
              "illusion":{
                "name":"illusion",
                "type":"number"
              },
              "acrobatics":{
                "name":"acrobatics",
                "type":"number"
              },
              "block":{
                "name":"block",
                "type":"number"
              },
              "restoration":{
                "name":"restoration",
                "type":"number"
              },
              "mediumArmor":{
                "name":"mediumArmor",
                "type":"number"
              },
              "longBlade":{
                "name":"longBlade",
                "type":"number"
              },
              "alchemy":{
                "name":"alchemy",
                "type":"number"
              },
              "athletics":{
                "name":"athletics",
                "type":"number"
              },
              "conjuration":{
                "name":"conjuration",
                "type":"number"
              },
              "handToHand":{
                "name":"handToHand",
                "type":"number"
              },
              "mercantile":{
                "name":"mercantile",
                "type":"number"
              },
              "sneak":{
                "name":"sneak",
                "type":"number"
              },
              "shortBlade":{
                "name":"shortBlade",
                "type":"number"
              },
              "unarmored":{
                "name":"unarmored",
                "type":"number"
              },
              "heavyArmor":{
                "name":"heavyArmor",
                "type":"number"
              },
              "destruction":{
                "name":"destruction",
                "type":"number"
              },
              "mysticism":{
                "name":"mysticism",
                "type":"number"
              },
              "alteration":{
                "name":"alteration",
                "type":"number"
              },
              "speechcraft":{
                "name":"speechcraft",
                "type":"number"
              },
              "bluntWeapon":{
                "name":"bluntWeapon",
                "type":"number"
              },
              "security":{
                "name":"security",
                "type":"number"
              }
            },
            "type":"table"
          },
          "getModList":{
            "description":"Fetches the list of the active ESM and ESP files.",
            "type":"function"
          },
          "updateJournal":{
            "type":"function",
            "description":"Updates the journal index in a way similar to the mwscript function Journal.\n\nAccepts parameters through a table with the given keys:\n * (id: tes3dialogue|string)\n * (index: number)\n * (showMessage: boolean) If set, a message may be shown to the player.",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "returnTypes":[{
                "type":"boolean"
              }],
            "argTypes":["table"]
          },
          "getReference":{
            "type":"function",
            "description":"Fetches the first reference for a given base object ID.",
            "args":[{
                "name":"id"
              }],
            "returnTypes":[{
                "name":"tes3reference",
                "type":"ref"
              }],
            "argTypes":["string"]
          },
          "isModActive":{
            "type":"function",
            "description":"Determines if the player has a given ESP or ESM file active.",
            "args":[{
                "name":"filename"
              }],
            "returnTypes":[{
                "type":"boolean"
              }],
            "argTypes":["string"]
          },
          "lock":{
            "type":"function",
            "description":"Locks an object, and optionally sets a locked reference's lock level. Returns true if the object can be and wasn't already locked.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string)\n * (level: number) Optional.",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "returnTypes":[{
                "type":"boolean"
              }],
            "argTypes":["table"]
          },
          "attributeName":{
            "fields":{
              "1":{
                "name":1,
                "type":"string"
              },
              "2":{
                "name":2,
                "type":"string"
              },
              "3":{
                "name":3,
                "type":"string"
              },
              "4":{
                "name":4,
                "type":"string"
              },
              "5":{
                "name":5,
                "type":"string"
              },
              "6":{
                "name":6,
                "type":"string"
              },
              "7":{
                "name":7,
                "type":"string"
              },
              "0":{
                "name":0,
                "type":"string"
              }
            },
            "type":"table"
          },
          "objectType":{
            "fields":{
              "ammunition":{
                "name":"ammunition",
                "type":"number"
              },
              "clothing":{
                "name":"clothing",
                "type":"number"
              },
              "repairItem":{
                "name":"repairItem",
                "type":"number"
              },
              "container":{
                "name":"container",
                "type":"number"
              },
              "reference":{
                "name":"reference",
                "type":"number"
              },
              "lockpick":{
                "name":"lockpick",
                "type":"number"
              },
              "mobileActor":{
                "name":"mobileActor",
                "type":"number"
              },
              "leveledItem":{
                "name":"leveledItem",
                "type":"number"
              },
              "mobilePlayer":{
                "name":"mobilePlayer",
                "type":"number"
              },
              "mobileNPC":{
                "name":"mobileNPC",
                "type":"number"
              },
              "soundGenerator":{
                "name":"soundGenerator",
                "type":"number"
              },
              "light":{
                "name":"light",
                "type":"number"
              },
              "activator":{
                "name":"activator",
                "type":"number"
              },
              "apparatus":{
                "name":"apparatus",
                "type":"number"
              },
              "door":{
                "name":"door",
                "type":"number"
              },
              "spell":{
                "name":"spell",
                "type":"number"
              },
              "script":{
                "name":"script",
                "type":"number"
              },
              "mobileCreature":{
                "name":"mobileCreature",
                "type":"number"
              },
              "alchemy":{
                "name":"alchemy",
                "type":"number"
              },
              "static":{
                "name":"static",
                "type":"number"
              },
              "miscItem":{
                "name":"miscItem",
                "type":"number"
              },
              "book":{
                "name":"book",
                "type":"number"
              },
              "ingredient":{
                "name":"ingredient",
                "type":"number"
              },
              "leveledCreature":{
                "name":"leveledCreature",
                "type":"number"
              },
              "creature":{
                "name":"creature",
                "type":"number"
              },
              "faction":{
                "name":"faction",
                "type":"number"
              },
              "npc":{
                "name":"npc",
                "type":"number"
              },
              "probe":{
                "name":"probe",
                "type":"number"
              },
              "armor":{
                "name":"armor",
                "type":"number"
              },
              "weapon":{
                "name":"weapon",
                "type":"number"
              }
            },
            "type":"table"
          },
          "getJournalIndex":{
            "type":"function",
            "description":"Gets the index of a given journal, or nil if no valid journal could be found.\n\nAccepts parameters through a table with the given keys:\n * (id: tes3dialogue|string)",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "returnTypes":[{
                "type":"number"
              }],
            "argTypes":["table"]
          },
          "runLegacyScript":{
            "type":"function",
            "description":"This function will compile and run a mwscript chunk of code. This is not ideal to use, but can be used for features not yet exposed to lua.\n\nAccepts parameters through a table with the given keys:\n * (script: tes3script) The base script to base the execution from. Default: tes3.worldController.scriptGlobals\n * (source: number) The compilation source to use. Defaults to tes3.scriptSource.default\n * (command: string) The script text to compile and run.\n * (variables: tes3scriptVariables) If a reference is provided, the reference's variables will be used. Optional.\n * (reference: tes3reference|tes3mobileActor|string) The reference to target for execution.\n * (dialogue: tes3dialogue|string) If compiling for dialogue context, the dialogue associated with the script. Optional.\n * (info: tes3dialogueInfo) The info associated with the dialogue. Optional.",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "findGMST":{
            "type":"function",
            "description":"Fetches the core game object that represents a game setting. While this function accepts a name, it is recommended to use the tes3.GMST constants.",
            "args":[{
                "name":"id"
              }],
            "returnTypes":[{
                "name":"tes3gameSetting",
                "type":"ref"
              }],
            "argTypes":["number|string"]
          },
          "effectRange":{
            "fields":{
              "self":{
                "name":"self",
                "type":"number"
              },
              "touch":{
                "name":"touch",
                "type":"number"
              },
              "target":{
                "name":"target",
                "type":"number"
              }
            },
            "type":"table"
          },
          "getTopMenu":{
            "description":"Gets the top-level UI menu.",
            "type":"function"
          },
          "getInputBinding":{
            "type":"function",
            "description":"Gets the input configuration for a given keybind.",
            "args":[{
                "name":"keybind"
              }],
            "returnTypes":[{
                "name":"tes3inputConfig",
                "type":"ref"
              }],
            "argTypes":["number"]
          },
          "triggerCrime":{
            "type":"function",
            "description":"Emulates the player committing a crime.\n\nAccepts parameters through a table with the given keys:\n * (criminal: tes3mobileActor|tes3reference|string) Default: tes3.mobilePlayer\n * (forceDetection: boolean) Can be set to true to ignore normal detection checks.\n * (type: number) Maps to tes3.crimeType constants. Default: tes3.crimeType.stealing\n * (value: number) Penalty for the crime. Defaults to 25 for pickpocketing.\n * (victim: tes3mobileActor|tes3reference|string) Default: tes3.mobilePlayer",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "setTrap":{
            "type":"function",
            "description":"Sets the trap on a given reference.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string)\n * (spell: tes3spell|string)",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "returnTypes":[{
                "type":"boolean"
              }],
            "argTypes":["table"]
          },
          "setLockLevel":{
            "type":"function",
            "description":"Sets a locked reference's lock level. This does not lock the object.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string)\n * (level: number)",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "returnTypes":[{
                "type":"boolean"
              }],
            "argTypes":["table"]
          },
          "rayTest":{
            "type":"function",
            "description":"Preforms a ray test and returns various information related to the result(s). If findAll is set, the result will be a table of results, otherwise only the first result is returned.\n\nAccepts parameters through a table with the given keys:\n * (position: tes3vector3|table)\n * (direction: tes3vector3|table)\n * (findAll: boolean) If true, the ray test won't stop after the first result.\n * (sort: boolean) If true, the results will be sorted by distance from the origin position. Default: true\n * (useModelBounds: boolean) If true, model bounds will be tested for intersection. Otherwise triangles will be used.\n * (useModelCoordinates: boolean) If true, model coordinates will be used instead of world coordinates.\n * (useBackTriangles: boolean)\n * (observeAppCullFlag: boolean) Default: true\n * (returnColor: boolean)\n * (returnNormal: boolean) Default: true\n * (returnSmoothNormal: boolean)\n * (returnTexture: boolean)",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "returnTypes":[{
                "name":"niPickRecord",
                "type":"ref"
              }],
            "argTypes":["table"]
          },
          "attachmentType":{
            "fields":{
              "activator":{
                "name":"activator",
                "type":"number"
              },
              "variable":{
                "name":"variable",
                "type":"number"
              },
              "actor":{
                "name":"actor",
                "type":"number"
              },
              "lock":{
                "name":"lock",
                "type":"number"
              }
            },
            "type":"table"
          },
          "releaseKey":{
            "type":"function",
            "description":"Simulates releasing a key.",
            "args":[{
                "name":"keyCode"
              }],
            "argTypes":["number"]
          },
          "setJournalIndex":{
            "type":"function",
            "description":"Sets the index of a given journal in a way similar to the mwscript function SetJournalIndex.\n\nAccepts parameters through a table with the given keys:\n * (id: tes3dialogue|string)\n * (index: number)\n * (speaker: tes3mobileActor|tes3reference|string)\n * (showMessage: boolean) If set, a message may be shown to the player.",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "returnTypes":[{
                "type":"boolean"
              }],
            "argTypes":["table"]
          },
          "pushKey":{
            "type":"function",
            "description":"Simulates pushing a key.",
            "args":[{
                "name":"keyCode"
              }],
            "argTypes":["number"]
          },
          "getCameraPosition":{
            "description":"Returns the camera's position.",
            "type":"function"
          },
          "game":{
            "type":"ref",
            "description":"One of the core game objects.",
            "name":"tes3game"
          },
          "getSkill":{
            "type":"function",
            "description":"Fetches the core game object for a given skill ID.",
            "args":[{
                "name":"id"
              }],
            "returnTypes":[{
                "name":"tes3skill",
                "type":"ref"
              }],
            "argTypes":["number"]
          },
          "getActiveCells":{
            "description":"Returns a table of active cells. If indoors, the table will have only one entry. If outdoors, the 9 surrounding cells will be provided.",
            "type":"function"
          },
          "playItemPickupSound":{
            "type":"function",
            "description":"Plays the sound responsible for picking up or putting down an item.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The reference to attach the sound to. Optional.\n * (item: tes3item)\n * (pickup: boolean) If false, the place down item will be used. Default: true",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "player":{
            "type":"ref",
            "description":"A reference to the player.",
            "name":"tes3reference"
          },
          "loadGame":{
            "type":"function",
            "description":"Loads a game.",
            "args":[{
                "name":"filename"
              }],
            "argTypes":["string"]
          },
          "getScript":{
            "type":"function",
            "description":"Locates and returns a script by a given id.",
            "args":[{
                "name":"id"
              }],
            "returnTypes":[{
                "name":"tes3script",
                "type":"ref"
              }],
            "argTypes":["string"]
          },
          "checkMerchantTradesItem":{
            "type":"function",
            "description":"Determines if a merchant trades in a given item.",
            "args":[{
                "name":"item"
              },{
                "name":"reference"
              }],
            "returnTypes":[{
                "type":"boolean"
              }],
            "argTypes":["tes3item|string","tes3reference|tes3mobileActor|string"]
          },
          "modStatistic":{
            "type":"function",
            "description":"Modifies a statistic on a given actor. This should be used instead of manually setting values on the game structures, to ensure that events and GUI elements are properly handled. Either skill, attribute, or name must be provided.\n\nAccepts parameters through a table with the given keys:\n * (attribute: number) The attribute to set. Optional.\n * (base: number) If set, the base value will be modified. Optional.\n * (current: number) If set, the current value will be modified. Optional.\n * (limit: boolean) If set, the attribute won't rise above 100 or fall below 0.\n * (name: string) A generic name of an attribute to set. Optional.\n * (reference: tes3mobileActor|tes3reference|string)\n * (skill: number) The skill to set. Optional.\n * (value: number) If set, both the base and current value will be modified. Optional.",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "getAttachment":{
            "type":"function",
            "description":"Fetches an attachment with a given type.",
            "args":[{
                "name":"reference"
              },{
                "name":"attachment"
              }],
            "argTypes":["tes3reference","string"]
          },
          "getPlayerCell":{
            "description":"Fetches the cell that the player is currently in.",
            "type":"function"
          },
          "getSound":{
            "type":"function",
            "description":"Locates and returns a sound by a given id.",
            "args":[{
                "name":"id"
              }],
            "returnTypes":[{
                "name":"tes3sound",
                "type":"ref"
              }],
            "argTypes":["string"]
          },
          "menuMode":{
            "description":"Returns true if the player is currently in menu mode.",
            "type":"function"
          },
          "enableKey":{
            "type":"function",
            "description":"Enables the use of a key.",
            "args":[{
                "name":"keyCode"
              }],
            "argTypes":["number"]
          },
          "messageBox":{
            "type":"function",
            "description":"Displays a message box. This may be a simple toast-style message, or a box with choice buttons.",
            "args":[{
                "name":"messageOrParams"
              },{
                "name":"...",
                "displayName":"[...]"
              }],
            "returnTypes":[{
                "type":"boolean"
              }],
            "argTypes":["string|table","variadic"]
          },
          "worldController":{
            "type":"ref",
            "description":"One of the core game objects.",
            "name":"tes3worldController"
          },
          "getFileSource":{
            "type":"function",
            "description":"Determines if a file exists on the filesystem or inside of a bsa. The returned string will be \"file\" or \"bsa\".",
            "args":[{
                "name":"path"
              }],
            "returnTypes":[{
                "type":"string"
              }],
            "argTypes":["string"]
          },
          "attribute":{
            "fields":{
              "intelligence":{
                "name":"intelligence",
                "type":"number"
              },
              "agility":{
                "name":"agility",
                "type":"number"
              },
              "endurance":{
                "name":"endurance",
                "type":"number"
              },
              "strength":{
                "name":"strength",
                "type":"number"
              },
              "speed":{
                "name":"speed",
                "type":"number"
              },
              "willpower":{
                "name":"willpower",
                "type":"number"
              },
              "personality":{
                "name":"personality",
                "type":"number"
              },
              "luck":{
                "name":"luck",
                "type":"number"
              }
            },
            "type":"table"
          },
          "findGlobal":{
            "type":"function",
            "description":"Fetches the core game object that represents a global variable.",
            "args":[{
                "name":"id"
              }],
            "returnTypes":[{
                "name":"tes3globalVariable",
                "type":"ref"
              }],
            "argTypes":["string"]
          },
          "onMainMenu":{
            "description":"Returns true if the player is on the main menu, and hasn't loaded a game yet.",
            "type":"function"
          },
          "getFileExists":{
            "type":"function",
            "description":"Determines if a file exists in the user's Data Files.",
            "args":[{
                "name":"path"
              }],
            "returnTypes":[{
                "type":"boolean"
              }],
            "argTypes":["string"]
          },
          "newGame":{
            "description":"Starts a new game.",
            "type":"function"
          },
          "hammerKey":{
            "type":"function",
            "description":"Simulates hammering a key.",
            "args":[{
                "name":"keyCode"
              }],
            "argTypes":["number"]
          },
          "getSkillName":{
            "description":"Returns the identifying name of a skill for a given numerical, 0-based index. E.g. \"Enchant\".",
            "type":"function"
          },
          "animationState":{
            "fields":{
              "unreadyWeap":{
                "name":"unreadyWeap",
                "type":"number"
              },
              "pickingProbing":{
                "name":"pickingProbing",
                "type":"number"
              },
              "casting2":{
                "name":"casting2",
                "type":"number"
              },
              "readyingWeap":{
                "name":"readyingWeap",
                "type":"number"
              },
              "swingHit":{
                "name":"swingHit",
                "type":"number"
              },
              "swingUp":{
                "name":"swingUp",
                "type":"number"
              },
              "ready":{
                "name":"ready",
                "type":"number"
              },
              "idle":{
                "name":"idle",
                "type":"number"
              },
              "knockedOut":{
                "name":"knockedOut",
                "type":"number"
              },
              "readyingMagic":{
                "name":"readyingMagic",
                "type":"number"
              },
              "dead":{
                "name":"dead",
                "type":"number"
              },
              "unreadyMagic":{
                "name":"unreadyMagic",
                "type":"number"
              },
              "swingDown":{
                "name":"swingDown",
                "type":"number"
              },
              "swingFollowLight":{
                "name":"swingFollowLight",
                "type":"number"
              },
              "swingFollowHeavy":{
                "name":"swingFollowHeavy",
                "type":"number"
              },
              "knockdown":{
                "name":"knockdown",
                "type":"number"
              },
              "casting":{
                "name":"casting",
                "type":"number"
              },
              "swingFollowMed":{
                "name":"swingFollowMed",
                "type":"number"
              },
              "dying":{
                "name":"dying",
                "type":"number"
              }
            },
            "type":"table"
          },
          "getCurrentWeather":{
            "description":"Gets the currently active weather.",
            "type":"function"
          },
          "getDialogueInfo":{
            "type":"function",
            "description":"Locates and returns a Dialogue Info by a given id. This involves file IO and is an expensive call. Results should be cached.",
            "args":[{
                "name":"dialogue"
              },{
                "name":"id"
              }],
            "returnTypes":[{
                "name":"tes3dialogueInfo",
                "type":"ref"
              }],
            "argTypes":["tes3dialogue|string","string"]
          },
          "getLanguageCode":{
            "description":"Gets the language code, determined by the language entry in Morrowind.ini.",
            "type":"function"
          },
          "getEquippedItem":{
            "type":"function",
            "description":"Returns an actor's equipped item stack, provided a given filter\n\nAccepts parameters through a table with the given keys:\n * (actor: tes3reference|tes3mobileActor|tes3actor)\n * (enchanted: boolean) If true, filters to enchanted items. Optional.\n * (objectType: number) Maps to tes3.objectType constants. Used to filter equipment by type. Optional.\n * (slot: number) Maps to tes3.armorSlot or tes3.clothingSlot. Used to filter equipment by slot. Optional.\n * (type: number) Maps to tes3.weaponType. Used to filter equipment by type. Optional.",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "returnTypes":[{
                "name":"tes3equipmentStack",
                "type":"ref"
              }],
            "argTypes":["table"]
          },
          "getCell":{
            "type":"function",
            "description":"Finds a cell, either by an id or an X/Y grid position.\n\nAccepts parameters through a table with the given keys:\n * (id: string) The cell's ID. If not provided, x and y must be.\n * (x: number)\n * (y: number)",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "returnTypes":[{
                "name":"tes3cell",
                "type":"ref"
              }],
            "argTypes":["table"]
          },
          "getTrap":{
            "type":"function",
            "description":"Gets the trap on a given reference.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string)",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "returnTypes":[{
                "name":"tes3spell",
                "type":"ref"
              }],
            "argTypes":["table"]
          },
          "addArmorSlot":{
            "type":"function",
            "description":"Registers a new slot to be used..\n\nAccepts parameters through a table with the given keys:\n * (slot: number) A number greater than 10 to configure a slot for.\n * (name: string)\n * (weight: number) A stand-in for the armor base weight value, typically controlled by a GMST (e.g. iHelmWeight).",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "returnTypes":[{
                "type":"boolean"
              }],
            "argTypes":["table"]
          },
          "hasCodePatchFeature":{
            "type":"function",
            "description":"Attempts to determine if a given Morrowind Code Patch feature is enabled. This may not be possible, in which case nil will be returned.",
            "args":[{
                "name":"id"
              }],
            "returnTypes":[{
                "name":"boolean|nil",
                "type":"ref"
              }],
            "argTypes":["number"]
          },
          "fadeIn":{
            "type":"function",
            "description":"Similar to the vanilla FadeIn mwscript command.\n\nAccepts parameters through a table with the given keys:\n * (fader: tes3fader) Defaults to the transition fader. Optional.\n * (duration: number) Time, in seconds, for the fade. Default: 1.0",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "loadMesh":{
            "type":"function",
            "description":"Loads a mesh file and provides a scene graph object.",
            "args":[{
                "name":"path"
              }],
            "returnTypes":[{
                "name":"niNode",
                "type":"ref"
              }],
            "argTypes":["string"]
          }
        }
      },
      "mwscript":{
        "type":"table",
        "description":"The mwscript library allows vanilla mwscript functions to be called. This is not always ideal, and this library is deprecated.",
        "fields":{
          "positionCell":{
            "type":"function",
            "description":"Wrapper for the PositionCell mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (cell: string)\n * (x: number) Default: 0\n * (y: number) Default: 0\n * (z: number) Default: 0\n * (rotation: number) Default: 0",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "getReference":{
            "description":"Returns the script target for the currently running Morrowind script, if any.",
            "type":"function"
          },
          "getItemCount":{
            "type":"function",
            "description":"Wrapper for the GetItemCount mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (item: tes3item|string)",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "getPCRunning":{
            "description":"Wrapper for the GetPCRunning mwscript function.",
            "type":"function"
          },
          "stopCombat":{
            "type":"function",
            "description":"Wrapper for the StopCombat mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (target: tes3reference|tes3mobileActor|string) Actor to stop combat with.",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "addSpell":{
            "type":"function",
            "description":"Wrapper for the AddItem mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (spell: tes3spell|string)",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "addToLevItem":{
            "type":"function",
            "description":"Wrapper for the AddToLevItem mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (list: tes3leveledItem|string) Leveled item list to add a creature to.\n * (item: tes3item|string) Item to add to the list.\n * (level: number) Minimum level for the item to spawn. Default: 0",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "hasItemEquipped":{
            "type":"function",
            "description":"Wrapper for the HasItemEquipped mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (item: tes3item|string) The item to be added.",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "getPCJumping":{
            "description":"Wrapper for the GetPCJumping mwscript function.",
            "type":"function"
          },
          "setLevel":{
            "type":"function",
            "description":"Wrapper for the SetLevel mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (level: number)",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "playSound":{
            "type":"function",
            "description":"Wrapper for the PlaySound mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (sound: tes3sound|string)",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "addItem":{
            "type":"function",
            "description":"Wrapper for the AddItem mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (item: tes3item|string) The item to be added.\n * (count: number) The number of items to be added. Default: 1",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "position":{
            "type":"function",
            "description":"Wrapper for the Position mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (cell: string)\n * (x: number) Default: 0\n * (y: number) Default: 0\n * (z: number) Default: 0\n * (rotation: number) Default: 0",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "scriptRunning":{
            "type":"function",
            "description":"Wrapper for the ScriptRunning mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (script: tes3script|string)",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "getDisabled":{
            "type":"function",
            "description":"Wrapper for the GetDisabled mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "activate":{
            "type":"function",
            "description":"Wrapper for the Activate mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "getSpellEffects":{
            "type":"function",
            "description":"Wrapper for the GetSpellEffects mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (spell: tes3spell|string)",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "explodeSpell":{
            "type":"function",
            "description":"Wrapper for the ExplodeSpell mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (spell: tes3spell|string)",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "aiTravel":{
            "type":"function",
            "description":"Wrapper for the AITravel mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (x: number)\n * (y: number)\n * (z: number)",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "startScript":{
            "type":"function",
            "description":"Wrapper for the StartCombat mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (script: tes3script|string)",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "drop":{
            "type":"function",
            "description":"Wrapper for the Drop mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (item: tes3item|string) The item to be dropped.\n * (count: number) The number of items to drop. Default: 1",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "equip":{
            "type":"function",
            "description":"Wrapper for the Equip mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (item: tes3item|string) The item to be equipped.",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "removeSpell":{
            "type":"function",
            "description":"Wrapper for the RemoveSpell mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (spell: tes3spell|string)",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "getScript":{
            "description":"Returns the currently running Morrowind script, if any.",
            "type":"function"
          },
          "getButtonPressed":{
            "description":"Wrapper for the GetButtonPressed mwscript function.",
            "type":"function"
          },
          "addSoulGem":{
            "type":"function",
            "description":"Wrapper for the AddSoulGem mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (creature: tes3creature|string) The creature to be stored in the soul gem.\n * (soulgem: tes3misc|string) The soul gem to store the soul in.",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "addToLevCreature":{
            "type":"function",
            "description":"Wrapper for the AddToLevCreature mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (list: tes3leveledCreature|string) Leveled creature list to add a creature to.\n * (creature: tes3actor|string) Creature to add to the list.\n * (level: number) Minimum level for the creature to spawn. Default: 0",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "wakeUpPC":{
            "description":"Wrapper for the WakeUpPC mwscript function.",
            "type":"function"
          },
          "getDetected":{
            "type":"function",
            "description":"Wrapper for the GetDetected mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (target: tes3reference|tes3mobileActor|string) Actor to check detection for.",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "startCombat":{
            "type":"function",
            "description":"Wrapper for the StartCombat mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (target: tes3reference|tes3mobileActor|string) Actor to start combat with.",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "stopSound":{
            "type":"function",
            "description":"Wrapper for the StopSound mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (sound: tes3sound|string)",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "placeAtPC":{
            "type":"function",
            "description":"Wrapper for the PlaceAtPC mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (object: tes3object|string) The object to place.\n * (count: number) Default: 1\n * (distance: number) Default: 256\n * (direction: number) Default: 1",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "addTopic":{
            "type":"function",
            "description":"Wrapper for the AddItem mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (topic: tes3dialogue|string)",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "enable":{
            "type":"function",
            "description":"Wrapper for the Enable mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (modify: boolean) Set the object as modified. Default: true",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "getPCSneaking":{
            "description":"Wrapper for the GetPCSneaking mwscript function.",
            "type":"function"
          },
          "removeItem":{
            "type":"function",
            "description":"Wrapper for the RemoveItem mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (item: tes3item|string) The item to be added.\n * (count: number) The number of items to be added. Default: 1",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "stopScript":{
            "type":"function",
            "description":"Wrapper for the StartCombat mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (script: tes3script|string)",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "disable":{
            "type":"function",
            "description":"Wrapper for the Disable mwscript function.\n\nAccepts parameters through a table with the given keys:\n * (reference: tes3reference|tes3mobileActor|string) The target reference for this command to be executed on. Defaults to the normal script execution reference. Optional.\n * (modify: boolean) Set the object as modified. Default: true",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          }
        }
      },
      "tes3ui":{
        "type":"table",
        "description":"The tes3ui library provides access to manipulating the game's GUI.",
        "fields":{
          "updateBarterMenuTiles":{
            "description":"Forces the game to update the barter tile GUI elements.",
            "type":"function"
          },
          "showBookMenu":{
            "type":"function",
            "description":"Displays the book menu with arbitrary text. Paging is automatically handled.",
            "args":[{
                "name":"text"
              }],
            "argTypes":["string"]
          },
          "enterMenuMode":{
            "type":"function",
            "description":"Requests menu mode be activated on a menu with a given id.",
            "args":[{
                "name":"id"
              }],
            "argTypes":["number"]
          },
          "acquireTextInput":{
            "type":"function",
            "description":"Sends all text input to the specified element. Suppresses keybinds while active. Calling this function with a nil argument will release text input and allow keybinds to work.",
            "args":[{
                "name":"element"
              }],
            "argTypes":["tes3uiElemenet"]
          },
          "getPalette":{
            "type":"function",
            "description":"Gets a standard palette colour. Returns an array containing the RGB colour values, in the range [0.0, 1.0].",
            "args":[{
                "name":"name"
              }],
            "argTypes":["string"]
          },
          "updateInventorySelectTiles":{
            "description":"Forces the game to update the inventory selection GUI elements.",
            "type":"function"
          },
          "logToConsole":{
            "type":"function",
            "description":"Logs a message to the console.",
            "args":[{
                "name":"text"
              },{
                "name":"isCommand",
                "displayName":"isCommand = false"
              }],
            "argTypes":["string","boolean"]
          },
          "showScrollMenu":{
            "type":"function",
            "description":"Displays the scroll menu with arbitrary text.",
            "args":[{
                "name":"text"
              }],
            "argTypes":["string"]
          },
          "getInventorySelectType":{
            "description":"Determines what sort of search is being done when performing an inventory selection, e.g. \"alembic\" or \"ingredient\" or \"soulGemFilled\".",
            "type":"function"
          },
          "getServiceActor":{
            "description":"Returns the mobile actor currently providing services to the player.",
            "type":"function"
          },
          "registerProperty":{
            "type":"function",
            "description":"Registers a property name, returning a Property. Once a property is registered, this function always returns the same Property.\n\nThe registry namespace is shared between Property and UI_ID. It is advisable to use a namespace prefix to avoid collisions with other mods.",
            "args":[{
                "name":"s"
              }],
            "argTypes":["string"]
          },
          "registerID":{
            "type":"function",
            "description":"Registers a UI element name, returning a UI_ID. Once a property is registered, this function always returns the same UI_ID. These UI_IDs are used by the API to locate elements that may not exist (a weak reference), instead of by element name.\n\nThe registry namespace is shared between Property and UI_ID. It is advisable to use a namespace prefix to avoid collisions with other mods.",
            "args":[{
                "name":"s"
              }],
            "argTypes":["string"]
          },
          "updateInventoryTiles":{
            "description":"Forces the game to update the inventory tile GUI elements.",
            "type":"function"
          },
          "leaveMenuMode":{
            "type":"function",
            "description":"Requests menu mode be deactivated on a menu with a given id.",
            "args":[{
                "name":"id"
              }],
            "argTypes":["number"]
          },
          "findMenu":{
            "type":"function",
            "description":"Locates a top-level menu through its id.",
            "args":[{
                "name":"id"
              }],
            "argTypes":["number"]
          },
          "createMenu":{
            "type":"function",
            "description":"Creates a top-level menu.\n\nAccepts parameters through a table with the given keys:\n * (id: number) The menu’s ID. The menu can be later accessed by tes3ui.findMenu(id).\n * (dragFrame: boolean) Constructs a draggable and resizeable frame and background for the menu. It is similar to the stats, inventory, magic and map menus in the standard UI. After construction, position and minimum dimensions should be set.\n * (fixedFrame: boolean) Constructs a fixed (non-draggable) frame and background for the menu. The layout system should automatically centre and size it to fit whatever is added to the menu.",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "createHelpLayerMenu":{
            "type":"function",
            "description":"Creates a help layer menu. Help layer menus include notifications and tooltips that are always above the rest of the interface. The game realizes this using a separate menu root and set of functions.\n\nNote, to create tooltips with the correct behaviour, use tes3ui.createTooltipMenu.\n\nUnlike standard menus, help layer menus are always created with a fixed frame.\n\nAccepts parameters through a table with the given keys:\n * (id: number) The menu’s ID. The menu can be later accessed by tes3ui.findHelpLayerMenu(id).",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "findHelpLayerMenu":{
            "type":"function",
            "description":"Locates a help layer menu through its id. Help layer menus include notifications and tooltips that are always above the rest of the interface. The game realizes this using a separate menu root and set of functions.",
            "args":[{
                "name":"id"
              }],
            "argTypes":["number"]
          }
        }
      },
      "timer":{
        "type":"table",
        "description":"The timer library provides helper functions for creating delayed executors.",
        "fields":{
          "delayOneFrame":{
            "type":"function",
            "description":"Creates a timer that will finish the next frame. It defaults to the next simulation frame.",
            "args":[{
                "name":"callback"
              },{
                "name":"type",
                "displayName":"type = timer.simulate"
              }],
            "returnTypes":[{
                "name":"mwseTimer",
                "type":"ref"
              }],
            "argTypes":["function","number"]
          },
          "simulate":{
            "type":"ref",
            "description":"Constant to represent timers that run when the game isn't paused."
          },
          "paused":{
            "type":"ref",
            "description":"Constant to represent a timer that is paused."
          },
          "active":{
            "type":"ref",
            "description":"Constant to represent a timer that is actively running."
          },
          "expired":{
            "type":"ref",
            "description":"Constant to represent a timer that has completed."
          },
          "game":{
            "type":"ref",
            "description":"Constant to represent timers that run based on in-world time."
          },
          "start":{
            "type":"function",
            "description":"Creates a timer.\n\nAccepts parameters through a table with the given keys:\n * (type: number)\n * (duration: number)\n * (callback: function)\n * (iterations: number) Optional.",
            "args":[{
                "name":"params",
                "type":"table"
              }],
            "returnTypes":[{
                "name":"mwseTimer",
                "type":"ref"
              }],
            "argTypes":["table"]
          },
          "real":{
            "type":"ref",
            "description":"Constant to represent timers that run in real-time."
          }
        }
      },
      "json":{
        "type":"table",
        "description":"Provides support for interacting with json data through an extended dkjson module.",
        "fields":{
          "savefile":{
            "type":"function",
            "description":"Saves a serializable table to Data Files\\MWSE\\{fileName}.json, using json.encode.",
            "args":[{
                "name":"fileName"
              },{
                "name":"object"
              },{
                "name":"config",
                "displayName":"[config]"
              }],
            "returnTypes":[{
                "type":"table"
              }],
            "argTypes":["string","unknown","table"]
          },
          "version":{
            "description":"Current version of dkjson.",
            "type":"string"
          },
          "quotestring":{
            "type":"function",
            "description":"Quote a UTF-8 string and escape critical characters using JSON escape sequences. This function is only necessary when you build your own __tojson functions.",
            "args":[{
                "name":"s"
              }],
            "returnTypes":[{
                "type":"string"
              }],
            "argTypes":["string"]
          },
          "encode":{
            "type":"function",
            "description":"Create a string representing the object. Object can be a table, a string, a number, a boolean, nil, json.null or any object with a function __tojson in its metatable. A table can only use strings and numbers as keys and its values have to be valid objects as well. It raises an error for any invalid data types or reference cycles.",
            "args":[{
                "name":"object"
              },{
                "name":"state"
              }],
            "returnTypes":[{
                "type":"string"
              }],
            "argTypes":["unknown","table"]
          },
          "null":{
            "description":"You can use this value for setting explicit null values.",
            "type":"number"
          },
          "decode":{
            "type":"function",
            "description":"Decode string into a table.",
            "args":[{
                "name":"s"
              },{
                "name":"position",
                "displayName":"position = 1"
              },{
                "name":"nullValue",
                "displayName":"nullValue = nil"
              }],
            "returnTypes":[{
                "type":"table"
              }],
            "argTypes":["string","number","unknown"]
          },
          "loadfile":{
            "type":"function",
            "description":"Loads the contents of a file through json.decode. Files loaded from Data Files\\MWSE\\{fileName}.json.",
            "args":[{
                "name":"fileName"
              }],
            "returnTypes":[{
                "type":"table"
              }],
            "argTypes":["string"]
          }
        }
      },
      "math":{
        "fields":{
          "log":{
            "argsDisplay":"x [, base]",
            "type":"function",
            "description":"Returns the logarithm of x in the given base. The default for base is e (so that the function returns the natural logarithm of x).",
            "link":"https://www.lua.org/manual/5.2/manual.html#pdf-math.log",
            "args":[{
                "name":"x"
              }]
          },
          "ldexp":{
            "argsDisplay":"m, e",
            "type":"function",
            "description":"Returns m2e (e should be an integer).",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.ldexp",
            "args":[{
                "name":"m"
              },{
                "name":"e"
              }]
          },
          "rad":{
            "argsDisplay":"x",
            "type":"function",
            "description":"Returns the angle x (given in degrees) in radians.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.rad",
            "args":[{
                "name":"x"
              }]
          },
          "cosh":{
            "argsDisplay":"x",
            "type":"function",
            "description":"Returns the hyperbolic cosine of x.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.cosh",
            "args":[{
                "name":"x"
              }]
          },
          "round":{
            "type":"function",
            "description":"Rounds a number to a given count of digits.",
            "args":[{
                "name":"value"
              },{
                "name":"digits"
              }],
            "returnTypes":[{
                "type":"number"
              }],
            "argTypes":["number","number"]
          },
          "random":{
            "argsDisplay":"[m [, n]]",
            "type":"function",
            "description":"This function is an interface to the simple pseudo-random generator function rand provided by ANSI C. (No guarantees can be given for its statistical properties.)",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.random",
            "args":[]
          },
          "frexp":{
            "argsDisplay":"x",
            "type":"function",
            "description":"Returns m and e such that x = m2e, e is an integer and the absolute value of m is in the range [0.5, 1) (or zero when x is zero).",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.frexp",
            "args":[{
                "name":"x"
              }]
          },
          "pi":{
            "type":"number",
            "description":"The value of pi.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.pi"
          },
          "floor":{
            "argsDisplay":"x",
            "type":"function",
            "description":"Returns the largest integer smaller than or equal to x.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.floor",
            "args":[{
                "name":"x"
              }]
          },
          "max":{
            "argsDisplay":"x, ···",
            "type":"function",
            "description":"Returns the maximum value among its arguments.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.max",
            "args":[{
                "name":"x"
              }]
          },
          "sqrt":{
            "argsDisplay":"x",
            "type":"function",
            "description":"Returns the square root of x. (You can also use the expression x^0.5 to compute this value.)",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.sqrt",
            "args":[{
                "name":"x"
              }]
          },
          "modf":{
            "argsDisplay":"x",
            "type":"function",
            "description":"Returns two numbers, the integral part of x and the fractional part of x.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.modf",
            "args":[{
                "name":"x"
              }]
          },
          "huge":{
            "type":"unknown",
            "description":"The value HUGE_VAL, a value larger than or equal to any other numerical value.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.huge"
          },
          "pow":{
            "argsDisplay":"x, y",
            "type":"function",
            "description":"Returns xy. (You can also use the expression x^y to compute this value.)",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.pow",
            "args":[{
                "name":"x"
              },{
                "name":"y"
              }]
          },
          "atan":{
            "argsDisplay":"x",
            "type":"function",
            "description":"Returns the arc tangent of x (in radians).",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.atan",
            "args":[{
                "name":"x"
              }]
          },
          "tan":{
            "argsDisplay":"x",
            "type":"function",
            "description":"Returns the tangent of x (assumed to be in radians).",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.tan",
            "args":[{
                "name":"x"
              }]
          },
          "cos":{
            "argsDisplay":"x",
            "type":"function",
            "description":"Returns the cosine of x (assumed to be in radians).",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.cos",
            "args":[{
                "name":"x"
              }]
          },
          "log10":{
            "argsDisplay":"x",
            "type":"function",
            "description":"Returns the base-10 logarithm of x.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.log10",
            "args":[{
                "name":"x"
              }]
          },
          "ceil":{
            "argsDisplay":"x",
            "type":"function",
            "description":"Returns the smallest integer larger than or equal to x.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.ceil",
            "args":[{
                "name":"x"
              }]
          },
          "clamp":{
            "type":"function",
            "description":"Returns a value, limited by upper and lower bounds.",
            "args":[{
                "name":"value"
              },{
                "name":"min"
              },{
                "name":"max"
              }],
            "returnTypes":[{
                "type":"number"
              }],
            "argTypes":["number","number","number"]
          },
          "acos":{
            "argsDisplay":"x",
            "type":"function",
            "description":"Returns the arc cosine of x (in radians).",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.acos",
            "args":[{
                "name":"x"
              }]
          },
          "abs":{
            "argsDisplay":"x",
            "type":"function",
            "description":"Returns the absolute value of x.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.abs",
            "args":[{
                "name":"x"
              }]
          },
          "tanh":{
            "argsDisplay":"x",
            "type":"function",
            "description":"Returns the hyperbolic tangent of x.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.tanh",
            "args":[{
                "name":"x"
              }]
          },
          "sinh":{
            "argsDisplay":"x",
            "type":"function",
            "description":"Returns the hyperbolic sine of x.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.sinh",
            "args":[{
                "name":"x"
              }]
          },
          "asin":{
            "argsDisplay":"x",
            "type":"function",
            "description":"Returns the arc sine of x (in radians).",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.asin",
            "args":[{
                "name":"x"
              }]
          },
          "min":{
            "argsDisplay":"x, ···",
            "type":"function",
            "description":"Returns the minimum value among its arguments.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.min",
            "args":[{
                "name":"x"
              }]
          },
          "remap":{
            "type":"function",
            "description":"Returns a value, scaled from expected values [lowIn, highIn] to [lowOut, highOut].\n\nFor example, a value of 7 remapped from [0,10] to [0,100] would be 70.",
            "args":[{
                "name":"value"
              },{
                "name":"lowIn"
              },{
                "name":"highIn"
              },{
                "name":"lowOut"
              },{
                "name":"highOut"
              }],
            "returnTypes":[{
                "type":"number"
              }],
            "argTypes":["number","number","number","number","number"]
          },
          "fmod":{
            "argsDisplay":"x, y",
            "type":"function",
            "description":"Returns the remainder of the division of x by y that rounds the quotient towards zero.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.fmod",
            "args":[{
                "name":"x"
              },{
                "name":"y"
              }]
          },
          "randomseed":{
            "argsDisplay":"x",
            "type":"function",
            "description":"Sets x as the \"seed\" for the pseudo-random generator: equal seeds produce equal sequences of numbers.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.randomseed",
            "args":[{
                "name":"x"
              }]
          },
          "atan2":{
            "argsDisplay":"y, x",
            "type":"function",
            "description":"Returns the arc tangent of y/x (in radians), but uses the signs of both parameters to find the quadrant of the result. (It also handles correctly the case of x being zero.)",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.atan2",
            "args":[{
                "name":"y"
              },{
                "name":"x"
              }]
          },
          "exp":{
            "argsDisplay":"x",
            "type":"function",
            "description":"Returns the value ex.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.exp",
            "args":[{
                "name":"x"
              }]
          },
          "sin":{
            "argsDisplay":"x",
            "type":"function",
            "description":"Returns the sine of x (assumed to be in radians).",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.sin",
            "args":[{
                "name":"x"
              }]
          },
          "deg":{
            "argsDisplay":"x",
            "type":"function",
            "description":"Returns the angle x (given in radians) in degrees.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-math.deg",
            "args":[{
                "name":"x"
              }]
          }
        },
        "type":"table",
        "description":"This library is an interface to the standard C math library. It provides all its functions inside the table math.",
        "link":"https://www.lua.org/manual/5.1/manual.html#5.6"
      },
      "ffi":{
        "fields":{
          "string":{
            "argsDisplay":"ct [, len]",
            "type":"function",
            "description":"Creates an interned Lua string from the data pointed to by ptr. If the optional argument len is missing, ptr is converted to a 'char *' and the data is assumed to be zero-terminated.",
            "link":"https://luajit.org/ext_ffi_api.html#ffi_string",
            "args":[{
                "name":"ptr"
              }]
          },
          "istype":{
            "argsDisplay":"ct, obj",
            "type":"function",
            "description":"Returns true if obj has the C type given by ct. Returns false otherwise.",
            "link":"https://luajit.org/ext_ffi_api.html#ffi_istype",
            "args":[{
                "name":"ct"
              },{
                "name":"obj"
              }]
          },
          "arch":{
            "type":"string",
            "description":"Contains the target architecture name. Same contents as jit.arch.",
            "link":"https://luajit.org/ext_ffi_api.html#ffi_arch"
          },
          "cdef":{
            "argsDisplay":"def",
            "type":"function",
            "description":"Adds multiple C declarations for types or external symbols (named variables or functions).",
            "link":"https://luajit.org/ext_ffi_api.html#ffi_cdef",
            "args":[{
                "name":"def"
              }]
          },
          "cast":{
            "argsDisplay":"ct, init",
            "type":"function",
            "description":"Creates a scalar cdata object for the given ct. The cdata object is initialized with init using the 'cast' variant of the C type conversion rules.",
            "link":"https://luajit.org/ext_ffi_api.html#ffi_cast",
            "args":[{
                "name":"ct"
              },{
                "name":"init"
              }]
          },
          "copy":{
            "variants":[{
                "argsDisplay":"dst, src, len",
                "args":[{
                    "name":"dst"
                  },{
                    "name":"src"
                  },{
                    "name":"len"
                  }],
                "description":"Copies the data pointed to by src to dst. dst is converted to a 'void *' and src is converted to a 'const void *'. The number of bytes to copy is given by len.",
                "link":"https://luajit.org/ext_ffi_api.html#ffi_copy"
              },{
                "argsDisplay":"dst, src",
                "args":[{
                    "name":"dst"
                  },{
                    "name":"src"
                  }],
                "description":"Copies the data pointed to by src to dst. dst is converted to a 'void *' and src is converted to a 'const void *'. The source of the copy must be a Lua string. All bytes of the string plus a zero-terminator are copied to dst.",
                "link":"https://luajit.org/ext_ffi_api.html#ffi_copy"
              }],
            "type":"function"
          },
          "os":{
            "type":"string",
            "description":"Contains the target OS name. Same contents as jit.os.",
            "link":"https://luajit.org/ext_ffi_api.html#ffi_os"
          },
          "typeof":{
            "argsDisplay":"ct",
            "type":"function",
            "description":"Creates a ctype object for the given ct.",
            "link":"https://luajit.org/ext_ffi_api.html#ffi_typeof",
            "args":[{
                "name":"ct"
              }]
          },
          "sizeof":{
            "argsDisplay":"ct [, nelem]",
            "type":"function",
            "description":"Returns the size of ct in bytes. Returns nil if the size is not known (e.g. for 'void' or function types). Requires nelem for VLA/VLS types, except for cdata objects.",
            "link":"https://luajit.org/ext_ffi_api.html#ffi_sizeof",
            "args":[{
                "name":"ct"
              }]
          },
          "metatype":{
            "argsDisplay":"ct, metatable",
            "type":"function",
            "description":"Creates a ctype object for the given ct and associates it with a metatable. Only struct/union types, complex numbers and vectors are allowed.",
            "link":"https://luajit.org/ext_ffi_api.html#ffi_metatype",
            "args":[{
                "name":"ct"
              },{
                "name":"metatable"
              }]
          },
          "gc":{
            "argsDisplay":"cdata, finalizer",
            "type":"function",
            "description":"Associates a finalizer with a pointer or aggregate cdata object. The cdata object is returned unchanged.",
            "link":"https://luajit.org/ext_ffi_api.html#ffi_gc",
            "args":[{
                "name":"cdata"
              },{
                "name":"finalizer"
              }]
          },
          "fill":{
            "argsDisplay":"dst, len, [, c]",
            "type":"function",
            "description":"Fills the data pointed to by dst with len constant bytes, given by c. If c is omitted, the data is zero-filled.",
            "link":"https://luajit.org/ext_ffi_api.html#ffi_fill",
            "args":[{
                "name":"dst"
              },{
                "name":"len"
              }]
          },
          "errno":{
            "argsDisplay":"[newerr]",
            "type":"function",
            "description":"Returns the error number set by the last C function call which indicated an error condition. If the optional newerr argument is present, the error number is set to the new value and the previous value is returned.",
            "link":"https://luajit.org/ext_ffi_api.html#ffi_errno",
            "args":[]
          },
          "alignof":{
            "argsDisplay":"ct",
            "type":"function",
            "description":"Returns the minimum required alignment for ct in bytes.",
            "link":"https://luajit.org/ext_ffi_api.html#ffi_alignof",
            "args":[{
                "name":"ct"
              }]
          },
          "abi":{
            "argsDisplay":"param",
            "type":"function",
            "description":"Returns true if param (a Lua string) applies for the target ABI (Application Binary Interface). Returns false otherwise.",
            "link":"https://luajit.org/ext_ffi_api.html#ffi_abi",
            "args":[{
                "name":"param"
              }]
          },
          "C":{
            "type":"unknown",
            "description":"The default C library namespace. It binds to the default set of symbols or libraries on the target system.",
            "link":"https://luajit.org/ext_ffi_api.html#ffi_C"
          },
          "new":{
            "argsDisplay":"ct [, nelem [, init, ...]]",
            "type":"function",
            "description":"Creates a cdata object for the given C type.",
            "link":"https://luajit.org/ext_ffi_api.html#ffi_new",
            "args":[{
                "name":"ct"
              }]
          },
          "load":{
            "argsDisplay":"name [, global]",
            "type":"function",
            "description":"Loads the dynamic library given by name and returns a new C library namespace which binds to its symbols. On POSIX systems, if global is true, the library symbols are loaded into the global namespace, too.",
            "link":"https://luajit.org/ext_ffi_api.html#ffi_load",
            "args":[{
                "name":"name"
              }]
          },
          "offsetof":{
            "argsDisplay":"ct, field",
            "type":"function",
            "description":"Returns the offset (in bytes) of field relative to the start of ct, which must be a struct. Additionally returns the position and the field size (in bits) for bit fields.",
            "link":"https://luajit.org/ext_ffi_api.html#ffi_offsetof",
            "args":[{
                "name":"ct"
              },{
                "name":"field"
              }]
          }
        },
        "type":"table",
        "description":"The FFI library allows calling external C functions and using C data structures from pure Lua code.",
        "link":"https://luajit.org/ext_ffi_api.html"
      },
      "pcall":{
        "argsDisplay":"f [, arg1, ···]",
        "type":"function",
        "description":"Calls function f with the given arguments in protected mode. This means that any error inside f is not propagated; instead, pcall catches the error and returns a status code. Its first result is the status code (a boolean), which is true if the call succeeds without errors. In such case, pcall also returns all results from the call, after this first result. In case of any error, pcall returns false plus the error message.",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-pcall",
        "args":[{
            "name":"f"
          }]
      },
      "table":{
        "fields":{
          "choice":{
            "type":"function",
            "description":"Returns a random element from the given table.",
            "args":[{
                "name":"t"
              }],
            "returnTypes":[{
                "type":"unknown"
              }],
            "argTypes":["table"]
          },
          "insert":{
            "argsDisplay":"table, [pos,] value",
            "type":"function",
            "description":"Inserts element value at position pos in table, shifting up other elements to open space, if necessary. The default value for pos is n+1, where n is the length of the table (see §2.5.5), so that a call table.insert(t,x) inserts x at the end of table t.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-table.insert",
            "args":[{
                "name":"table"
              }]
          },
          "deepcopy":{
            "type":"function",
            "description":"Copies a table's contents. All subtables will also be copied, as will any metatable.",
            "args":[{
                "name":"t"
              }],
            "returnTypes":[{
                "type":"table"
              }],
            "argTypes":["table"]
          },
          "find":{
            "type":"function",
            "description":"Returns the key for a given value, or nil if the table does not contain the value.",
            "args":[{
                "name":"t"
              },{
                "name":"value"
              }],
            "returnTypes":[{
                "type":"unknown"
              }],
            "argTypes":["table","unknown"]
          },
          "binsearch":{
            "type":"function",
            "description":"Performs a binary search for a given value.\n\nIf the  value is found:\n\tIt returns a table holding all the mathing indices (e.g. { startindice,endindice } )\n\tendindice may be the same as startindice if only one matching indice was found\nIf compval is given:\n\tthen it must be a function that takes one value and returns a second value2,\n\tto be compared with the input value, e.g.:\n\tcompvalue = function( value ) return value[1] end\nIf reversed is set to true:\n\tthen the search assumes that the table is sorted in reverse order (largest value at position 1)\n\tnote when reversed is given compval must be given as well, it can be nil/_ in this case\nReturn value:\n\ton success: a table holding matching indices (e.g. { startindice,endindice } )\n\ton failure: nil",
            "args":[{
                "name":"t"
              },{
                "name":"value"
              },{
                "name":"compval",
                "displayName":"[compval]"
              },{
                "name":"reversed",
                "displayName":"[reversed]"
              }],
            "returnTypes":[{
                "type":"table"
              }],
            "argTypes":["table","unknown","unknown","unknown"]
          },
          "maxn":{
            "argsDisplay":"table",
            "type":"function",
            "description":"Returns the largest positive numerical index of the given table, or zero if the table has no positive numerical indices. (To do its job this function does a linear traversal of the whole table.)",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-table.maxn",
            "args":[{
                "name":"table"
              }]
          },
          "remove":{
            "argsDisplay":"table [, pos]",
            "type":"function",
            "description":"Removes from table the element at position pos, shifting down other elements to close the space, if necessary. Returns the value of the removed element. The default value for pos is n, where n is the length of the table, so that a call table.remove(t) removes the last element of table t.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-table.remove",
            "args":[{
                "name":"table"
              }]
          },
          "sort":{
            "argsDisplay":"table [, comp]",
            "type":"function",
            "description":"Sorts table elements in a given order, in-place, from table[1] to table[n], where n is the length of the table. If comp is given, then it must be a function that receives two table elements, and returns true when the first is less than the second (so that not comp(a[i+1],a[i]) will be true after the sort). If comp is not given, then the standard Lua operator < is used instead.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-table.sort",
            "args":[{
                "name":"table"
              }]
          },
          "removevalue":{
            "type":"function",
            "description":"Removes a value from a given table. Returns true if the value was successfully removed.",
            "args":[{
                "name":"t"
              },{
                "name":"value"
              }],
            "returnTypes":[{
                "type":"boolean"
              }],
            "argTypes":["table","unknown"]
          },
          "copy":{
            "type":"function",
            "description":"Shallowly copies a table's contents to a destination table. If no destination table is provided, a new table will be created. Note that sub tables will not be copied, and will still refer to the same data.",
            "args":[{
                "name":"from"
              },{
                "name":"to",
                "displayName":"[to]"
              }],
            "returnTypes":[{
                "type":"table"
              }],
            "argTypes":["table","table"]
          },
          "bininsert":{
            "type":"function",
            "description":"Inserts a given value through BinaryInsert into the table sorted by [, comp].\n\nIf 'comp' is given, then it must be a function that receives two table elements, and returns true when the first is less than the second, e.g. comp = function(a, b) return a > b end, will give a sorted table, with the biggest value on position 1. [, comp] behaves as in table.sort(table, value [, comp]) returns the index where 'value' was inserted",
            "args":[{
                "name":"t"
              },{
                "name":"value"
              },{
                "name":"comp",
                "displayName":"[comp]"
              }],
            "returnTypes":[{
                "type":"number"
              }],
            "argTypes":["table","unknown","unknown"]
          },
          "concat":{
            "argsDisplay":"table [, sep [, i [, j]]]",
            "type":"function",
            "description":"Given an array where all elements are strings or numbers, returns table[i]..sep..table[i+1] ··· sep..table[j]. The default value for sep is the empty string, the default for i is 1, and the default for j is the length of the table. If i is greater than j, returns the empty string.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-table.concat",
            "args":[{
                "name":"table"
              }]
          },
          "size":{
            "type":"function",
            "description":"Returns the number of elements inside the table. Unlike the length operator (#) this will work with any table.",
            "args":[{
                "name":"t"
              }],
            "returnTypes":[{
                "type":"number"
              }],
            "argTypes":["table"]
          }
        },
        "type":"table",
        "description":"This library provides generic functions for table manipulation. It provides all its functions inside the table table.",
        "link":"https://www.lua.org/manual/5.1/manual.html#5.5"
      },
      "include":{
        "type":"function",
        "description":"Loads the given module. The function starts by looking into the package.loaded table to determine whether modname is already loaded. If it is, then require returns the value stored at package.loaded[modname]. Otherwise, it tries to find a loader for the module. If no module could be found, it returns nil instead of erroring.",
        "args":[{
            "name":"modname"
          }],
        "returnTypes":[{
            "type":"table"
          }],
        "argTypes":["string"]
      },
      "type":{
        "argsDisplay":"v",
        "type":"function",
        "description":"Returns the type of its only argument, coded as a string. The possible results of this function are \"nil\" (a string, not the value nil), \"number\", \"string\", \"boolean\", \"table\", \"function\", \"thread\", and \"userdata\".",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-type",
        "args":[{
            "name":"v"
          }]
      },
      "debug":{
        "fields":{
          "getupvalue":{
            "argsDisplay":"f, up",
            "type":"function",
            "description":"This function returns the name and the value of the upvalue with index up of the function f. The function returns nil if there is no upvalue with the given index.",
            "link":"https://www.lua.org/manual/5.2/manual.html#pdf-debug.getupvalue",
            "args":[{
                "name":"f"
              },{
                "name":"up"
              }]
          },
          "setfenv":{
            "argsDisplay":"object, table",
            "type":"function",
            "description":"Sets the environment of the given object to the given table. Returns object.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-debug.setfenv",
            "args":[{
                "name":"object"
              },{
                "name":"table"
              }]
          },
          "debug":{
            "argsDisplay":"",
            "type":"function",
            "description":"Enters an interactive mode with the user, running each string that the user enters. Using simple commands and other debug facilities, the user can inspect global and local variables, change their values, evaluate expressions, and so on. A line containing only the word cont finishes this function, so that the caller continues its execution.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-debug.debug",
            "args":[]
          },
          "setlocal":{
            "argsDisplay":"[thread,] level, local, value",
            "type":"function",
            "description":"This function assigns the value value to the local variable with index local of the function at level level of the stack. The function returns nil if there is no local variable with the given index, and raises an error when called with a level out of range. (You can call getinfo to check whether the level is valid.) Otherwise, it returns the name of the local variable.",
            "link":"https://www.lua.org/manual/5.2/manual.html#pdf-debug.setlocal",
            "args":[]
          },
          "sethook":{
            "argsDisplay":"[thread,] hook, mask [, count]",
            "type":"function",
            "description":"Sets the given function as a hook. The string mask and the number count describe when the hook will be called. The string mask may have the following characters, with the given meaning:",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-debug.sethook",
            "args":[]
          },
          "getregistry":{
            "argsDisplay":"",
            "type":"function",
            "description":"Returns the registry table (see §3.5).",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-debug.getregistry",
            "args":[]
          },
          "gethook":{
            "argsDisplay":"[thread]",
            "type":"function",
            "description":"Returns the current hook settings of the thread, as three values: the current hook function, the current hook mask, and the current hook count (as set by the debug.sethook function).",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-debug.gethook",
            "args":[]
          },
          "setmetatable":{
            "argsDisplay":"object, table",
            "type":"function",
            "description":"Sets the metatable for the given object to the given table (which can be nil).",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-debug.setmetatable",
            "args":[{
                "name":"object"
              },{
                "name":"table"
              }]
          },
          "upvalueid":{
            "argsDisplay":"f, n",
            "type":"function",
            "description":"Returns an unique identifier (as a light userdata) for the upvalue numbered n from the given function.",
            "link":"https://www.lua.org/manual/5.2/manual.html#pdf-debug.upvalueid",
            "args":[{
                "name":"f"
              },{
                "name":"n"
              }]
          },
          "traceback":{
            "argsDisplay":"[thread,] [message [, level]]",
            "type":"function",
            "description":"Returns a string with a traceback of the call stack. An optional message string is appended at the beginning of the traceback. An optional level number tells at which level to start the traceback (default is 1, the function calling traceback).",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-debug.traceback",
            "args":[]
          },
          "upvaluejoin":{
            "argsDisplay":"f1, n1, f2, n2",
            "type":"function",
            "description":"Make the n1-th upvalue of the Lua closure f1 refer to the n2-th upvalue of the Lua closure f2.",
            "link":"https://www.lua.org/manual/5.2/manual.html#pdf-debug.upvaluejoin",
            "args":[{
                "name":"f1"
              },{
                "name":"n1"
              },{
                "name":"f2"
              },{
                "name":"n2"
              }]
          },
          "getinfo":{
            "argsDisplay":"[thread,] f [, what]",
            "type":"function",
            "description":"Returns a table with information about a function. You can give the function directly or you can give a number as the value of f, which means the function running at level f of the call stack of the given thread: level 0 is the current function (getinfo itself); level 1 is the function that called getinfo (except for tail calls, which do not count on the stack); and so on. If f is a number larger than the number of active functions, then getinfo returns nil.",
            "link":"https://www.lua.org/manual/5.2/manual.html#pdf-debug.getinfo",
            "args":[]
          },
          "setupvalue":{
            "argsDisplay":"func, up, value",
            "type":"function",
            "description":"This function assigns the value value to the upvalue with index up of the function func. The function returns nil if there is no upvalue with the given index. Otherwise, it returns the name of the upvalue.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-debug.setupvalue",
            "args":[{
                "name":"func"
              },{
                "name":"up"
              },{
                "name":"value"
              }]
          },
          "getlocal":{
            "argsDisplay":"[thread,] f, local",
            "type":"function",
            "description":"This function returns the name and the value of the local variable with index local of the function at level f of the stack. This function accesses not only explicit local variables, but also parameters, temporaries, etc.",
            "link":"https://www.lua.org/manual/5.2/manual.html#pdf-debug.getlocal",
            "args":[]
          },
          "getmetatable":{
            "argsDisplay":"object",
            "type":"function",
            "description":"Returns the metatable of the given object or nil if it does not have a metatable.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-debug.getmetatable",
            "args":[{
                "name":"object"
              }]
          },
          "getfenv":{
            "argsDisplay":"o",
            "type":"function",
            "description":"Returns the environment of object o.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-debug.getfenv",
            "args":[{
                "name":"o"
              }]
          }
        },
        "type":"table",
        "description":"This library provides the functionality of the debug interface to Lua programs. You should exert care when using this library. The functions provided here should be used exclusively for debugging and similar tasks, such as profiling. Please resist the temptation to use them as a usual programming tool: they can be very slow. Moreover, several of these functions violate some assumptions about Lua code (e.g., that variables local to a function cannot be accessed from outside or that userdata metatables cannot be changed by Lua code) and therefore can compromise otherwise secure code.",
        "link":"https://www.lua.org/manual/5.1/manual.html#5.9"
      },
      "coroutine":{
        "fields":{
          "running":{
            "argsDisplay":"",
            "type":"function",
            "description":"Returns the running coroutine, or nil when called by the main thread.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.running",
            "args":[]
          },
          "yield":{
            "argsDisplay":"···",
            "type":"function",
            "description":"Suspends the execution of the calling coroutine. The coroutine cannot be running a C function, a metamethod, or an iterator. Any arguments to yield are passed as extra results to resume.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.yield",
            "args":[]
          },
          "status":{
            "argsDisplay":"co",
            "type":"function",
            "description":"Returns the status of coroutine co, as a string: \"running\", if the coroutine is running (that is, it called status); \"suspended\", if the coroutine is suspended in a call to yield, or if it has not started running yet; \"normal\" if the coroutine is active but not running (that is, it has resumed another coroutine); and \"dead\" if the coroutine has finished its body function, or if it has stopped with an error.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.status",
            "args":[{
                "name":"co"
              }]
          },
          "wrap":{
            "argsDisplay":"f",
            "type":"function",
            "description":"Creates a new coroutine, with body f. f must be a Lua function. Returns a function that resumes the coroutine each time it is called. Any arguments passed to the function behave as the extra arguments to resume. Returns the same values returned by resume, except the first boolean. In case of error, propagates the error.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.wrap",
            "args":[{
                "name":"f"
              }]
          },
          "create":{
            "argsDisplay":"f",
            "type":"function",
            "description":"Creates a new coroutine, with body f. f must be a Lua function. Returns this new coroutine, an object with type \"thread\".",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.create",
            "args":[{
                "name":"f"
              }]
          },
          "resume":{
            "argsDisplay":"co [, val1, ···]",
            "type":"function",
            "description":"Starts or continues the execution of coroutine co. The first time you resume a coroutine, it starts running its body. The values val1, ··· are passed as the arguments to the body function. If the coroutine has yielded, resume restarts it; the values val1, ··· are passed as the results from the yield.",
            "link":"https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.resume",
            "args":[{
                "name":"co"
              }]
          }
        },
        "type":"table",
        "description":"The operations related to coroutines comprise a sub-library of the basic library and come inside the table coroutine. See §2.11 for a general description of coroutines.",
        "link":"https://www.lua.org/manual/5.1/manual.html#5.2"
      },
      "select":{
        "argsDisplay":"index, ···",
        "type":"function",
        "description":"If index is a number, returns all arguments after argument number index. Otherwise, index must be the string \"#\", and select returns the total number of extra arguments it received.",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-select",
        "args":[{
            "name":"index"
          }]
      },
      "_VERSION":{
        "type":"string",
        "description":"A global variable (not a function) that holds a string containing the current interpreter version. The current contents of this variable is \"Lua 5.1\".",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-_VERSION"
      },
      "bit":{
        "fields":{
          "band":{
            "argsDisplay":"x1, [, x2, ...]",
            "type":"function",
            "description":"Returns the bitwise and of all of its arguments.",
            "link":"https://bitop.luajit.org/api.html#bor",
            "args":[{
                "name":"x1"
              }]
          },
          "rshift":{
            "argsDisplay":"x, n",
            "type":"function",
            "description":"Returns the bitwise logical right-shift of its first argument by the number of bits given by the second argument.",
            "link":"https://bitop.luajit.org/api.html#lshift",
            "args":[{
                "name":"x"
              },{
                "name":"n"
              }]
          },
          "bor":{
            "argsDisplay":"x1, [, x2, ...]",
            "type":"function",
            "description":"Returns the bitwise or of all of its arguments.",
            "link":"https://bitop.luajit.org/api.html#bor",
            "args":[{
                "name":"x1"
              }]
          },
          "bnot":{
            "argsDisplay":"x",
            "type":"function",
            "description":"Returns the bitwise not of its argument.",
            "link":"https://bitop.luajit.org/api.html#bnot",
            "args":[{
                "name":"x"
              }]
          },
          "bswap":{
            "argsDisplay":"x",
            "type":"function",
            "description":"Swaps the bytes of its argument and returns it.",
            "link":"https://bitop.luajit.org/api.html#bswap",
            "args":[{
                "name":"x"
              }]
          },
          "bxor":{
            "argsDisplay":"x1, [, x2, ...]",
            "type":"function",
            "description":"Returns the bitwise xor of all of its arguments.",
            "link":"https://bitop.luajit.org/api.html#bor",
            "args":[{
                "name":"x1"
              }]
          },
          "tobit":{
            "argsDisplay":"x",
            "type":"function",
            "description":"Normalizes a number to the numeric range for bit operations and returns it.",
            "link":"https://bitop.luajit.org/api.html#tobit",
            "args":[{
                "name":"x"
              }]
          },
          "ror":{
            "argsDisplay":"x, n",
            "type":"function",
            "description":"Returns either the bitwise right rotation of its first argument by the number of bits given by the second argument. Bits shifted out on one side are shifted back in on the other side.",
            "link":"https://bitop.luajit.org/api.html#rol",
            "args":[{
                "name":"x"
              },{
                "name":"n"
              }]
          },
          "lshift":{
            "argsDisplay":"x, n",
            "type":"function",
            "description":"Returns the bitwise logical left-shift of its first argument by the number of bits given by the second argument.",
            "link":"https://bitop.luajit.org/api.html#lshift",
            "args":[{
                "name":"x"
              },{
                "name":"n"
              }]
          },
          "tohex":{
            "argsDisplay":"x [, n]",
            "type":"function",
            "description":"Converts its first argument to a hex string.",
            "link":"https://bitop.luajit.org/api.html#tohex",
            "args":[{
                "name":"x"
              }]
          },
          "arshift":{
            "argsDisplay":"x, n",
            "type":"function",
            "description":"Returns the bitwise arithmetic right-shift of its first argument by the number of bits given by the second argument.",
            "link":"https://bitop.luajit.org/api.html#lshift",
            "args":[{
                "name":"x"
              },{
                "name":"n"
              }]
          },
          "rol":{
            "argsDisplay":"x, n",
            "type":"function",
            "description":"Returns either the bitwise left rotation of its first argument by the number of bits given by the second argument. Bits shifted out on one side are shifted back in on the other side.",
            "link":"https://bitop.luajit.org/api.html#rol",
            "args":[{
                "name":"x"
              },{
                "name":"n"
              }]
          }
        },
        "type":"table",
        "description":"This library provides bitwise operations. It provides all its functions inside the table bit.",
        "link":"https://bitop.luajit.org/"
      },
      "rawget":{
        "argsDisplay":"table, index",
        "type":"function",
        "description":"Gets the real value of table[index], without invoking any metamethod. table must be a table; index may be any value.",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-rawget",
        "args":[{
            "name":"table"
          },{
            "name":"index"
          }]
      },
      "loadstring":{
        "argsDisplay":"ld [, source [, mode [, env]]]",
        "type":"function",
        "description":"An alias for string.",
        "link":"https://www.lua.org/manual/5.2/manual.html#pdf-load",
        "args":[{
            "name":"ld"
          }]
      },
      "tonumber":{
        "argsDisplay":"e [, base]",
        "type":"function",
        "description":"Tries to convert its argument to a number. If the argument is already a number or a string convertible to a number, then tonumber returns this number; otherwise, it returns nil.",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-tonumber",
        "args":[{
            "name":"e"
          }]
      },
      "setmetatable":{
        "argsDisplay":"table, metatable",
        "type":"function",
        "description":"Sets the metatable for the given table. (You cannot change the metatable of other types from Lua, only from C.) If metatable is nil, removes the metatable of the given table. If the original metatable has a \"__metatable\" field, raises an error.",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-setmetatable",
        "args":[{
            "name":"table"
          },{
            "name":"metatable"
          }]
      },
      "dofile":{
        "argsDisplay":"[filename]",
        "type":"function",
        "description":"Opens the named file and executes its contents as a Lua chunk. When called without arguments, dofile executes the contents of the standard input (stdin). Returns all values returned by the chunk. In case of errors, dofile propagates the error to its caller (that is, dofile does not run in protected mode).",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-dofile",
        "args":[]
      },
      "setfenv":{
        "argsDisplay":"f, table",
        "type":"function",
        "description":"Sets the environment to be used by the given function. f can be a Lua function or a number that specifies the function at that stack level: Level 1 is the function calling setfenv. setfenv returns the given function.",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-setfenv",
        "args":[{
            "name":"f"
          },{
            "name":"table"
          }]
      },
      "getmetatable":{
        "argsDisplay":"object",
        "type":"function",
        "description":"If object does not have a metatable, returns nil. Otherwise, if the object's metatable has a \"__metatable\" field, returns the associated value. Otherwise, returns the metatable of the given object.",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-getmetatable",
        "args":[{
            "name":"object"
          }]
      },
      "error":{
        "argsDisplay":"message [, level]",
        "type":"function",
        "description":"Terminates the last protected function called and returns message as the error message. Function error never returns.",
        "link":"https://www.lua.org/manual/5.1/manual.html#pdf-error",
        "args":[{
            "name":"message"
          }]
      },
      "loadfile":{
        "argsDisplay":"[filename [, mode [, env]]]",
        "type":"function",
        "description":"Similar to load, but gets the chunk from file filename or from the standard input, if no file name is given.",
        "link":"https://www.lua.org/manual/5.2/manual.html#pdf-loadfile",
        "args":[]
      }
    },
    "type":"table"
  },
  "namedTypes":{
    "tes3bodyPart":{
      "type":"table",
      "description":"A body part game object.",
      "fields":{
        "female":{
          "description":"A flag that marks this body part as used for female actors.",
          "type":"boolean"
        },
        "sceneNode":{
          "type":"ref",
          "description":"The NiNode-derived object for the object's loaded mesh.",
          "name":"tes3node"
        },
        "vampiric":{
          "description":"A flag that marks this body part as used for vampires.",
          "type":"boolean"
        },
        "raceName":{
          "description":"The name of the race associated with this body part.",
          "type":"string"
        },
        "part":{
          "type":"number"
        },
        "partType":{
          "type":"number"
        },
        "mesh":{
          "description":"The path to the object's mesh.",
          "type":"string"
        },
        "playable":{
          "description":"A flag that marks this body part as selectable during character generation.",
          "type":"boolean"
        }
      }
    },
    "tes3vector4":{
      "fields":{
        "y":{
          "description":"The second value in the vector.",
          "type":"number"
        },
        "x":{
          "description":"The first value in the vector.",
          "type":"number"
        },
        "w":{
          "description":"The fourth value in the vector.",
          "type":"number"
        },
        "z":{
          "description":"The third value in the vector.",
          "type":"number"
        }
      },
      "type":"table",
      "description":"A set of 4 floating-point numbers.",
      "metatable":{
        "fields":{
          "__index":{
            "fields":{
              "copy":{
                "type":"function",
                "description":"Creates a copy of the vector.",
                "args":[{
                    "name":"self"
                  }]
              }
            },
            "type":"table"
          }
        },
        "type":"table"
      }
    },
    "mwseTimer":{
      "metatable":{
        "fields":{
          "__index":{
            "fields":{
              "cancel":{
                "type":"function",
                "description":"Cancels the timer.",
                "args":[{
                    "name":"self"
                  }]
              },
              "pause":{
                "type":"function",
                "description":"Pauses the timer.",
                "args":[{
                    "name":"self"
                  }]
              },
              "reset":{
                "type":"function",
                "description":"Resets the timer completion time, as if it elapsed. Only works if the timer is active.",
                "args":[{
                    "name":"self"
                  }]
              }
            },
            "type":"table"
          }
        },
        "type":"table"
      },
      "type":"table",
      "description":"A Timer is a class used to keep track of callback that should be invoked at a later time.",
      "fields":{
        "state":{
          "description":"The state of the timer, matching timer.active, timer.paused, or timer.expired.",
          "type":"number"
        },
        "iterations":{
          "description":"The amount of iterations left for the timer.",
          "type":"number"
        },
        "timing":{
          "description":"When this timer ends, or the time remaining if the timer is paused.",
          "type":"number"
        },
        "duration":{
          "description":"The amount of time left on the timer.",
          "type":"number"
        },
        "callback":{
          "description":"The callback that will be invoked when the timer elapses.",
          "type":"function"
        },
        "timeLeft":{
          "description":"The amount of time left before this timer will complete.",
          "type":"number"
        }
      }
    },
    "tes3actionData":{
      "type":"table",
      "description":"A substructure of mobile actors that provides information about the current or previous action.",
      "fields":{
        "attackDirection":{
          "type":"number"
        },
        "lastBarterHoursPassed":{
          "type":"number"
        },
        "stolenFrom":{
          "name":"tes3object",
          "type":"ref"
        },
        "walkDestination":{
          "name":"tes3vector3",
          "type":"ref"
        },
        "aiBehaviorState":{
          "type":"number"
        },
        "target":{
          "name":"tes3mobileActor",
          "type":"ref"
        },
        "physicalDamage":{
          "type":"number"
        },
        "animationAttackState":{
          "type":"number"
        },
        "currentAnimationGroup":{
          "type":"number"
        },
        "hitTarget":{
          "name":"tes3mobileActor",
          "type":"ref"
        },
        "attackSwing":{
          "type":"number"
        },
        "nockedProjectile":{
          "name":"tes3weapon",
          "type":"ref"
        }
      }
    },
    "niRTTI":{
      "type":"table",
      "description":"Runtime type information for NetImmerse structures.",
      "fields":{
        "name":{
          "description":"The human readable name for the type.",
          "type":"string"
        },
        "parent":{
          "type":"ref",
          "description":"The runtime type information that this type derives from.",
          "name":"niRTTI"
        }
      }
    },
    "tes3alchemy":{
      "type":"table",
      "description":"An activator game object.",
      "fields":{
        "deleted":{
          "description":"The deleted state of the object.",
          "type":"boolean"
        },
        "disabled":{
          "description":"The disabled state of the object.",
          "type":"boolean"
        },
        "modified":{
          "description":"The modification state of the object since the last save.",
          "type":"boolean"
        },
        "sourceMod":{
          "description":"The filename of the mod that owns this object.",
          "type":"string"
        },
        "weight":{
          "description":"The weight, in pounds, of the object.",
          "type":"number"
        },
        "value":{
          "description":"The value of the object.",
          "type":"number"
        },
        "objectType":{
          "description":"The type of object. Maps to values in tes3.objectType.",
          "type":"number"
        },
        "mesh":{
          "description":"The path to the object's mesh.",
          "type":"string"
        },
        "boundingBox":{
          "type":"ref",
          "description":"The bounding box for the object.",
          "name":"tes3boundingBox"
        },
        "sceneGraphReference":{
          "type":"ref",
          "description":"The scene graph reference node for this object.",
          "name":"niNode"
        },
        "sceneNode":{
          "type":"ref",
          "description":"The scene graph node for this object.",
          "name":"niNode"
        },
        "script":{
          "type":"ref",
          "description":"The script that runs on the object.",
          "name":"tes3script"
        },
        "previousInCollection":{
          "type":"ref",
          "description":"The previous object in parent collection's list.",
          "name":"tes3object"
        },
        "id":{
          "description":"The unique identifier for the object.",
          "type":"string"
        },
        "effects":{
          "description":"An array-style table of the tes3effect data on the object.",
          "type":"table"
        },
        "autoCalc":{
          "description":"If set, the value of the object is automatically calculated.",
          "type":"boolean"
        },
        "name":{
          "description":"The player-facing name for the object.",
          "type":"string"
        },
        "icon":{
          "description":"The path to the object's icon.",
          "type":"string"
        },
        "owningCollection":{
          "type":"ref",
          "description":"The collection responsible for holding this object.",
          "name":"tes3referenceList"
        },
        "nextInCollection":{
          "type":"ref",
          "description":"The next object in parent collection's list.",
          "name":"tes3object"
        },
        "objectFlags":{
          "description":"The raw flags of the object.",
          "type":"number"
        },
        "scale":{
          "description":"The object's scale.",
          "type":"number"
        }
      }
    },
    "tes3vector2":{
      "fields":{
        "y":{
          "description":"The second value in the vector.",
          "type":"number"
        },
        "x":{
          "description":"The first value in the vector.",
          "type":"number"
        }
      },
      "type":"table",
      "description":"A simple pair of floating-point numbers.",
      "metatable":{
        "fields":{
          "__index":{
            "fields":{
              "copy":{
                "type":"function",
                "description":"Creates a copy of the vector.",
                "args":[{
                    "name":"self"
                  }]
              }
            },
            "type":"table"
          }
        },
        "type":"table"
      }
    },
    "tes3travelDestinationNode":{
      "type":"table",
      "description":"An attachment-capable structure that manages travel destinations.",
      "fields":{
        "marker":{
          "type":"ref",
          "description":"The reference door marker that the destination places the traveling actor at.",
          "name":"tes3reference"
        },
        "cell":{
          "type":"ref",
          "description":"The destination cell.",
          "name":"tes3cell"
        }
      }
    },
    "niObjectNET":{
      "metatable":{
        "fields":{
          "__index":{
            "fields":{
              "removeController":{
                "type":"function",
                "description":"Removes a controller from the object.",
                "args":[{
                    "name":"self"
                  },{
                    "name":"type"
                  }],
                "argTypes":["niTimeController"]
              },
              "removeAllControllers":{
                "type":"function",
                "description":"Removes all controllers.",
                "args":[{
                    "name":"self"
                  }]
              },
              "prependController":{
                "type":"function",
                "description":"Add a controller to the object as the first controller.",
                "args":[{
                    "name":"self"
                  },{
                    "name":"type"
                  }],
                "argTypes":["niTimeController"]
              }
            },
            "type":"table"
          }
        },
        "type":"table"
      },
      "fields":{
        "runTimeTypeInformation":{
          "type":"ref",
          "description":"The runtime type information for this object.",
          "name":"niRTTI"
        },
        "name":{
          "description":"The human-facing name of the given object.",
          "type":"string"
        },
        "references":{
          "description":"The number of references that exist for the given object. When this value hits zero, the object's memory is freed.",
          "type":"string"
        }
      },
      "description":"An object that has a name, extra data, and controllers.",
      "type":"table"
    },
    "mwseTimerController":{
      "metatable":{
        "fields":{
          "__index":{
            "fields":{
              "create":{
                "type":"function",
                "description":"Creates a timer for the given Timer Controller.\n\nAccepts parameters through a table with the given keys:\n * (type: number)\n * (duration: number)\n * (callback: function)\n * (iterations: number) Optional.",
                "args":[{
                    "name":"self"
                  },{
                    "name":"params",
                    "type":"table"
                  }],
                "returnTypes":[{
                    "name":"mwseTimer",
                    "type":"ref"
                  }],
                "argTypes":["table"]
              }
            },
            "type":"table"
          }
        },
        "type":"table"
      },
      "type":"table",
      "description":"A Timer Controller is a class used to sort and trigger callbacks based on an arbitrary timekeeping mechanic.",
      "fields":{
        "clock":{
          "description":"The current clock time for this timer controller.",
          "type":"number"
        },
        "new":{
          "type":"function",
          "description":"Creates a new Timer Controller. Its initial clock is zero, unless a start time is provided.",
          "args":[{
              "name":"startTime",
              "displayName":"[startTime]"
            }],
          "returnTypes":[{
              "name":"mwseTimerController",
              "type":"ref"
            }],
          "argTypes":["number"]
        }
      }
    },
    "tes3baseObject":{
      "type":"table",
      "description":"Almost anything that can be represented in the Construction Set is based on this structure.",
      "fields":{
        "deleted":{
          "description":"The deleted state of the object.",
          "type":"boolean"
        },
        "disabled":{
          "description":"The disabled state of the object.",
          "type":"boolean"
        },
        "sourceMod":{
          "description":"The filename of the mod that owns this object.",
          "type":"string"
        },
        "id":{
          "description":"The unique identifier for the object.",
          "type":"string"
        },
        "objectType":{
          "description":"The type of object. Maps to values in tes3.objectType.",
          "type":"number"
        },
        "objectFlags":{
          "description":"The raw flags of the object.",
          "type":"number"
        },
        "modified":{
          "description":"The modification state of the object since the last save.",
          "type":"boolean"
        }
      }
    },
    "tes3armor":{
      "metatable":{
        "fields":{
          "__index":{
            "fields":{
              "calculateArmorRating":{
                "type":"function",
                "description":"Calculates what armor rating is provided for a given mobile actor.",
                "args":[{
                    "name":"self"
                  },{
                    "name":"mobile"
                  }],
                "argTypes":["tes3mobileActor"]
              }
            },
            "type":"table"
          }
        },
        "type":"table"
      },
      "type":"table",
      "description":"An activator game object.",
      "fields":{
        "deleted":{
          "description":"The deleted state of the object.",
          "type":"boolean"
        },
        "disabled":{
          "description":"The disabled state of the object.",
          "type":"boolean"
        },
        "modified":{
          "description":"The modification state of the object since the last save.",
          "type":"boolean"
        },
        "sourceMod":{
          "description":"The filename of the mod that owns this object.",
          "type":"string"
        },
        "enchantment":{
          "type":"ref",
          "description":"The enchantment used by the object.",
          "name":"tes3enchantment"
        },
        "parts":{
          "description":"An array-style table of the tes3wearablePart data on the object.",
          "type":"table"
        },
        "icon":{
          "description":"The path to the object's icon.",
          "type":"string"
        },
        "isLeftPart":{
          "description":"Determines if the armor is the left part of a pair.",
          "type":"boolean"
        },
        "weight":{
          "description":"The weight, in pounds, of the object.",
          "type":"number"
        },
        "value":{
          "description":"The value of the object.",
          "type":"number"
        },
        "objectType":{
          "description":"The type of object. Maps to values in tes3.objectType.",
          "type":"number"
        },
        "mesh":{
          "description":"The path to the object's mesh.",
          "type":"string"
        },
        "boundingBox":{
          "type":"ref",
          "description":"The bounding box for the object.",
          "name":"tes3boundingBox"
        },
        "sceneGraphReference":{
          "type":"ref",
          "description":"The scene graph reference node for this object.",
          "name":"niNode"
        },
        "sceneNode":{
          "type":"ref",
          "description":"The scene graph node for this object.",
          "name":"niNode"
        },
        "script":{
          "type":"ref",
          "description":"The script that runs on the object.",
          "name":"tes3script"
        },
        "previousInCollection":{
          "type":"ref",
          "description":"The previous object in parent collection's list.",
          "name":"tes3object"
        },
        "id":{
          "description":"The unique identifier for the object.",
          "type":"string"
        },
        "armorRating":{
          "description":"The armor's defensive rating.",
          "type":"number"
        },
        "enchantCapacity":{
          "description":"The object's enchantment capacity.",
          "type":"number"
        },
        "maxCondition":{
          "description":"The object's maximum condition.",
          "type":"number"
        },
        "slotName":{
          "description":"The name of the slot used by the armor.",
          "type":"string"
        },
        "slot":{
          "description":"The slot used by the armor.",
          "type":"number"
        },
        "name":{
          "description":"The player-facing name for the object.",
          "type":"string"
        },
        "weightClass":{
          "description":"The weight, in pounds, of the object.",
          "type":"number"
        },
        "owningCollection":{
          "type":"ref",
          "description":"The collection responsible for holding this object.",
          "name":"tes3referenceList"
        },
        "nextInCollection":{
          "type":"ref",
          "description":"The next object in parent collection's list.",
          "name":"tes3object"
        },
        "objectFlags":{
          "description":"The raw flags of the object.",
          "type":"number"
        },
        "scale":{
          "description":"The object's scale.",
          "type":"number"
        }
      }
    },
    "tes3wearablePart":{
      "type":"table",
      "description":"A container class that maps a body part id to its male and female body parts.",
      "fields":{
        "female":{
          "type":"ref",
          "description":"The body part object used for female actors.",
          "name":"tes3bodyPart"
        },
        "type":{
          "type":"number"
        },
        "male":{
          "type":"ref",
          "description":"The body part object used for male actors.",
          "name":"tes3bodyPart"
        }
      }
    },
    "tes3reference":{
      "type":"table",
      "description":"A reference is a sort of container structure for objects. It holds a base object, as well as various variables associated with that object that make it unique.\n\nFor example, many doors may share the same base object. However, each door reference might have a different owner, different lock/trap statuses, etc. that make the object unique.",
      "fields":{
        "deleted":{
          "description":"The deleted state of the object.",
          "type":"boolean"
        },
        "sceneNode":{
          "type":"ref",
          "description":"The scene graph node for this object.",
          "name":"niNode"
        },
        "disabled":{
          "description":"The disabled state of the object.",
          "type":"boolean"
        },
        "previousInCollection":{
          "type":"ref",
          "description":"The previous object in parent collection's list.",
          "name":"tes3object"
        },
        "objectFlags":{
          "description":"The raw flags of the object.",
          "type":"number"
        },
        "sourceMod":{
          "description":"The filename of the mod that owns this object.",
          "type":"string"
        },
        "cell":{
          "type":"ref",
          "description":"The cell that the reference is currently in.",
          "name":"tes3cell"
        },
        "id":{
          "description":"The unique identifier for the object.",
          "type":"string"
        },
        "modified":{
          "description":"The modification state of the object since the last save.",
          "type":"boolean"
        },
        "objectType":{
          "description":"The type of object. Maps to values in tes3.objectType.",
          "type":"number"
        },
        "owningCollection":{
          "type":"ref",
          "description":"The collection responsible for holding this object.",
          "name":"tes3referenceList"
        },
        "nextInCollection":{
          "type":"ref",
          "description":"The next object in parent collection's list.",
          "name":"tes3object"
        },
        "scale":{
          "description":"The object's scale.",
          "type":"number"
        },
        "sceneGraphReference":{
          "type":"ref",
          "description":"The scene graph reference node for this object.",
          "name":"niNode"
        }
      }
    },
    "tes3cell":{
      "metatable":{
        "fields":{
          "__index":{
            "fields":{
              "iterateReferences":{
                "type":"function",
                "description":"Used in a for loop, iterates over objects in the cell.",
                "args":[{
                    "name":"self"
                  },{
                    "name":"filter",
                    "displayName":"[filter]"
                  }],
                "argTypes":["number"]
              }
            },
            "type":"table"
          }
        },
        "type":"table"
      },
      "type":"table",
      "description":"An exterior or interior game area.",
      "fields":{
        "deleted":{
          "description":"The deleted state of the object.",
          "type":"boolean"
        },
        "fogColor":{
          "type":"ref",
          "description":"The cell's fog color. Only available on interior cells.",
          "name":"tes3packedColor"
        },
        "modified":{
          "description":"The modification state of the object since the last save.",
          "type":"boolean"
        },
        "sourceMod":{
          "description":"The filename of the mod that owns this object.",
          "type":"string"
        },
        "restingIsIllegal":{
          "description":"If true, the player may not rest in the cell.",
          "type":"boolean"
        },
        "objectType":{
          "description":"The type of object. Maps to values in tes3.objectType.",
          "type":"number"
        },
        "isInterior":{
          "description":"If true, the cell is an interior.",
          "type":"boolean"
        },
        "behavesAsExterior":{
          "description":"If true, the cell behaves as an exterior instead of an interior for certain properties.",
          "type":"boolean"
        },
        "region":{
          "type":"ref",
          "description":"The region associated with the cell.",
          "name":"tes3region"
        },
        "id":{
          "description":"The unique identifier for the object.",
          "type":"string"
        },
        "hasWater":{
          "description":"If true, the cell has water. Only applies to interior cells.",
          "type":"boolean"
        },
        "ambientColor":{
          "type":"ref",
          "description":"The cell's ambient color. Only available on interior cells.",
          "name":"tes3packedColor"
        },
        "sunColor":{
          "type":"ref",
          "description":"The cell's sun color. Only available on interior cells.",
          "name":"tes3packedColor"
        },
        "gridY":{
          "description":"The cell's Y grid coordinate. Only available on exterior cells.",
          "type":"number"
        },
        "name":{
          "description":"The name and id of the cell.",
          "type":"string"
        },
        "gridX":{
          "description":"The cell's X grid coordinate. Only available on exterior cells.",
          "type":"number"
        },
        "disabled":{
          "description":"The disabled state of the object.",
          "type":"boolean"
        },
        "objectFlags":{
          "description":"The raw flags of the object.",
          "type":"number"
        },
        "waterLevel":{
          "description":"The water level in the cell.",
          "type":"number"
        },
        "fogDensity":{
          "description":"The cell's fog density. Only available on interior cells.",
          "type":"number"
        }
      }
    },
    "tes3packedColor":{
      "type":"table",
      "description":"A densely packed structure for single-byte red, green, blue and alpha values.",
      "fields":{
        "a":{
          "description":"The alpha color value.",
          "type":"number"
        },
        "r":{
          "description":"The red color value.",
          "type":"number"
        },
        "g":{
          "description":"The green color value.",
          "type":"number"
        },
        "b":{
          "description":"The blue color value.",
          "type":"number"
        }
      }
    },
    "tes3vector3":{
      "metatable":{
        "fields":{
          "__index":{
            "fields":{
              "copy":{
                "type":"function",
                "description":"Creates a copy of the vector.",
                "args":[{
                    "name":"self"
                  }]
              },
              "negate":{
                "type":"function",
                "description":"Negates all values in the vector.",
                "args":[{
                    "name":"self"
                  }]
              },
              "cross":{
                "type":"function",
                "description":"Calculates the cross product with another vector.",
                "args":[{
                    "name":"self"
                  },{
                    "name":"vec"
                  }],
                "returnTypes":[{
                    "name":"tes3vector3",
                    "type":"ref"
                  }],
                "argTypes":["tes3vector3"]
              },
              "length":{
                "type":"function",
                "description":"Calculates the length of the vector.",
                "args":[{
                    "name":"self"
                  }]
              },
              "distance":{
                "type":"function",
                "description":"Calculates the distance to another vector.",
                "args":[{
                    "name":"self"
                  },{
                    "name":"vec"
                  }],
                "returnTypes":[{
                    "type":"number"
                  }],
                "argTypes":["tes3vector3"]
              },
              "heightDifference":{
                "type":"function",
                "description":"Calculates the vertical distance to another vector.",
                "args":[{
                    "name":"self"
                  },{
                    "name":"vec"
                  }],
                "returnTypes":[{
                    "type":"number"
                  }],
                "argTypes":["tes3vector3"]
              },
              "dot":{
                "type":"function",
                "description":"Calculates the dot product with another vector.",
                "args":[{
                    "name":"self"
                  },{
                    "name":"vec"
                  }],
                "returnTypes":[{
                    "name":"tes3vector3",
                    "type":"ref"
                  }],
                "argTypes":["tes3vector3"]
              }
            },
            "type":"table"
          }
        },
        "type":"table"
      },
      "type":"table",
      "description":"A simple trio of floating-point numbers.",
      "fields":{
        "y":{
          "description":"The second value in the vector.",
          "type":"number"
        },
        "x":{
          "description":"The first value in the vector.",
          "type":"number"
        },
        "b":{
          "description":"The third value in the vector. An alias for z.",
          "type":"number"
        },
        "z":{
          "description":"The third value in the vector.",
          "type":"number"
        },
        "g":{
          "description":"The second value in the vector. An alias for y.",
          "type":"number"
        },
        "r":{
          "description":"The first value in the vector. An alias for x.",
          "type":"number"
        }
      }
    },
    "tes3rangeInt":{
      "type":"table",
      "description":"A simple pair of integers, typically used to define a range.",
      "fields":{
        "max":{
          "description":"The maximum value in the range.",
          "type":"number"
        },
        "min":{
          "description":"The minimum value in the range.",
          "type":"number"
        }
      }
    },
    "tes3book":{
      "type":"table",
      "description":"A book game object.",
      "fields":{
        "deleted":{
          "description":"The deleted state of the object.",
          "type":"boolean"
        },
        "disabled":{
          "description":"The disabled state of the object.",
          "type":"boolean"
        },
        "modified":{
          "description":"The modification state of the object since the last save.",
          "type":"boolean"
        },
        "sourceMod":{
          "description":"The filename of the mod that owns this object.",
          "type":"string"
        },
        "enchantment":{
          "type":"ref",
          "description":"The enchantment used by the object.",
          "name":"tes3enchantment"
        },
        "weight":{
          "description":"The weight, in pounds, of the object.",
          "type":"number"
        },
        "value":{
          "description":"The value of the object.",
          "type":"number"
        },
        "objectType":{
          "description":"The type of object. Maps to values in tes3.objectType.",
          "type":"number"
        },
        "mesh":{
          "description":"The path to the object's mesh.",
          "type":"string"
        },
        "boundingBox":{
          "type":"ref",
          "description":"The bounding box for the object.",
          "name":"tes3boundingBox"
        },
        "sceneGraphReference":{
          "type":"ref",
          "description":"The scene graph reference node for this object.",
          "name":"niNode"
        },
        "type":{
          "description":"The book type, where 0 is book and 1 is scroll.",
          "type":"number"
        },
        "script":{
          "type":"ref",
          "description":"The script that runs on the object.",
          "name":"tes3script"
        },
        "previousInCollection":{
          "type":"ref",
          "description":"The previous object in parent collection's list.",
          "name":"tes3object"
        },
        "id":{
          "description":"The unique identifier for the object.",
          "type":"string"
        },
        "text":{
          "description":"Loads and displays the text of the book.",
          "type":"string"
        },
        "skill":{
          "description":"The skill learned from the book, or -1 if the book doesn't have one, or has already been read.",
          "type":"number"
        },
        "icon":{
          "description":"The path to the object's icon.",
          "type":"string"
        },
        "enchantCapacity":{
          "description":"The object's enchantment capacity.",
          "type":"number"
        },
        "name":{
          "description":"The player-facing name for the object.",
          "type":"string"
        },
        "sceneNode":{
          "type":"ref",
          "description":"The scene graph node for this object.",
          "name":"niNode"
        },
        "owningCollection":{
          "type":"ref",
          "description":"The collection responsible for holding this object.",
          "name":"tes3referenceList"
        },
        "nextInCollection":{
          "type":"ref",
          "description":"The next object in parent collection's list.",
          "name":"tes3object"
        },
        "objectFlags":{
          "description":"The raw flags of the object.",
          "type":"number"
        },
        "scale":{
          "description":"The object's scale.",
          "type":"number"
        }
      }
    },
    "tes3activator":{
      "type":"table",
      "description":"An activator game object.",
      "fields":{
        "deleted":{
          "description":"The deleted state of the object.",
          "type":"boolean"
        },
        "disabled":{
          "description":"The disabled state of the object.",
          "type":"boolean"
        },
        "modified":{
          "description":"The modification state of the object since the last save.",
          "type":"boolean"
        },
        "sourceMod":{
          "description":"The filename of the mod that owns this object.",
          "type":"string"
        },
        "objectType":{
          "description":"The type of object. Maps to values in tes3.objectType.",
          "type":"number"
        },
        "mesh":{
          "description":"The path to the object's mesh.",
          "type":"string"
        },
        "boundingBox":{
          "type":"ref",
          "description":"The bounding box for the object.",
          "name":"tes3boundingBox"
        },
        "sceneGraphReference":{
          "type":"ref",
          "description":"The scene graph reference node for this object.",
          "name":"niNode"
        },
        "sceneNode":{
          "type":"ref",
          "description":"The scene graph node for this object.",
          "name":"niNode"
        },
        "script":{
          "type":"ref",
          "description":"The script that runs on the object.",
          "name":"tes3script"
        },
        "previousInCollection":{
          "type":"ref",
          "description":"The previous object in parent collection's list.",
          "name":"tes3object"
        },
        "id":{
          "description":"The unique identifier for the object.",
          "type":"string"
        },
        "name":{
          "description":"The player-facing name for the object.",
          "type":"string"
        },
        "owningCollection":{
          "type":"ref",
          "description":"The collection responsible for holding this object.",
          "name":"tes3referenceList"
        },
        "nextInCollection":{
          "type":"ref",
          "description":"The next object in parent collection's list.",
          "name":"tes3object"
        },
        "objectFlags":{
          "description":"The raw flags of the object.",
          "type":"number"
        },
        "scale":{
          "description":"The object's scale.",
          "type":"number"
        }
      }
    },
    "tes3clothing":{
      "type":"table",
      "description":"A clothing game object.",
      "fields":{
        "deleted":{
          "description":"The deleted state of the object.",
          "type":"boolean"
        },
        "disabled":{
          "description":"The disabled state of the object.",
          "type":"boolean"
        },
        "modified":{
          "description":"The modification state of the object since the last save.",
          "type":"boolean"
        },
        "sourceMod":{
          "description":"The filename of the mod that owns this object.",
          "type":"string"
        },
        "enchantment":{
          "type":"ref",
          "description":"The enchantment used by the object.",
          "name":"tes3enchantment"
        },
        "isLeftPart":{
          "description":"Determines if the armor is the left part of a pair.",
          "type":"boolean"
        },
        "weight":{
          "description":"The weight, in pounds, of the object.",
          "type":"number"
        },
        "value":{
          "description":"The value of the object.",
          "type":"number"
        },
        "objectType":{
          "description":"The type of object. Maps to values in tes3.objectType.",
          "type":"number"
        },
        "icon":{
          "description":"The path to the object's icon.",
          "type":"string"
        },
        "boundingBox":{
          "type":"ref",
          "description":"The bounding box for the object.",
          "name":"tes3boundingBox"
        },
        "sceneGraphReference":{
          "type":"ref",
          "description":"The scene graph reference node for this object.",
          "name":"niNode"
        },
        "sceneNode":{
          "type":"ref",
          "description":"The scene graph node for this object.",
          "name":"niNode"
        },
        "script":{
          "type":"ref",
          "description":"The script that runs on the object.",
          "name":"tes3script"
        },
        "enchantCapacity":{
          "description":"The object's enchantment capacity.",
          "type":"number"
        },
        "id":{
          "description":"The unique identifier for the object.",
          "type":"string"
        },
        "parts":{
          "description":"An array-style table of the tes3wearablePart data on the object.",
          "type":"table"
        },
        "mesh":{
          "description":"The path to the object's mesh.",
          "type":"string"
        },
        "slotName":{
          "description":"The name of the slot used by the armor.",
          "type":"string"
        },
        "slot":{
          "description":"The slot used by the armor.",
          "type":"number"
        },
        "name":{
          "description":"The player-facing name for the object.",
          "type":"string"
        },
        "previousInCollection":{
          "type":"ref",
          "description":"The previous object in parent collection's list.",
          "name":"tes3object"
        },
        "owningCollection":{
          "type":"ref",
          "description":"The collection responsible for holding this object.",
          "name":"tes3referenceList"
        },
        "nextInCollection":{
          "type":"ref",
          "description":"The next object in parent collection's list.",
          "name":"tes3object"
        },
        "objectFlags":{
          "description":"The raw flags of the object.",
          "type":"number"
        },
        "scale":{
          "description":"The object's scale.",
          "type":"number"
        }
      }
    },
    "niAVObject":{
      "type":"table",
      "metatable":{
        "fields":{
          "__index":{
            "fields":{
              "removeController":{
                "type":"function",
                "description":"Removes a controller from the object.",
                "args":[{
                    "name":"self"
                  },{
                    "name":"type"
                  }],
                "argTypes":["niTimeController"]
              },
              "removeAllControllers":{
                "type":"function",
                "description":"Removes all controllers.",
                "args":[{
                    "name":"self"
                  }]
              },
              "prependController":{
                "type":"function",
                "description":"Add a controller to the object as the first controller.",
                "args":[{
                    "name":"self"
                  },{
                    "name":"type"
                  }],
                "argTypes":["niTimeController"]
              }
            },
            "type":"table"
          }
        },
        "type":"table"
      },
      "description":"The typical base type for most NetImmerse scene graph objects.",
      "fields":{
        "flags":{
          "description":"Flags, dependent on the specific object type.",
          "type":"number"
        },
        "name":{
          "description":"The human-facing name of the given object.",
          "type":"string"
        },
        "references":{
          "description":"The number of references that exist for the given object. When this value hits zero, the object's memory is freed.",
          "type":"string"
        },
        "runTimeTypeInformation":{
          "type":"ref",
          "description":"The runtime type information for this object.",
          "name":"niRTTI"
        },
        "rotation":{
          "type":"ref",
          "description":"The object's local rotation matrix.",
          "name":"tes3matrix33"
        }
      }
    },
    "tes3boundingBox":{
      "fields":{
        "max":{
          "type":"ref",
          "description":"The maximum bound of the box.",
          "name":"tes3vector3"
        },
        "min":{
          "type":"ref",
          "description":"The minimum bound of the box.",
          "name":"tes3vector3"
        }
      },
      "type":"table",
      "description":"A pair of vectors marking a bounding box.",
      "metatable":{
        "fields":{
          "__index":{
            "fields":{
              "copy":{
                "type":"function",
                "description":"Creates a copy of the bounding box.",
                "args":[{
                    "name":"self"
                  }]
              }
            },
            "type":"table"
          }
        },
        "type":"table"
      }
    },
    "tes3cellExteriorData":{
      "type":"table",
      "description":"A structure that contains a cell and its grid coordinates.",
      "fields":{
        "cell":{
          "type":"ref",
          "description":"The cell in the package.",
          "name":"tes3cell"
        },
        "gridX":{
          "description":"The cell in the package's X grid value.",
          "type":"number"
        },
        "gridY":{
          "description":"The cell in the package's Y grid value.",
          "type":"number"
        }
      }
    },
    "niObject":{
      "fields":{
        "runTimeTypeInformation":{
          "type":"ref",
          "description":"The runtime type information for this object.",
          "name":"niRTTI"
        },
        "references":{
          "description":"The number of references that exist for the given object. When this value hits zero, the object's memory is freed.",
          "type":"string"
        }
      },
      "type":"table",
      "description":"The base-most object from which almost all NetImmerse structures are derived from.",
      "metatable":{
        "fields":{
          "__index":{
            "fields":{
              "isInstanceOfType":{
                "type":"function",
                "description":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table.",
                "args":[{
                    "name":"self"
                  },{
                    "name":"type"
                  }],
                "returnTypes":[{
                    "type":"boolean"
                  }],
                "argTypes":["number"]
              },
              "clone":{
                "type":"function",
                "description":"Creates a copy of this object.",
                "args":[{
                    "name":"self"
                  }]
              },
              "isOfType":{
                "type":"function",
                "description":"Determines if the object is of a given type. Types can be found in the tes3.niType table.",
                "args":[{
                    "name":"self"
                  },{
                    "name":"type"
                  }],
                "returnTypes":[{
                    "type":"boolean"
                  }],
                "argTypes":["number"]
              }
            },
            "type":"table"
          }
        },
        "type":"table"
      }
    },
    "tes3lockNode":{
      "type":"table",
      "description":"An attachment-capable structure that maintains lock and trap data.",
      "fields":{
        "locked":{
          "description":"The locked state.",
          "type":"boolean"
        },
        "level":{
          "description":"The level of the lock.",
          "type":"number"
        },
        "key":{
          "type":"ref",
          "description":"The key that will open this door.",
          "name":"tes3misc"
        },
        "trap":{
          "type":"ref",
          "description":"The trap associated with the object.",
          "name":"tes3spell"
        }
      }
    },
    "tes3physicalObject":{
      "type":"table",
      "description":"Almost anything that can be represented in the Construction Set is based on this structure.",
      "fields":{
        "deleted":{
          "description":"The deleted state of the object.",
          "type":"boolean"
        },
        "sceneNode":{
          "type":"ref",
          "description":"The scene graph node for this object.",
          "name":"niNode"
        },
        "disabled":{
          "description":"The disabled state of the object.",
          "type":"boolean"
        },
        "previousInCollection":{
          "type":"ref",
          "description":"The previous object in parent collection's list.",
          "name":"tes3object"
        },
        "objectFlags":{
          "description":"The raw flags of the object.",
          "type":"number"
        },
        "sourceMod":{
          "description":"The filename of the mod that owns this object.",
          "type":"string"
        },
        "sceneGraphReference":{
          "type":"ref",
          "description":"The scene graph reference node for this object.",
          "name":"niNode"
        },
        "id":{
          "description":"The unique identifier for the object.",
          "type":"string"
        },
        "modified":{
          "description":"The modification state of the object since the last save.",
          "type":"boolean"
        },
        "objectType":{
          "description":"The type of object. Maps to values in tes3.objectType.",
          "type":"number"
        },
        "owningCollection":{
          "type":"ref",
          "description":"The collection responsible for holding this object.",
          "name":"tes3referenceList"
        },
        "nextInCollection":{
          "type":"ref",
          "description":"The next object in parent collection's list.",
          "name":"tes3object"
        },
        "scale":{
          "description":"The object's scale.",
          "type":"number"
        },
        "boundingBox":{
          "type":"ref",
          "description":"The bounding box for the object.",
          "name":"tes3boundingBox"
        }
      }
    },
    "tes3class":{
      "type":"table",
      "description":"A core object representing a character class.",
      "fields":{
        "disabled":{
          "description":"The disabled state of the object.",
          "type":"boolean"
        },
        "objectFlags":{
          "description":"The raw flags of the object.",
          "type":"number"
        },
        "sourceMod":{
          "description":"The filename of the mod that owns this object.",
          "type":"string"
        },
        "bartersBooks":{
          "description":"If true, the class will barter book items.",
          "type":"boolean"
        },
        "bartersWeapons":{
          "description":"If true, the class will barter weapon items.",
          "type":"boolean"
        },
        "specialization":{
          "description":"The specialization for the class. Maps to the tes3.specialization table.",
          "type":"number"
        },
        "objectType":{
          "description":"The type of object. Maps to values in tes3.objectType.",
          "type":"number"
        },
        "bartersArmor":{
          "description":"If true, the class will barter armor items.",
          "type":"boolean"
        },
        "playable":{
          "description":"If true, the class is selectable at character generation.",
          "type":"boolean"
        },
        "bartersAlchemy":{
          "description":"If true, the class will barter alchemy items.",
          "type":"boolean"
        },
        "offersSpells":{
          "description":"If true, the class will offer spell selling services.",
          "type":"boolean"
        },
        "minorSkills":{
          "description":"An array-style table of the 5 skills IDs associated with the class' major skills.",
          "type":"table"
        },
        "skills":{
          "description":"An array-style table of the 10 skills IDs associated with the class. For major or minor skills specifically, use the majorSkills and MinorSkills properties.",
          "type":"table"
        },
        "deleted":{
          "description":"The deleted state of the object.",
          "type":"boolean"
        },
        "bartersMiscItems":{
          "description":"If true, the class will barter misc items.",
          "type":"boolean"
        },
        "modified":{
          "description":"The modification state of the object since the last save.",
          "type":"boolean"
        },
        "bartersRepairTools":{
          "description":"If true, the class will barter repair items.",
          "type":"boolean"
        },
        "bartersApparatus":{
          "description":"If true, the class will barter apparatus items.",
          "type":"boolean"
        },
        "offersTraining":{
          "description":"If true, the class will offer spell training services.",
          "type":"boolean"
        },
        "description":{
          "description":"Loads from disk and returns the description of the class.",
          "type":"string"
        },
        "bartersLights":{
          "description":"If true, the class will barter light items.",
          "type":"boolean"
        },
        "id":{
          "description":"The unique identifier for the object.",
          "type":"string"
        },
        "bartersIngredients":{
          "description":"If true, the class will barter ingredient items.",
          "type":"boolean"
        },
        "bartersEnchantedItems":{
          "description":"If true, the class will barter enchanted items.",
          "type":"boolean"
        },
        "bartersClothing":{
          "description":"If true, the class will barter clothing items.",
          "type":"boolean"
        },
        "offersRepairs":{
          "description":"If true, the class will offer enchanting services.",
          "type":"boolean"
        },
        "bartersProbes":{
          "description":"If true, the class will barter probe items.",
          "type":"boolean"
        },
        "bartersLockpicks":{
          "description":"If true, the class will barter lockpick items.",
          "type":"boolean"
        },
        "name":{
          "description":"The player-facing name for the object.",
          "type":"string"
        },
        "offersEnchanting":{
          "description":"If true, the class will offer repair services.",
          "type":"boolean"
        },
        "attributes":{
          "description":"An array-style table of the two attribute IDs associated with the class.",
          "type":"table"
        },
        "majorSkills":{
          "description":"An array-style table of the 5 skills IDs associated with the class' major skills.",
          "type":"table"
        },
        "offersSpellmaking":{
          "description":"If true, the class will offer spellmaking services.",
          "type":"boolean"
        }
      }
    },
    "tes3transform":{
      "fields":{
        "scale":{
          "description":"The transform's scale.",
          "type":"number"
        },
        "rotation":{
          "type":"ref",
          "description":"The transform's rotation matrix.",
          "name":"tes3matrix33"
        },
        "translation":{
          "type":"ref",
          "description":"The transform's translation vector.",
          "name":"tes3vector3"
        }
      },
      "type":"table",
      "description":"A rotation matrix, translation vector, and scale that marks an object's transformation.",
      "metatable":{
        "fields":{
          "__index":{
            "fields":{
              "copy":{
                "type":"function",
                "description":"Creates a copy of the transform.",
                "args":[{
                    "name":"self"
                  }]
              }
            },
            "type":"table"
          }
        },
        "type":"table"
      }
    },
    "file":{
      "type":"table",
      "metatable":{
        "fields":{
          "__index":{
            "fields":{
              "setvbuf":{
                "argsDisplay":"self, mode [, size]",
                "type":"function",
                "description":"Sets the buffering mode for an output file. There are three available modes:",
                "link":"https://www.lua.org/manual/5.1/manual.html#pdf-file:setvbuf",
                "argsDisplayOmitSelf":"mode [, size]",
                "args":[{
                    "name":"self"
                  },{
                    "name":"mode"
                  }]
              },
              "lines":{
                "argsDisplay":"self, ···",
                "type":"function",
                "description":"Returns an iterator function that, each time it is called, reads the file according to the given formats. When no format is given, uses \"*l\" as a default. As an example, the construction",
                "link":"https://www.lua.org/manual/5.2/manual.html#pdf-file:lines",
                "argsDisplayOmitSelf":"···",
                "args":[{
                    "name":"self"
                  }]
              },
              "write":{
                "argsDisplay":"self, ···",
                "type":"function",
                "description":"Writes the value of each of its arguments to the file. The arguments must be strings or numbers. To write other values, use tostring or string.format before write.",
                "link":"https://www.lua.org/manual/5.1/manual.html#pdf-file:write",
                "argsDisplayOmitSelf":"···",
                "args":[{
                    "name":"self"
                  }]
              },
              "close":{
                "argsDisplay":"self",
                "type":"function",
                "description":"Closes file. Note that files are automatically closed when their handles are garbage collected, but that takes an unpredictable amount of time to happen.",
                "link":"https://www.lua.org/manual/5.1/manual.html#pdf-file:close",
                "argsDisplayOmitSelf":"",
                "args":[{
                    "name":"self"
                  }]
              },
              "flush":{
                "argsDisplay":"self",
                "type":"function",
                "description":"Saves any written data to file.",
                "link":"https://www.lua.org/manual/5.1/manual.html#pdf-file:flush",
                "argsDisplayOmitSelf":"",
                "args":[{
                    "name":"self"
                  }]
              },
              "seek":{
                "argsDisplay":"self, [whence] [, offset]",
                "type":"function",
                "description":"Sets and gets the file position, measured from the beginning of the file, to the position given by offset plus a base specified by the string whence, as follows:",
                "link":"https://www.lua.org/manual/5.1/manual.html#pdf-file:seek",
                "argsDisplayOmitSelf":"[whence] [, offset]",
                "args":[{
                    "name":"self"
                  }]
              },
              "read":{
                "argsDisplay":"self, ···",
                "type":"function",
                "description":"Reads the file file, according to the given formats, which specify what to read. For each format, the function returns a string (or a number) with the characters read, or nil if it cannot read data with the specified format. When called without formats, it uses a default format that reads the entire next line (see below).",
                "link":"https://www.lua.org/manual/5.1/manual.html#pdf-file:read",
                "argsDisplayOmitSelf":"···",
                "args":[{
                    "name":"self"
                  }]
              }
            },
            "type":"table"
          }
        },
        "type":"table"
      },
      "fields":{
      }
    },
    "tes3object":{
      "type":"table",
      "description":"Almost anything that can be represented in the Construction Set is based on this structure.",
      "fields":{
        "sceneGraphReference":{
          "type":"ref",
          "description":"The scene graph reference node for this object.",
          "name":"niNode"
        },
        "sceneNode":{
          "type":"ref",
          "description":"The scene graph node for this object.",
          "name":"niNode"
        },
        "disabled":{
          "description":"The disabled state of the object.",
          "type":"boolean"
        },
        "previousInCollection":{
          "type":"ref",
          "description":"The previous object in parent collection's list.",
          "name":"tes3object"
        },
        "objectFlags":{
          "description":"The raw flags of the object.",
          "type":"number"
        },
        "sourceMod":{
          "description":"The filename of the mod that owns this object.",
          "type":"string"
        },
        "deleted":{
          "description":"The deleted state of the object.",
          "type":"boolean"
        },
        "nextInCollection":{
          "type":"ref",
          "description":"The next object in parent collection's list.",
          "name":"tes3object"
        },
        "scale":{
          "description":"The object's scale.",
          "type":"number"
        },
        "owningCollection":{
          "type":"ref",
          "description":"The collection responsible for holding this object.",
          "name":"tes3referenceList"
        },
        "objectType":{
          "description":"The type of object. Maps to values in tes3.objectType.",
          "type":"number"
        },
        "modified":{
          "description":"The modification state of the object since the last save.",
          "type":"boolean"
        },
        "id":{
          "description":"The unique identifier for the object.",
          "type":"string"
        }
      }
    },
    "tes3matrix33":{
      "fields":{
        "y":{
          "type":"ref",
          "description":"A copy of the second row of the matrix.",
          "name":"tes3vector3"
        },
        "x":{
          "type":"ref",
          "description":"A copy of the first row of the matrix.",
          "name":"tes3vector3"
        },
        "z":{
          "type":"ref",
          "description":"A copy of the third row of the matrix.",
          "name":"tes3vector3"
        }
      },
      "type":"table",
      "description":"A 3 by 3 matrix.",
      "metatable":{
        "fields":{
          "__index":{
            "fields":{
              "fromEulerXYZ":{
                "type":"function",
                "description":"Fills the matrix with values from euler coordinates.",
                "args":[{
                    "name":"self"
                  },{
                    "name":"x"
                  },{
                    "name":"y"
                  },{
                    "name":"z"
                  }],
                "argTypes":["number","number","number"]
              },
              "toRotationY":{
                "type":"function",
                "argTypes":["number"],
                "args":[{
                    "name":"self"
                  },{
                    "name":"y"
                  }]
              },
              "toRotationX":{
                "type":"function",
                "argTypes":["number"],
                "args":[{
                    "name":"self"
                  },{
                    "name":"x"
                  }]
              },
              "toRotationZ":{
                "type":"function",
                "argTypes":["number"],
                "args":[{
                    "name":"self"
                  },{
                    "name":"z"
                  }]
              },
              "toIdentity":{
                "type":"function",
                "description":"Converts the matrix to the identity matrix's values.",
                "args":[{
                    "name":"self"
                  }]
              },
              "copy":{
                "type":"function",
                "description":"Creates a copy of the matrix.",
                "args":[{
                    "name":"self"
                  }]
              },
              "transpose":{
                "args":[{
                    "name":"self"
                  }],
                "type":"function"
              },
              "toZero":{
                "type":"function",
                "description":"Zeroes out all values in the matrix.",
                "args":[{
                    "name":"self"
                  }]
              },
              "toRotation":{
                "type":"function",
                "argTypes":["number","number","number","number"],
                "args":[{
                    "name":"self"
                  },{
                    "name":"angle"
                  },{
                    "name":"x"
                  },{
                    "name":"y"
                  },{
                    "name":"z"
                  }]
              },
              "invert":{
                "type":"function",
                "description":"Inverts the matrix.",
                "args":[{
                    "name":"self"
                  }]
              },
              "fromEulerZYX":{
                "type":"function",
                "description":"Fills the matrix with values from euler coordinates.",
                "args":[{
                    "name":"self"
                  },{
                    "name":"z"
                  },{
                    "name":"y"
                  },{
                    "name":"x"
                  }],
                "argTypes":["number","number","number"]
              },
              "reorthogonalize":{
                "type":"function",
                "description":"Reorthogonalizes the matrix.",
                "args":[{
                    "name":"self"
                  }]
              }
            },
            "type":"table"
          }
        },
        "type":"table"
      }
    }
  },
  "luaVersion":"luajit-2.0",
  "packagePath":"./core/?.lua,./core/?/init.lua,./lib/?.lua,./lib/?/init.lua,./mods/?.lua,./mods/?/init.lua"
}